#blocked = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [32, 1], warpsPerCTA = [2, 2], order = [0, 1]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [2, 2], order = [1, 0]}>
#loc = loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":9:0)
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 4 : i32, ttg.target = "cuda:75", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @matrix_transpose_kernel(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":9:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":9:0), %arg2: i32 loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":9:0), %arg3: i32 loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":9:0)) attributes {noinline = false} {
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.get_program_id y : i32 loc(#loc3)
    %2 = arith.muli %0, %c64_i32 : i32 loc(#loc4)
    %3 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc5)
    %4 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc5)
    %5 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc5)
    %6 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc5)
    %7 = tt.splat %2 : i32 -> tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc6)
    %8 = tt.splat %2 : i32 -> tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc6)
    %9 = tt.splat %2 : i32 -> tensor<64xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc6)
    %10 = arith.addi %7, %3 : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc6)
    %11 = arith.addi %8, %4 : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc6)
    %12 = arith.addi %9, %6 : tensor<64xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc6)
    %13 = arith.muli %1, %c64_i32 : i32 loc(#loc7)
    %14 = tt.splat %13 : i32 -> tensor<64xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc8)
    %15 = tt.splat %13 : i32 -> tensor<64xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc8)
    %16 = tt.splat %13 : i32 -> tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc8)
    %17 = arith.addi %14, %5 : tensor<64xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc8)
    %18 = arith.addi %15, %6 : tensor<64xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc8)
    %19 = arith.addi %16, %4 : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc8)
    %20 = tt.expand_dims %10 {axis = 1 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<64x1xi32, #blocked> loc(#loc9)
    %21 = tt.expand_dims %11 {axis = 1 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<64x1xi32, #blocked1> loc(#loc9)
    %22 = tt.splat %arg3 : i32 -> tensor<64x1xi32, #blocked1> loc(#loc10)
    %23 = arith.muli %21, %22 : tensor<64x1xi32, #blocked1> loc(#loc10)
    %24 = tt.expand_dims %17 {axis = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x64xi32, #blocked> loc(#loc11)
    %25 = tt.expand_dims %18 {axis = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x64xi32, #blocked1> loc(#loc11)
    %26 = tt.broadcast %23 : tensor<64x1xi32, #blocked1> -> tensor<64x64xi32, #blocked1> loc(#loc12)
    %27 = tt.broadcast %25 : tensor<1x64xi32, #blocked1> -> tensor<64x64xi32, #blocked1> loc(#loc12)
    %28 = arith.addi %26, %27 : tensor<64x64xi32, #blocked1> loc(#loc12)
    %29 = tt.splat %arg2 : i32 -> tensor<64x1xi32, #blocked> loc(#loc13)
    %30 = tt.splat %arg2 : i32 -> tensor<64x1xi32, #blocked1> loc(#loc13)
    %31 = arith.cmpi slt, %20, %29 : tensor<64x1xi32, #blocked> loc(#loc13)
    %32 = arith.cmpi slt, %21, %30 : tensor<64x1xi32, #blocked1> loc(#loc13)
    %33 = tt.splat %arg3 : i32 -> tensor<1x64xi32, #blocked> loc(#loc14)
    %34 = tt.splat %arg3 : i32 -> tensor<1x64xi32, #blocked1> loc(#loc14)
    %35 = arith.cmpi slt, %24, %33 : tensor<1x64xi32, #blocked> loc(#loc14)
    %36 = arith.cmpi slt, %25, %34 : tensor<1x64xi32, #blocked1> loc(#loc14)
    %37 = tt.broadcast %31 : tensor<64x1xi1, #blocked> -> tensor<64x64xi1, #blocked> loc(#loc15)
    %38 = tt.broadcast %32 : tensor<64x1xi1, #blocked1> -> tensor<64x64xi1, #blocked1> loc(#loc15)
    %39 = tt.broadcast %35 : tensor<1x64xi1, #blocked> -> tensor<64x64xi1, #blocked> loc(#loc15)
    %40 = tt.broadcast %36 : tensor<1x64xi1, #blocked1> -> tensor<64x64xi1, #blocked1> loc(#loc15)
    %41 = arith.andi %37, %39 : tensor<64x64xi1, #blocked> loc(#loc15)
    %42 = tt.trans %41 {order = array<i32: 1, 0>} : tensor<64x64xi1, #blocked> -> tensor<64x64xi1, #blocked1> loc(#loc16)
    %43 = arith.andi %38, %40 : tensor<64x64xi1, #blocked1> loc(#loc15)
    %44 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<64x64x!tt.ptr<f32>, #blocked1> loc(#loc17)
    %45 = tt.addptr %44, %28 : tensor<64x64x!tt.ptr<f32>, #blocked1>, tensor<64x64xi32, #blocked1> loc(#loc17)
    %46 = tt.load %45, %43 : tensor<64x64x!tt.ptr<f32>, #blocked1> loc(#loc18)
    %47 = tt.trans %46 {order = array<i32: 1, 0>} : tensor<64x64xf32, #blocked1> -> tensor<64x64xf32, #blocked> loc(#loc19)
    %48 = tt.expand_dims %19 {axis = 1 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<64x1xi32, #blocked1> loc(#loc20)
    %49 = arith.muli %48, %30 : tensor<64x1xi32, #blocked1> loc(#loc21)
    %50 = tt.expand_dims %12 {axis = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x64xi32, #blocked1> loc(#loc22)
    %51 = tt.broadcast %49 : tensor<64x1xi32, #blocked1> -> tensor<64x64xi32, #blocked1> loc(#loc23)
    %52 = tt.broadcast %50 : tensor<1x64xi32, #blocked1> -> tensor<64x64xi32, #blocked1> loc(#loc23)
    %53 = arith.addi %51, %52 : tensor<64x64xi32, #blocked1> loc(#loc23)
    %54 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<64x64x!tt.ptr<f32>, #blocked1> loc(#loc24)
    %55 = tt.addptr %54, %53 : tensor<64x64x!tt.ptr<f32>, #blocked1>, tensor<64x64xi32, #blocked1> loc(#loc24)
    %56 = ttg.convert_layout %47 : tensor<64x64xf32, #blocked> -> tensor<64x64xf32, #blocked1> loc(#loc25)
    tt.store %55, %56, %42 : tensor<64x64x!tt.ptr<f32>, #blocked1> loc(#loc25)
    tt.return loc(#loc26)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":10:30)
#loc3 = loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":11:30)
#loc4 = loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":12:27)
#loc5 = loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":12:53)
#loc6 = loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":12:40)
#loc7 = loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":13:27)
#loc8 = loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":13:40)
#loc9 = loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":14:24)
#loc10 = loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":14:35)
#loc11 = loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":14:51)
#loc12 = loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":14:42)
#loc13 = loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":15:32)
#loc14 = loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":15:61)
#loc15 = loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":15:41)
#loc16 = loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":24:60)
#loc17 = loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":16:32)
#loc18 = loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":16:20)
#loc19 = loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":22:32)
#loc20 = loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":23:25)
#loc21 = loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":23:36)
#loc22 = loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":23:52)
#loc23 = loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":23:43)
#loc24 = loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":24:26)
#loc25 = loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":24:37)
#loc26 = loc("/root/triton-runner/debug_tool/python/02-matrix_transpose/debug_2d_load.py":24:4)
