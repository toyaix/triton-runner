#blocked = #ttg.blocked<{sizePerThread = [4, 4], threadsPerWarp = [2, 16], warpsPerCTA = [4, 1], order = [1, 0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 8], threadsPerWarp = [4, 8], warpsPerCTA = [4, 1], order = [1, 0]}>
#blocked2 = #ttg.blocked<{sizePerThread = [8, 1], threadsPerWarp = [8, 4], warpsPerCTA = [1, 4], order = [0, 1]}>
#loc = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":11:0)
#loc1 = loc(unknown)
#loc54 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":130:42)
#loc63 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":135:25)
#shared = #ttg.swizzled_shared<{vec = 1, perPhase = 1, maxPhase = 1, order = [1, 0]}>
#shared1 = #ttg.swizzled_shared<{vec = 1, perPhase = 1, maxPhase = 1, order = [0, 1]}>
#smem = #ttg.shared_memory
#loc82 = loc(callsite(#loc1 at #loc54))
#loc84 = loc(callsite(#loc1 at #loc63))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 4 : i32, ttg.target = "cuda:75", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @_attn_fwd(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":11:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":11:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":11:0), %arg3: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":11:0), %arg4: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":11:0), %arg5: f32 loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":11:0), %arg6: !tt.ptr<i32> {tt.divisibility = 16 : i32} loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":11:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":11:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":11:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":11:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":11:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":11:0), %arg12: i32 {tt.divisibility = 16 : i32} loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":11:0), %arg13: i32 {tt.divisibility = 16 : i32} loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":11:0), %arg14: i32 {tt.divisibility = 16 : i32} loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":11:0), %arg15: i32 {tt.divisibility = 16 : i32} loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":11:0), %arg16: i32 {tt.divisibility = 16 : i32} loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":11:0), %arg17: i32 {tt.divisibility = 16 : i32} loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":11:0), %arg18: i32 {tt.divisibility = 16 : i32} loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":11:0), %arg19: i32 {tt.divisibility = 16 : i32} loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":11:0), %arg20: i32 {tt.divisibility = 16 : i32} loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":11:0), %arg21: i32 {tt.divisibility = 16 : i32} loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":11:0)) attributes {noinline = false} {
    %cst = arith.constant dense<-1.000000e+06> : tensor<64x64xf32, #blocked> loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst_0 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c64_i64 = arith.constant 64 : i64 loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<64x64xf32, #blocked> loc(#loc1)
    %0 = tt.load %arg6 : !tt.ptr<i32> loc(#loc2)
    %1 = tt.get_program_id x : i32 loc(#loc3)
    %2 = tt.get_program_id y : i32 loc(#loc4)
    %3 = arith.divsi %2, %arg19 : i32 loc(#loc5)
    %4 = arith.remsi %2, %arg19 : i32 loc(#loc6)
    %5 = arith.extsi %3 : i32 to i64 loc(#loc7)
    %6 = arith.extsi %arg7 : i32 to i64 loc(#loc8)
    %7 = arith.muli %5, %6 : i64 loc(#loc8)
    %8 = arith.extsi %4 : i32 to i64 loc(#loc9)
    %9 = arith.extsi %arg8 : i32 to i64 loc(#loc10)
    %10 = arith.muli %8, %9 : i64 loc(#loc10)
    %11 = arith.addi %7, %10 : i64 loc(#loc11)
    %12 = arith.extsi %arg10 : i32 to i64 loc(#loc12)
    %13 = arith.muli %5, %12 : i64 loc(#loc12)
    %14 = arith.extsi %arg11 : i32 to i64 loc(#loc13)
    %15 = arith.muli %8, %14 : i64 loc(#loc13)
    %16 = arith.addi %13, %15 : i64 loc(#loc14)
    %17 = arith.extsi %arg13 : i32 to i64 loc(#loc15)
    %18 = arith.muli %5, %17 : i64 loc(#loc15)
    %19 = arith.extsi %arg14 : i32 to i64 loc(#loc16)
    %20 = arith.muli %8, %19 : i64 loc(#loc16)
    %21 = arith.addi %18, %20 : i64 loc(#loc17)
    %22 = arith.extsi %arg16 : i32 to i64 loc(#loc18)
    %23 = arith.muli %5, %22 : i64 loc(#loc18)
    %24 = arith.extsi %arg17 : i32 to i64 loc(#loc19)
    %25 = arith.muli %8, %24 : i64 loc(#loc19)
    %26 = arith.addi %23, %25 : i64 loc(#loc20)
    %27 = tt.addptr %arg0, %11 : !tt.ptr<bf16>, i64 loc(#loc21)
    %28 = arith.muli %1, %c64_i32 : i32 loc(#loc22)
    %29 = arith.extsi %arg9 : i32 to i64 loc(#loc23)
    %30 = arith.extsi %28 : i32 to i64 loc(#loc23)
    %31 = tt.addptr %arg2, %21 : !tt.ptr<bf16>, i64 loc(#loc24)
    %32 = arith.extsi %arg15 : i32 to i64 loc(#loc25)
    %33 = tt.addptr %arg1, %16 : !tt.ptr<bf16>, i64 loc(#loc26)
    %34 = arith.extsi %arg12 : i32 to i64 loc(#loc27)
    %35 = tt.addptr %arg4, %26 : !tt.ptr<bf16>, i64 loc(#loc28)
    %36 = arith.extsi %arg18 : i32 to i64 loc(#loc29)
    %37 = tt.addptr %arg3, %4 : !tt.ptr<bf16>, i32 loc(#loc30)
    %38 = tt.load %37 : !tt.ptr<bf16> loc(#loc31)
    %39 = arith.extf %38 : bf16 to f32 loc(#loc32)
    %40 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc33)
    %41 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked2}>> loc(#loc33)
    %42 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc33)
    %43 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc33)
    %44 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 0, parent = #blocked2}>> loc(#loc33)
    %45 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc33)
    %46 = tt.splat %28 : i32 -> tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc34)
    %47 = arith.addi %46, %42 : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc34)
    %48 = arith.addf %39, %cst_0 : f32 loc(#loc35)
    %49 = tt.splat %48 : f32 -> tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc35)
    %50 = tt.splat %27 : !tt.ptr<bf16> -> tensor<64x64x!tt.ptr<bf16>, #blocked1> loc(#loc36)
    %51 = tt.splat %30 : i64 -> tensor<64xi64, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc36)
    %52 = arith.extsi %40 : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> to tensor<64xi64, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc36)
    %53 = arith.extsi %41 : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked2}>> to tensor<64xi64, #ttg.slice<{dim = 1, parent = #blocked2}>> loc(#loc36)
    %54 = arith.extsi %43 : tensor<64xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> to tensor<64xi64, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc36)
    %55 = arith.extsi %44 : tensor<64xi32, #ttg.slice<{dim = 0, parent = #blocked2}>> to tensor<64xi64, #ttg.slice<{dim = 0, parent = #blocked2}>> loc(#loc36)
    %56 = arith.addi %51, %52 : tensor<64xi64, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc36)
    %57 = tt.expand_dims %56 {axis = 1 : i32} : tensor<64xi64, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<64x1xi64, #blocked1> loc(#loc36)
    %58 = tt.splat %29 : i64 -> tensor<64x1xi64, #blocked1> loc(#loc36)
    %59 = arith.muli %57, %58 : tensor<64x1xi64, #blocked1> loc(#loc36)
    %60 = tt.broadcast %59 : tensor<64x1xi64, #blocked1> -> tensor<64x64xi64, #blocked1> loc(#loc36)
    %61 = tt.expand_dims %54 {axis = 0 : i32} : tensor<64xi64, #ttg.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x64xi64, #blocked1> loc(#loc36)
    %62 = tt.broadcast %61 : tensor<1x64xi64, #blocked1> -> tensor<64x64xi64, #blocked1> loc(#loc36)
    %63 = arith.addi %60, %62 : tensor<64x64xi64, #blocked1> loc(#loc36)
    %64 = tt.addptr %50, %63 : tensor<64x64x!tt.ptr<bf16>, #blocked1>, tensor<64x64xi64, #blocked1> loc(#loc36)
    %65 = tt.load %64 : tensor<64x64x!tt.ptr<bf16>, #blocked1> loc(#loc36)
    %66 = arith.addi %1, %c1_i32 : i32 loc(#loc37)
    %67 = arith.muli %66, %c64_i32 : i32 loc(#loc38)
    %68 = arith.addi %0, %67 : i32 loc(#loc39)
    %69 = arith.extsi %0 : i32 to i64 loc(#loc40)
    %70 = tt.splat %0 : i32 -> tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc41)
    %71 = arith.addi %70, %47 : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc41)
    %72 = tt.expand_dims %71 {axis = 1 : i32} : tensor<64xi32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<64x1xi32, #blocked> loc(#loc42)
    %73 = tt.broadcast %72 : tensor<64x1xi32, #blocked> -> tensor<64x64xi32, #blocked> loc(#loc43)
    %74 = tt.splat %33 : !tt.ptr<bf16> -> tensor<64x64x!tt.ptr<bf16>, #blocked2> loc(#loc44)
    %75 = tt.expand_dims %53 {axis = 1 : i32} : tensor<64xi64, #ttg.slice<{dim = 1, parent = #blocked2}>> -> tensor<64x1xi64, #blocked2> loc(#loc44)
    %76 = tt.broadcast %75 : tensor<64x1xi64, #blocked2> -> tensor<64x64xi64, #blocked2> loc(#loc44)
    %77 = tt.splat %34 : i64 -> tensor<1x64xi64, #blocked2> loc(#loc44)
    %78 = arith.extf %65 : tensor<64x64xbf16, #blocked1> to tensor<64x64xf32, #blocked1> loc(#loc45)
    %79 = ttg.local_alloc %78 : (tensor<64x64xf32, #blocked1>) -> !ttg.memdesc<64x64xf32, #shared, #smem> loc(#loc45)
    %80 = tt.splat %arg5 : f32 -> tensor<64x64xf32, #blocked> loc(#loc46)
    %81 = tt.splat %31 : !tt.ptr<bf16> -> tensor<64x64x!tt.ptr<bf16>, #blocked1> loc(#loc47)
    %82 = tt.splat %32 : i64 -> tensor<64x1xi64, #blocked1> loc(#loc47)
    %83:4 = scf.for %arg22 = %0 to %68 step %c64_i32 iter_args(%arg23 = %cst_2, %arg24 = %cst_1, %arg25 = %49, %arg26 = %69) -> (tensor<64x64xf32, #blocked>, tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>>, tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>>, i64)  : i32 {
      %99 = tt.splat %arg22 : i32 -> tensor<64xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc49)
      %100 = arith.addi %99, %45 : tensor<64xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc49)
      %101 = tt.expand_dims %100 {axis = 0 : i32} : tensor<64xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x64xi32, #blocked> loc(#loc50)
      %102 = tt.broadcast %101 : tensor<1x64xi32, #blocked> -> tensor<64x64xi32, #blocked> loc(#loc43)
      %103 = arith.cmpi sgt, %102, %73 : tensor<64x64xi32, #blocked> loc(#loc43)
      %104 = tt.splat %arg26 : i64 -> tensor<64xi64, #ttg.slice<{dim = 0, parent = #blocked2}>> loc(#loc44)
      %105 = arith.addi %104, %55 : tensor<64xi64, #ttg.slice<{dim = 0, parent = #blocked2}>> loc(#loc44)
      %106 = tt.expand_dims %105 {axis = 0 : i32} : tensor<64xi64, #ttg.slice<{dim = 0, parent = #blocked2}>> -> tensor<1x64xi64, #blocked2> loc(#loc44)
      %107 = arith.muli %106, %77 : tensor<1x64xi64, #blocked2> loc(#loc44)
      %108 = tt.broadcast %107 : tensor<1x64xi64, #blocked2> -> tensor<64x64xi64, #blocked2> loc(#loc44)
      %109 = arith.addi %76, %108 : tensor<64x64xi64, #blocked2> loc(#loc44)
      %110 = tt.addptr %74, %109 : tensor<64x64x!tt.ptr<bf16>, #blocked2>, tensor<64x64xi64, #blocked2> loc(#loc44)
      %111 = tt.load %110 : tensor<64x64x!tt.ptr<bf16>, #blocked2> loc(#loc44)
      %112 = arith.extf %111 : tensor<64x64xbf16, #blocked2> to tensor<64x64xf32, #blocked2> loc(#loc45)
      %113 = ttg.local_alloc %112 : (tensor<64x64xf32, #blocked2>) -> !ttg.memdesc<64x64xf32, #shared1, #smem> loc(#loc45)
      %114 = ttg.local_load %79 : !ttg.memdesc<64x64xf32, #shared, #smem> -> tensor<64x64xf32, #ttg.dot_op<{opIdx = 0, parent = #blocked}>> loc(#loc45)
      %115 = ttg.local_load %113 : !ttg.memdesc<64x64xf32, #shared1, #smem> -> tensor<64x64xf32, #ttg.dot_op<{opIdx = 1, parent = #blocked}>> loc(#loc45)
      %116 = tt.dot %114, %115, %cst_2 : tensor<64x64xf32, #ttg.dot_op<{opIdx = 0, parent = #blocked}>> * tensor<64x64xf32, #ttg.dot_op<{opIdx = 1, parent = #blocked}>> -> tensor<64x64xf32, #blocked> loc(#loc45)
      %117 = arith.mulf %116, %80 : tensor<64x64xf32, #blocked> loc(#loc46)
      %118 = arith.select %103, %cst, %cst_2 : tensor<64x64xi1, #blocked>, tensor<64x64xf32, #blocked> loc(#loc51)
      %119 = arith.addf %117, %118 : tensor<64x64xf32, #blocked> loc(#loc52)
      %120 = "tt.reduce"(%119) <{axis = 1 : i32}> ({
      ^bb0(%arg27: f32 loc(callsite(#loc1 at #loc54)), %arg28: f32 loc(callsite(#loc1 at #loc54))):
        %149 = arith.maxnumf %arg27, %arg28 : f32 loc(#loc85)
        tt.reduce.return %149 : f32 loc(#loc81)
      }) : (tensor<64x64xf32, #blocked>) -> tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc81)
      %121 = arith.maxnumf %arg25, %120 : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc56)
      %122 = tt.expand_dims %121 {axis = 1 : i32} : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<64x1xf32, #blocked> loc(#loc57)
      %123 = tt.broadcast %122 : tensor<64x1xf32, #blocked> -> tensor<64x64xf32, #blocked> loc(#loc58)
      %124 = arith.subf %119, %123 : tensor<64x64xf32, #blocked> loc(#loc58)
      %125 = math.exp %124 : tensor<64x64xf32, #blocked> loc(#loc59)
      %126 = ttg.local_alloc %125 : (tensor<64x64xf32, #blocked>) -> !ttg.memdesc<64x64xf32, #shared, #smem> loc(#loc59)
      %127 = arith.subf %arg25, %121 : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc60)
      %128 = math.exp %127 : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc61)
      %129 = "tt.reduce"(%125) <{axis = 1 : i32}> ({
      ^bb0(%arg27: f32 loc(callsite(#loc1 at #loc63)), %arg28: f32 loc(callsite(#loc1 at #loc63))):
        %149 = arith.addf %arg27, %arg28 : f32 loc(#loc86)
        tt.reduce.return %149 : f32 loc(#loc83)
      }) : (tensor<64x64xf32, #blocked>) -> tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc83)
      %130 = tt.expand_dims %128 {axis = 1 : i32} : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<64x1xf32, #blocked> loc(#loc65)
      %131 = tt.broadcast %130 : tensor<64x1xf32, #blocked> -> tensor<64x64xf32, #blocked> loc(#loc66)
      %132 = arith.mulf %arg23, %131 : tensor<64x64xf32, #blocked> loc(#loc66)
      %133 = tt.splat %arg26 : i64 -> tensor<64xi64, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc47)
      %134 = arith.addi %133, %52 : tensor<64xi64, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc47)
      %135 = tt.expand_dims %134 {axis = 1 : i32} : tensor<64xi64, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<64x1xi64, #blocked1> loc(#loc47)
      %136 = arith.muli %135, %82 : tensor<64x1xi64, #blocked1> loc(#loc47)
      %137 = tt.broadcast %136 : tensor<64x1xi64, #blocked1> -> tensor<64x64xi64, #blocked1> loc(#loc47)
      %138 = arith.addi %137, %62 : tensor<64x64xi64, #blocked1> loc(#loc47)
      %139 = tt.addptr %81, %138 : tensor<64x64x!tt.ptr<bf16>, #blocked1>, tensor<64x64xi64, #blocked1> loc(#loc47)
      %140 = tt.load %139 : tensor<64x64x!tt.ptr<bf16>, #blocked1> loc(#loc47)
      %141 = arith.extf %140 : tensor<64x64xbf16, #blocked1> to tensor<64x64xf32, #blocked1> loc(#loc67)
      %142 = ttg.local_alloc %141 : (tensor<64x64xf32, #blocked1>) -> !ttg.memdesc<64x64xf32, #shared, #smem> loc(#loc67)
      %143 = ttg.local_load %126 : !ttg.memdesc<64x64xf32, #shared, #smem> -> tensor<64x64xf32, #ttg.dot_op<{opIdx = 0, parent = #blocked}>> loc(#loc59)
      %144 = ttg.local_load %142 : !ttg.memdesc<64x64xf32, #shared, #smem> -> tensor<64x64xf32, #ttg.dot_op<{opIdx = 1, parent = #blocked}>> loc(#loc67)
      %145 = tt.dot %143, %144, %132 : tensor<64x64xf32, #ttg.dot_op<{opIdx = 0, parent = #blocked}>> * tensor<64x64xf32, #ttg.dot_op<{opIdx = 1, parent = #blocked}>> -> tensor<64x64xf32, #blocked> loc(#loc68)
      %146 = arith.mulf %arg24, %128 : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc69)
      %147 = arith.addf %146, %129 : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc70)
      %148 = arith.addi %arg26, %c64_i64 : i64 loc(#loc71)
      scf.yield %145, %147, %121, %148 : tensor<64x64xf32, #blocked>, tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>>, tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>>, i64 loc(#loc72)
    } {tt.divisibility_arg1 = dense<64> : tensor<1xi32>} loc(#loc48)
    %84 = tt.splat %39 : f32 -> tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc73)
    %85 = arith.subf %84, %83#2 : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc73)
    %86 = math.exp %85 : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc74)
    %87 = arith.addf %83#1, %86 : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc75)
    %88 = tt.expand_dims %87 {axis = 1 : i32} : tensor<64xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<64x1xf32, #blocked> loc(#loc76)
    %89 = tt.broadcast %88 : tensor<64x1xf32, #blocked> -> tensor<64x64xf32, #blocked> loc(#loc77)
    %90 = arith.divf %83#0, %89 : tensor<64x64xf32, #blocked> loc(#loc77)
    %91 = arith.truncf %90 : tensor<64x64xf32, #blocked> to tensor<64x64xbf16, #blocked> loc(#loc78)
    %92 = tt.splat %35 : !tt.ptr<bf16> -> tensor<64x64x!tt.ptr<bf16>, #blocked1> loc(#loc79)
    %93 = tt.splat %36 : i64 -> tensor<64x1xi64, #blocked1> loc(#loc79)
    %94 = arith.muli %57, %93 : tensor<64x1xi64, #blocked1> loc(#loc79)
    %95 = tt.broadcast %94 : tensor<64x1xi64, #blocked1> -> tensor<64x64xi64, #blocked1> loc(#loc79)
    %96 = arith.addi %95, %62 : tensor<64x64xi64, #blocked1> loc(#loc79)
    %97 = tt.addptr %92, %96 : tensor<64x64x!tt.ptr<bf16>, #blocked1>, tensor<64x64xi64, #blocked1> loc(#loc79)
    %98 = ttg.convert_layout %91 : tensor<64x64xbf16, #blocked> -> tensor<64x64xbf16, #blocked1> loc(#loc79)
    tt.store %97, %98 : tensor<64x64x!tt.ptr<bf16>, #blocked1> loc(#loc79)
    tt.return loc(#loc80)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":46:22)
#loc3 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":47:28)
#loc4 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":48:27)
#loc5 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":49:22)
#loc6 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":50:21)
#loc7 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":51:24)
#loc8 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":51:36)
#loc9 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":51:57)
#loc10 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":51:69)
#loc11 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":51:48)
#loc12 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":52:36)
#loc13 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":52:69)
#loc14 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":52:48)
#loc15 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":53:36)
#loc16 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":53:69)
#loc17 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":53:48)
#loc18 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":54:36)
#loc19 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":54:69)
#loc20 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":54:48)
#loc21 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":58:17)
#loc22 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":61:27)
#loc23 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":63:8)
#loc24 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":66:17)
#loc25 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":71:8)
#loc26 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":74:17)
#loc27 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":79:8)
#loc28 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":83:19)
#loc29 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":88:8)
#loc30 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":93:31)
#loc31 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":93:23)
#loc32 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":93:41)
#loc33 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":98:46)
#loc34 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":98:33)
#loc35 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":101:50)
#loc36 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":106:16)
#loc37 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":111:47)
#loc38 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":111:52)
#loc39 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":111:36)
#loc40 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":114:42)
#loc41 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":120:56)
#loc42 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":120:64)
#loc43 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":120:45)
#loc44 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":126:20)
#loc45 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":127:23)
#loc46 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":129:18)
#loc47 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":138:20)
#loc48 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":117:33)
#loc49 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":120:26)
#loc50 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":120:34)
#loc51 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":129:52)
#loc52 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":129:29)
#loc53 = loc("/root/miniconda3/lib/python3.12/site-packages/triton/language/standard.py":188:40)
#loc55 = loc("/root/miniconda3/lib/python3.12/site-packages/triton/language/standard.py":167:27)
#loc56 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":130:31)
#loc57 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":131:19)
#loc58 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":131:14)
#loc59 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":133:24)
#loc60 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":134:34)
#loc61 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":134:28)
#loc62 = loc("/root/miniconda3/lib/python3.12/site-packages/triton/language/standard.py":290:36)
#loc64 = loc("/root/miniconda3/lib/python3.12/site-packages/triton/language/standard.py":260:15)
#loc65 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":136:26)
#loc66 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":136:20)
#loc67 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":139:17)
#loc68 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":140:27)
#loc69 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":142:20)
#loc70 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":142:28)
#loc71 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":145:46)
#loc72 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":146:8)
#loc73 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":148:30)
#loc74 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":148:23)
#loc75 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":149:14)
#loc76 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":150:18)
#loc77 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":150:16)
#loc78 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":159:33)
#loc79 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":159:26)
#loc80 = loc("/root/triton-runner/debug_tool/python/06-attention/debug_out.py":159:4)
#loc81 = loc(callsite(#loc53 at #loc54))
#loc83 = loc(callsite(#loc62 at #loc63))
#loc85 = loc(callsite(#loc55 at #loc81))
#loc86 = loc(callsite(#loc64 at #loc83))
