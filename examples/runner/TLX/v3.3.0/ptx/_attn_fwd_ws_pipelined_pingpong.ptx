//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_90a
.address_size 64

	// .globl	_attn_fwd_ws_pipelined_pingpong // -- Begin function _attn_fwd_ws_pipelined_pingpong
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @_attn_fwd_ws_pipelined_pingpong
.visible .entry _attn_fwd_ws_pipelined_pingpong(
	.param .f32 _attn_fwd_ws_pipelined_pingpong_param_0,
	.param .u64 .ptr .global .align 1 _attn_fwd_ws_pipelined_pingpong_param_1,
	.param .u32 _attn_fwd_ws_pipelined_pingpong_param_2,
	.param .u32 _attn_fwd_ws_pipelined_pingpong_param_3,
	.param .align 64 .b8 _attn_fwd_ws_pipelined_pingpong_param_4[128],
	.param .u32 _attn_fwd_ws_pipelined_pingpong_param_5,
	.param .u32 _attn_fwd_ws_pipelined_pingpong_param_6,
	.param .u64 _attn_fwd_ws_pipelined_pingpong_param_7,
	.param .u64 _attn_fwd_ws_pipelined_pingpong_param_8,
	.param .align 64 .b8 _attn_fwd_ws_pipelined_pingpong_param_9[128],
	.param .u32 _attn_fwd_ws_pipelined_pingpong_param_10,
	.param .u32 _attn_fwd_ws_pipelined_pingpong_param_11,
	.param .u64 _attn_fwd_ws_pipelined_pingpong_param_12,
	.param .u64 _attn_fwd_ws_pipelined_pingpong_param_13,
	.param .align 64 .b8 _attn_fwd_ws_pipelined_pingpong_param_14[128],
	.param .u32 _attn_fwd_ws_pipelined_pingpong_param_15,
	.param .u32 _attn_fwd_ws_pipelined_pingpong_param_16,
	.param .u64 _attn_fwd_ws_pipelined_pingpong_param_17,
	.param .u64 _attn_fwd_ws_pipelined_pingpong_param_18,
	.param .align 64 .b8 _attn_fwd_ws_pipelined_pingpong_param_19[128],
	.param .u32 _attn_fwd_ws_pipelined_pingpong_param_20,
	.param .u32 _attn_fwd_ws_pipelined_pingpong_param_21,
	.param .u64 _attn_fwd_ws_pipelined_pingpong_param_22,
	.param .u64 _attn_fwd_ws_pipelined_pingpong_param_23,
	.param .u32 _attn_fwd_ws_pipelined_pingpong_param_24,
	.param .u64 .ptr .global .align 1 _attn_fwd_ws_pipelined_pingpong_param_25
)
.reqntid 384
.maxnreg 168
{
	.reg .pred 	%p<146>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<647>;
	.reg .b32 	%f<11682>;
	.reg .b64 	%rd<154>;
	.loc	1 40 0                          // hopper-fa-ws-pipelined-pingpong.py:40:0
$L__func_begin0:
	.loc	1 40 0                          // hopper-fa-ws-pipelined-pingpong.py:40:0

// %bb.0:
	ld.param.b32 	%r47, [_attn_fwd_ws_pipelined_pingpong_param_24];
	mov.b64 	%rd24, _attn_fwd_ws_pipelined_pingpong_param_19;
$L__tmp0:
	.loc	1 40 0                          // hopper-fa-ws-pipelined-pingpong.py:40
	cvta.param.u64 	%rd1, %rd24;
	mov.b64 	%rd25, _attn_fwd_ws_pipelined_pingpong_param_14;
	cvta.param.u64 	%rd2, %rd25;
	mov.b64 	%rd26, _attn_fwd_ws_pipelined_pingpong_param_4;
	mov.b64 	%rd27, _attn_fwd_ws_pipelined_pingpong_param_9;
	cvta.param.u64 	%rd3, %rd27;
	cvta.param.u64 	%rd4, %rd26;
	mov.u32 	%r1, %tid.x;
	shr.u32 	%r2, %r1, 5;
	shfl.sync.idx.b32	%r3, %r2, 0, 31, -1;
	setp.lt.u32 	%p1, %r3, 4;
	@%p1 bra 	$L__BB0_22;
	bra.uni 	$L__BB0_1;
$L__BB0_22:
	setmaxnreg.inc.sync.aligned.u32 256;
	.loc	1 59 62                         // hopper-fa-ws-pipelined-pingpong.py:59:62
	setp.eq.s32 	%p117, %r1, 0;
	mov.b32 	%r593, global_smem;
	add.s32 	%r573, %r593, 196608;
	// begin inline asm
	@%p117 mbarrier.init.shared::cta.b64 [%r573], 1;
	// end inline asm
	// begin inline asm
	barrier.sync.aligned 0, 128 ;
	// end inline asm
	add.s32 	%r574, %r593, 196616;
	// begin inline asm
	@%p117 mbarrier.init.shared::cta.b64 [%r574], 1;
	// end inline asm
	.loc	1 60 61                         // hopper-fa-ws-pipelined-pingpong.py:60:61
	add.s32 	%r575, %r593, 196624;
	// begin inline asm
	@%p117 mbarrier.init.shared::cta.b64 [%r575], 2;
	// end inline asm
	// begin inline asm
	barrier.sync.aligned 0, 128 ;
	// end inline asm
	add.s32 	%r576, %r593, 196632;
	// begin inline asm
	@%p117 mbarrier.init.shared::cta.b64 [%r576], 2;
	// end inline asm
	.loc	1 61 59                         // hopper-fa-ws-pipelined-pingpong.py:61:59
	add.s32 	%r577, %r593, 196640;
	// begin inline asm
	@%p117 mbarrier.init.shared::cta.b64 [%r577], 1;
	// end inline asm
	// begin inline asm
	barrier.sync.aligned 0, 128 ;
	// end inline asm
	add.s32 	%r578, %r593, 196648;
	// begin inline asm
	@%p117 mbarrier.init.shared::cta.b64 [%r578], 1;
	// end inline asm
	.loc	1 62 61                         // hopper-fa-ws-pipelined-pingpong.py:62:61
	add.s32 	%r579, %r593, 196656;
	// begin inline asm
	@%p117 mbarrier.init.shared::cta.b64 [%r579], 2;
	// end inline asm
	// begin inline asm
	barrier.sync.aligned 0, 128 ;
	// end inline asm
	add.s32 	%r580, %r593, 196664;
	// begin inline asm
	@%p117 mbarrier.init.shared::cta.b64 [%r580], 2;
	// end inline asm
	.loc	1 63 59                         // hopper-fa-ws-pipelined-pingpong.py:63:59
	add.s32 	%r581, %r593, 196672;
	// begin inline asm
	@%p117 mbarrier.init.shared::cta.b64 [%r581], 1;
	// end inline asm
	// begin inline asm
	barrier.sync.aligned 0, 128 ;
	// end inline asm
	add.s32 	%r582, %r593, 196680;
	// begin inline asm
	@%p117 mbarrier.init.shared::cta.b64 [%r582], 1;
	// end inline asm
	mov.b32 	%r594, 16843009;
	mov.b32 	%r644, 0;
	.loc	1 65 9                          // hopper-fa-ws-pipelined-pingpong.py:65:9
	st.shared.v2.b32 	[global_smem+196688], {%r644, %r594};
	// begin inline asm
	barrier.sync 1 ;
	// end inline asm
	setmaxnreg.dec.sync.aligned.u32 40;
	// begin inline asm
	barrier.sync 1 ;
	// end inline asm
	.loc	1 69 36                         // hopper-fa-ws-pipelined-pingpong.py:69:36
	mov.u32 	%r596, %ctaid.x;
	.loc	1 70 35                         // hopper-fa-ws-pipelined-pingpong.py:70:35
	mov.u32 	%r597, %ctaid.y;
	.loc	1 73 45                         // hopper-fa-ws-pipelined-pingpong.py:73:45
	mul.lo.s32 	%r36, %r597, %r47;
	.loc	1 74 47                         // hopper-fa-ws-pipelined-pingpong.py:74:47
	shl.b32 	%r598, %r596, 7;
	.loc	1 74 37                         // hopper-fa-ws-pipelined-pingpong.py:74:37
	add.s32 	%r586, %r36, %r598;
	.loc	1 80 55                         // hopper-fa-ws-pipelined-pingpong.py:80:55
	// begin inline asm
	@%p117 mbarrier.arrive.expect_tx.shared.b64 _, [%r573], 16384;
	// end inline asm
	.loc	1 82 88                         // hopper-fa-ws-pipelined-pingpong.py:82:88
	cvta.to.global.u64 	%rd150, %rd4;
	// begin inline asm
	barrier.sync.aligned 0, 128 ;
	// end inline asm
	shfl.sync.idx.b32	%r599, %r2, 0, 31, -1;
	elect.sync 	%r600|%p131, -1;
	setp.lt.u32 	%p132, %r1, 64;
	and.pred 	%p128, %p132, %p131;
	and.b32 	%r37, %r599, 1;
	shl.b32 	%r601, %r37, 13;
	add.s32 	%r602, %r593, %r601;
	add.s32 	%r584, %r602, 131072;
	shl.b32 	%r585, %r37, 6;
	// begin inline asm
	@%p128 cp.async.bulk.tensor.2d.shared::cluster.global.mbarrier::complete_tx::bytes [%r584], [%rd150, {%r585, %r586}], [%r573];
	// end inline asm
	.loc	1 80 55                         // hopper-fa-ws-pipelined-pingpong.py:80:55
	// begin inline asm
	barrier.sync.aligned 0, 128 ;
	// end inline asm
	// begin inline asm
	@%p117 mbarrier.arrive.expect_tx.shared.b64 _, [%r574], 16384;
	// end inline asm
	.loc	1 81 50                         // hopper-fa-ws-pipelined-pingpong.py:81:50
	add.s32 	%r591, %r586, 64;
	.loc	1 82 88                         // hopper-fa-ws-pipelined-pingpong.py:82:88
	// begin inline asm
	barrier.sync.aligned 0, 128 ;
	// end inline asm
	elect.sync 	%r603|%p133, -1;
	and.pred 	%p130, %p132, %p133;
	add.s32 	%r589, %r602, 147456;
	// begin inline asm
	@%p130 cp.async.bulk.tensor.2d.shared::cluster.global.mbarrier::complete_tx::bytes [%r589], [%rd150, {%r585, %r591}], [%r574];
	// end inline asm
	.loc	1 96 85                         // hopper-fa-ws-pipelined-pingpong.py:96:85
	cvta.to.global.u64 	%rd151, %rd3;
	.loc	1 102 85                        // hopper-fa-ws-pipelined-pingpong.py:102:85
	cvta.to.global.u64 	%rd152, %rd2;
	.loc	1 87 38                         // hopper-fa-ws-pipelined-pingpong.py:87:38
	setp.lt.s32 	%p134, %r47, 1;
	@%p134 bra 	$L__BB0_25;
// %bb.23:                              // %.lr.ph1964
	shl.b32 	%r605, %r37, 14;
	add.s32 	%r39, %r593, %r605;
	add.s32 	%r40, %r39, 65536;
	mov.b32 	%r645, %r644;
	mov.b32 	%r646, %r644;
$L__BB0_24:                             // =>This Inner Loop Header: Depth=1
	.loc	1 88 35                         // hopper-fa-ws-pipelined-pingpong.py:88:35
	add.s32 	%r612, %r36, %r646;
	shr.u32 	%r621, %r644, 31;
	add.s32 	%r622, %r644, %r621;
	and.b32 	%r623, %r622, -2;
	sub.s32 	%r624, %r644, %r623;
	.loc	1 90 49                         // hopper-fa-ws-pipelined-pingpong.py:90:49
	setp.eq.s32 	%p142, %r624, 0;
	.loc	1 90 39                         // hopper-fa-ws-pipelined-pingpong.py:90:39
	selp.b32 	%r625, 1, 0, %p142;
	xor.b32 	%r645, %r645, %r625;
	.loc	1 93 43                         // hopper-fa-ws-pipelined-pingpong.py:93:43
	shl.b32 	%r626, %r624, 3;
	add.s32 	%r628, %r593, %r626;
	add.s32 	%r607, %r628, 196624;
	mov.pred 	%p135, -1;
	.loc	1 93 52                         // hopper-fa-ws-pipelined-pingpong.py:93:52
	// begin inline asm
	{                                                           
	@!%p135 bra.uni skipWait;                                      
	.reg .pred P1;                                              
	waitLoop:                                                   
	mbarrier.try_wait.parity.shared.b64 P1, [%r607], %r645;           
	@!P1 bra.uni waitLoop;                                      
	skipWait:                                                   
	}                                                           
	
	// end inline asm
	.loc	1 95 49                         // hopper-fa-ws-pipelined-pingpong.py:95:49
	add.s32 	%r613, %r628, 196640;
	.loc	1 95 58                         // hopper-fa-ws-pipelined-pingpong.py:95:58
	// begin inline asm
	@%p117 mbarrier.arrive.expect_tx.shared.b64 _, [%r613], 32768;
	// end inline asm
	.loc	1 96 85                         // hopper-fa-ws-pipelined-pingpong.py:96:85
	// begin inline asm
	barrier.sync.aligned 0, 128 ;
	// end inline asm
	elect.sync 	%r629|%p143, -1;
	and.pred 	%p137, %p132, %p143;
	shl.b32 	%r630, %r624, 15;
	add.s32 	%r610, %r39, %r630;
	// begin inline asm
	@%p137 cp.async.bulk.tensor.2d.shared::cluster.global.mbarrier::complete_tx::bytes [%r610], [%rd151, {%r585, %r612}], [%r613];
	// end inline asm
	.loc	1 99 43                         // hopper-fa-ws-pipelined-pingpong.py:99:43
	add.s32 	%r614, %r628, 196656;
	.loc	1 99 52                         // hopper-fa-ws-pipelined-pingpong.py:99:52
	// begin inline asm
	{                                                           
	@!%p135 bra.uni skipWait;                                      
	.reg .pred P1;                                              
	waitLoop:                                                   
	mbarrier.try_wait.parity.shared.b64 P1, [%r614], %r645;           
	@!P1 bra.uni waitLoop;                                      
	skipWait:                                                   
	}                                                           
	
	// end inline asm
	.loc	1 101 49                        // hopper-fa-ws-pipelined-pingpong.py:101:49
	add.s32 	%r620, %r628, 196672;
	.loc	1 101 58                        // hopper-fa-ws-pipelined-pingpong.py:101:58
	// begin inline asm
	@%p117 mbarrier.arrive.expect_tx.shared.b64 _, [%r620], 32768;
	// end inline asm
	.loc	1 102 85                        // hopper-fa-ws-pipelined-pingpong.py:102:85
	// begin inline asm
	barrier.sync.aligned 0, 128 ;
	// end inline asm
	elect.sync 	%r631|%p144, -1;
	and.pred 	%p140, %p132, %p144;
	add.s32 	%r617, %r40, %r630;
	// begin inline asm
	@%p140 cp.async.bulk.tensor.2d.shared::cluster.global.mbarrier::complete_tx::bytes [%r617], [%rd152, {%r585, %r612}], [%r620];
	// end inline asm
	.loc	1 105 27                        // hopper-fa-ws-pipelined-pingpong.py:105:27
	add.s32 	%r644, %r644, 1;
	.loc	1 87 38                         // hopper-fa-ws-pipelined-pingpong.py:87:38
	add.s32 	%r646, %r646, 128;
	setp.lt.s32 	%p145, %r646, %r47;
	@%p145 bra 	$L__BB0_24;
$L__BB0_25:                             // %._crit_edge1965
	.loc	1 0 38                          // hopper-fa-ws-pipelined-pingpong.py:0:38
	// begin inline asm
	barrier.sync 1 ;
	// end inline asm
	setmaxnreg.inc.sync.aligned.u32 256;
	mov.b64 	%rd153, 144680345676153346;
	.loc	1 65 4                          // hopper-fa-ws-pipelined-pingpong.py:65:4
	st.shared.b64 	[global_smem+196688], %rd153;
	// begin inline asm
	barrier.sync 1 ;
	// end inline asm
$L__BB0_26:                             // %common.ret
	.loc	1 0 0                           // hopper-fa-ws-pipelined-pingpong.py:0
	ret;
$L__BB0_1:                              // %.preheader.preheader
	ld.param.b64 	%rd23, [_attn_fwd_ws_pipelined_pingpong_param_1];
	ld.param.b32 	%f1081, [_attn_fwd_ws_pipelined_pingpong_param_0];
	mov.b32 	%r48, global_smem;
	add.s32 	%r49, %r48, %r3;
	mul.f32 	%f1, %f1081, 0f3FB8AA3B;
	add.s32 	%r312, %r48, 196608;
	setp.lt.s32 	%p71, %r47, 129;
	bra.uni 	$L__BB0_2;
$L__BB0_21:                             // %__nv_log2f.exit1362
                                        //   in Loop: Header=BB0_2 Depth=1
	.loc	1 234 32                        // hopper-fa-ws-pipelined-pingpong.py:234:32
	setp.eq.f32 	%p58, %f1077, 0f00000000;
	selp.f32 	%f6049, 0fFF800000, %f11681, %p58;
	.loc	1 234 19                        // hopper-fa-ws-pipelined-pingpong.py:234:19
	add.f32 	%f6050, %f11614, %f1076;
	add.f32 	%f6051, %f11615, %f6049;
	.loc	1 235 24                        // hopper-fa-ws-pipelined-pingpong.py:235:24
	div.full.f32 	%f6052, %f11483, %f11612;
	div.full.f32 	%f6053, %f11482, %f11612;
	div.full.f32 	%f6054, %f11481, %f11613;
	div.full.f32 	%f6055, %f11480, %f11613;
	div.full.f32 	%f6056, %f11479, %f11612;
	div.full.f32 	%f6057, %f11478, %f11612;
	div.full.f32 	%f6058, %f11477, %f11613;
	div.full.f32 	%f6059, %f11476, %f11613;
	div.full.f32 	%f6060, %f11475, %f11612;
	div.full.f32 	%f6061, %f11474, %f11612;
	div.full.f32 	%f6062, %f11473, %f11613;
	div.full.f32 	%f6063, %f11472, %f11613;
	div.full.f32 	%f6064, %f11471, %f11612;
	div.full.f32 	%f6065, %f11470, %f11612;
	div.full.f32 	%f6066, %f11469, %f11613;
	div.full.f32 	%f6067, %f11468, %f11613;
	div.full.f32 	%f6068, %f11467, %f11612;
	div.full.f32 	%f6069, %f11466, %f11612;
	div.full.f32 	%f6070, %f11465, %f11613;
	div.full.f32 	%f6071, %f11464, %f11613;
	div.full.f32 	%f6072, %f11463, %f11612;
	div.full.f32 	%f6073, %f11462, %f11612;
	div.full.f32 	%f6074, %f11461, %f11613;
	div.full.f32 	%f6075, %f11460, %f11613;
	div.full.f32 	%f6076, %f11459, %f11612;
	div.full.f32 	%f6077, %f11458, %f11612;
	div.full.f32 	%f6078, %f11457, %f11613;
	div.full.f32 	%f6079, %f11456, %f11613;
	div.full.f32 	%f6080, %f11455, %f11612;
	div.full.f32 	%f6081, %f11454, %f11612;
	div.full.f32 	%f6082, %f11453, %f11613;
	div.full.f32 	%f6083, %f11452, %f11613;
	div.full.f32 	%f6084, %f11451, %f11612;
	div.full.f32 	%f6085, %f11450, %f11612;
	div.full.f32 	%f6086, %f11449, %f11613;
	div.full.f32 	%f6087, %f11448, %f11613;
	div.full.f32 	%f6088, %f11447, %f11612;
	div.full.f32 	%f6089, %f11446, %f11612;
	div.full.f32 	%f6090, %f11445, %f11613;
	div.full.f32 	%f6091, %f11444, %f11613;
	div.full.f32 	%f6092, %f11443, %f11612;
	div.full.f32 	%f6093, %f11442, %f11612;
	div.full.f32 	%f6094, %f11441, %f11613;
	div.full.f32 	%f6095, %f11440, %f11613;
	div.full.f32 	%f6096, %f11439, %f11612;
	div.full.f32 	%f6097, %f11438, %f11612;
	div.full.f32 	%f6098, %f11437, %f11613;
	div.full.f32 	%f6099, %f11436, %f11613;
	div.full.f32 	%f6100, %f11435, %f11612;
	div.full.f32 	%f6101, %f11434, %f11612;
	div.full.f32 	%f6102, %f11433, %f11613;
	div.full.f32 	%f6103, %f11432, %f11613;
	div.full.f32 	%f6104, %f11431, %f11612;
	div.full.f32 	%f6105, %f11430, %f11612;
	div.full.f32 	%f6106, %f11429, %f11613;
	div.full.f32 	%f6107, %f11428, %f11613;
	div.full.f32 	%f6108, %f11427, %f11612;
	div.full.f32 	%f6109, %f11426, %f11612;
	div.full.f32 	%f6110, %f11425, %f11613;
	div.full.f32 	%f6111, %f11424, %f11613;
	div.full.f32 	%f6112, %f11423, %f11612;
	div.full.f32 	%f6113, %f11422, %f11612;
	div.full.f32 	%f6114, %f11421, %f11613;
	div.full.f32 	%f6115, %f11420, %f11613;
	.loc	1 236 76                        // hopper-fa-ws-pipelined-pingpong.py:236:76
	and.b32 	%r263, %r1, 1;
	neg.s32 	%r264, %r263;
	bfe.s32 	%r265, %r1, 1, 1;
	bfe.s32 	%r266, %r1, 2, 1;
	and.b32 	%r267, %r1, 63;
	.loc	1 236 63                        // hopper-fa-ws-pipelined-pingpong.py:236:63
	or.b32 	%r268, %r33, %r267;
	.loc	1 237 25                        // hopper-fa-ws-pipelined-pingpong.py:237:25
	mul.wide.s32 	%rd85, %r34, 4;
	add.s64 	%rd86, %rd23, %rd85;
	.loc	1 237 42                        // hopper-fa-ws-pipelined-pingpong.py:237:42
	mul.wide.s32 	%rd87, %r268, 4;
	add.s64 	%rd88, %rd86, %rd87;
	add.s64 	%rd83, %rd88, 256;
	.loc	1 238 29                        // hopper-fa-ws-pipelined-pingpong.py:238:29
	// begin inline asm
	barrier.sync.aligned 3, 128 ;
	// end inline asm
	and.b32 	%r269, %r1, 64;
	setp.eq.s32 	%p56, %r269, 0;
	shr.u32 	%r270, %r1, 1;
	add.s32 	%r272, %r48, 180224;
	shl.b32 	%r273, %r1, 1;
	and.b32 	%r274, %r273, 192;
	add.s32 	%r275, %r272, %r274;
	and.b32 	%r276, %r1, 28;
	add.s32 	%r215, %r275, %r276;
	mov.b32 	%r216, %f6050;
	mov.pred 	%p54, -1;
	// begin inline asm
	@%p54 st.shared.b32 [ %r215 + 0 ], %r216;
	// end inline asm
	add.s32 	%r217, %r215, 32;
	mov.b32 	%r218, %f6051;
	// begin inline asm
	@%p54 st.shared.b32 [ %r217 + 0 ], %r218;
	// end inline asm
	// begin inline asm
	barrier.sync.aligned 3, 128 ;
	// end inline asm
	shl.b32 	%r277, %r267, 2;
	add.s32 	%r278, %r272, %r277;
	ld.shared.b32 	%r219, [%r278];
	// begin inline asm
	@%p56 st.global.b32 [ %rd83 + 0 ], { %r219 };
	// end inline asm
	.loc	1 239 56                        // hopper-fa-ws-pipelined-pingpong.py:239:56
	cvt.rn.f16x2.f32 	%r221, %f6053, %f6052;
	cvt.rn.f16x2.f32 	%r222, %f6055, %f6054;
	cvt.rn.f16x2.f32 	%r223, %f6057, %f6056;
	cvt.rn.f16x2.f32 	%r224, %f6059, %f6058;
	cvt.rn.f16x2.f32 	%r226, %f6061, %f6060;
	cvt.rn.f16x2.f32 	%r227, %f6063, %f6062;
	cvt.rn.f16x2.f32 	%r228, %f6065, %f6064;
	cvt.rn.f16x2.f32 	%r229, %f6067, %f6066;
	cvt.rn.f16x2.f32 	%r231, %f6069, %f6068;
	cvt.rn.f16x2.f32 	%r232, %f6071, %f6070;
	cvt.rn.f16x2.f32 	%r233, %f6073, %f6072;
	cvt.rn.f16x2.f32 	%r234, %f6075, %f6074;
	cvt.rn.f16x2.f32 	%r236, %f6077, %f6076;
	cvt.rn.f16x2.f32 	%r237, %f6079, %f6078;
	cvt.rn.f16x2.f32 	%r238, %f6081, %f6080;
	cvt.rn.f16x2.f32 	%r239, %f6083, %f6082;
	cvt.rn.f16x2.f32 	%r241, %f6085, %f6084;
	cvt.rn.f16x2.f32 	%r242, %f6087, %f6086;
	cvt.rn.f16x2.f32 	%r243, %f6089, %f6088;
	cvt.rn.f16x2.f32 	%r244, %f6091, %f6090;
	cvt.rn.f16x2.f32 	%r246, %f6093, %f6092;
	cvt.rn.f16x2.f32 	%r247, %f6095, %f6094;
	cvt.rn.f16x2.f32 	%r248, %f6097, %f6096;
	cvt.rn.f16x2.f32 	%r249, %f6099, %f6098;
	cvt.rn.f16x2.f32 	%r251, %f6101, %f6100;
	cvt.rn.f16x2.f32 	%r252, %f6103, %f6102;
	cvt.rn.f16x2.f32 	%r253, %f6105, %f6104;
	cvt.rn.f16x2.f32 	%r254, %f6107, %f6106;
	cvt.rn.f16x2.f32 	%r256, %f6109, %f6108;
	cvt.rn.f16x2.f32 	%r257, %f6111, %f6110;
	cvt.rn.f16x2.f32 	%r258, %f6113, %f6112;
	cvt.rn.f16x2.f32 	%r259, %f6115, %f6114;
	.loc	1 239 49                        // hopper-fa-ws-pipelined-pingpong.py:239:49
	// begin inline asm
	barrier.sync.aligned 3, 128 ;
	// end inline asm
	and.b32 	%r279, %r264, 72;
	and.b32 	%r280, %r265, 144;
	and.b32 	%r281, %r266, 288;
	shl.b32 	%r282, %r1, 6;
	and.b32 	%r283, %r282, 512;
	or.b32 	%r284, %r280, %r283;
	or.b32 	%r285, %r284, %r279;
	or.b32 	%r286, %r285, %r281;
	and.b32 	%r287, %r270, 8;
	xor.b32 	%r288, %r286, %r287;
	shl.b32 	%r289, %r1, 5;
	and.b32 	%r290, %r289, 1024;
	or.b32 	%r291, %r288, %r290;
	shl.b32 	%r292, %r269, 5;
	or.b32 	%r293, %r291, %r292;
	shl.b32 	%r294, %r293, 1;
	add.s32 	%r220, %r272, %r294;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r220], {%r221, %r222, %r223, %r224};
	// end inline asm
	xor.b32 	%r295, %r293, 16;
	shl.b32 	%r296, %r295, 1;
	add.s32 	%r225, %r272, %r296;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r225], {%r226, %r227, %r228, %r229};
	// end inline asm
	xor.b32 	%r297, %r293, 32;
	shl.b32 	%r298, %r297, 1;
	add.s32 	%r230, %r272, %r298;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r230], {%r231, %r232, %r233, %r234};
	// end inline asm
	xor.b32 	%r299, %r293, 48;
	shl.b32 	%r300, %r299, 1;
	add.s32 	%r235, %r272, %r300;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r235], {%r236, %r237, %r238, %r239};
	// end inline asm
	xor.b32 	%r301, %r293, 4096;
	shl.b32 	%r302, %r301, 1;
	add.s32 	%r240, %r272, %r302;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r240], {%r241, %r242, %r243, %r244};
	// end inline asm
	xor.b32 	%r303, %r293, 4112;
	shl.b32 	%r304, %r303, 1;
	add.s32 	%r245, %r272, %r304;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r245], {%r246, %r247, %r248, %r249};
	// end inline asm
	xor.b32 	%r305, %r293, 4128;
	shl.b32 	%r306, %r305, 1;
	add.s32 	%r250, %r272, %r306;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r250], {%r251, %r252, %r253, %r254};
	// end inline asm
	xor.b32 	%r307, %r293, 4144;
	shl.b32 	%r308, %r307, 1;
	add.s32 	%r255, %r272, %r308;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r255], {%r256, %r257, %r258, %r259};
	// end inline asm
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	cvta.to.global.u64 	%rd84, %rd1;
	// begin inline asm
	barrier.sync.aligned 3, 128 ;
	// end inline asm
	elect.sync 	%r309|%p59, -1;
	setp.lt.u32 	%p60, %r20, 64;
	and.pred 	%p57, %p60, %p59;
	and.b32 	%r310, %r21, 1;
	shl.b32 	%r311, %r310, 13;
	add.s32 	%r262, %r272, %r311;
	shl.b32 	%r260, %r310, 6;
	// begin inline asm
	@%p57 cp.async.bulk.tensor.2d.global.shared::cta.bulk_group [%rd84, {%r260, %r261}], [%r262];
	// end inline asm
	cp.async.bulk.commit_group;
	cp.async.bulk.wait_group.read 0;
	// begin inline asm
	barrier.sync.aligned 3, 128 ;
	// end inline asm
	// begin inline asm
	barrier.sync 1 ;
	// end inline asm
	setmaxnreg.dec.sync.aligned.u32 120;
$L__BB0_2:                              // %.preheader
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_16 Depth 2
                                        //     Child Loop BB0_8 Depth 2
	.loc	1 40 0                          // hopper-fa-ws-pipelined-pingpong.py:40
	setmaxnreg.dec.sync.aligned.u32 120;
	// begin inline asm
	barrier.sync 1 ;
	// end inline asm
	ld.shared.b8 	%rs1, [%r49+196684];
	setp.eq.s16 	%p2, %rs1, 0;
	@%p2 bra 	$L__BB0_6;
// %bb.3:                               // %.preheader
                                        //   in Loop: Header=BB0_2 Depth=1
	setp.eq.s16 	%p3, %rs1, 1;
	@%p3 bra 	$L__BB0_14;
// %bb.4:                               // %.preheader
                                        //   in Loop: Header=BB0_2 Depth=1
	setp.eq.s16 	%p4, %rs1, 2;
	@%p4 bra 	$L__BB0_26;
// %bb.5:                               //   in Loop: Header=BB0_2 Depth=1
	// begin inline asm
	barrier.sync 1 ;
	// end inline asm
	// begin inline asm
	barrier.sync 1 ;
	// end inline asm
	bra.uni 	$L__BB0_2;
$L__BB0_14:                             // %__nv_exp2f.exit
                                        //   in Loop: Header=BB0_2 Depth=1
	.loc	1 65 9                          // hopper-fa-ws-pipelined-pingpong.py:65:9
	setmaxnreg.inc.sync.aligned.u32 232;
	// begin inline asm
	barrier.sync 1 ;
	// end inline asm
	.loc	1 120 43                        // hopper-fa-ws-pipelined-pingpong.py:120:43
	add.s32 	%r50, %r48, 196616;
	mov.b32 	%r643, 0;
	mov.pred 	%p5, -1;
	// begin inline asm
	{                                                           
	@!%p5 bra.uni skipWait;                                      
	.reg .pred P1;                                              
	waitLoop:                                                   
	mbarrier.try_wait.parity.shared.b64 P1, [%r50], %r643;           
	@!P1 bra.uni waitLoop;                                      
	skipWait:                                                   
	}                                                           
	
	// end inline asm
	.loc	1 129 48                        // hopper-fa-ws-pipelined-pingpong.py:129:48
	add.s32 	%r52, %r48, 196640;
	// begin inline asm
	{                                                           
	@!%p5 bra.uni skipWait;                                      
	.reg .pred P1;                                              
	waitLoop:                                                   
	mbarrier.try_wait.parity.shared.b64 P1, [%r52], %r643;           
	@!P1 bra.uni waitLoop;                                      
	skipWait:                                                   
	}                                                           
	
	// end inline asm
	mov.b32 	%r54, 9;
	mov.b32 	%r55, 256;
	.loc	1 139 44                        // hopper-fa-ws-pipelined-pingpong.py:139:44
	// begin inline asm
	bar.arrive %r54, %r55;
	// end inline asm
	mov.b32 	%r56, 10;
	.loc	1 141 43                        // hopper-fa-ws-pipelined-pingpong.py:141:43
	// begin inline asm
	bar.sync %r56, %r55;
	// end inline asm
	.loc	1 143 45                        // hopper-fa-ws-pipelined-pingpong.py:143:45
	add.s32 	%r20, %r1, -256;
	shr.u32 	%r62, %r20, 5;
	shfl.sync.idx.b32	%r21, %r62, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	add.s32 	%r63, %r48, 147456;
	shr.u32 	%r64, %r63, 4;
	cvt.u64.u32 	%rd44, %r64;
	and.b64 	%rd45, %rd44, 16383;
	or.b64 	%rd48, %rd45, 4611686293338849280;
	shr.u32 	%r65, %r48, 4;
	cvt.u64.u32 	%rd46, %r65;
	and.b64 	%rd47, %rd46, 16383;
	or.b64 	%rd29, %rd47, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f1274,%f1275,%f1276,%f1277,%f1278,%f1279,%f1280,%f1281,%f1282,%f1283,%f1284,%f1285,%f1286,%f1287,%f1288,%f1289,%f1290,%f1291,%f1292,%f1293,%f1294,%f1295,%f1296,%f1297,%f1298,%f1299,%f1300,%f1301,%f1302,%f1303,%f1304,%f1305,%f1306,%f1307,%f1308,%f1309,%f1310,%f1311,%f1312,%f1313,%f1314,%f1315,%f1316,%f1317,%f1318,%f1319,%f1320,%f1321,%f1322,%f1323,%f1324,%f1325,%f1326,%f1327,%f1328,%f1329,%f1330,%f1331,%f1332,%f1333,%f1334,%f1335,%f1336,%f1337}, %rd48, %rd29, 0, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd50, %rd45, 4611686293338849282;
	add.s64 	%rd31, %rd47, 4611686293372403714;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f1274,%f1275,%f1276,%f1277,%f1278,%f1279,%f1280,%f1281,%f1282,%f1283,%f1284,%f1285,%f1286,%f1287,%f1288,%f1289,%f1290,%f1291,%f1292,%f1293,%f1294,%f1295,%f1296,%f1297,%f1298,%f1299,%f1300,%f1301,%f1302,%f1303,%f1304,%f1305,%f1306,%f1307,%f1308,%f1309,%f1310,%f1311,%f1312,%f1313,%f1314,%f1315,%f1316,%f1317,%f1318,%f1319,%f1320,%f1321,%f1322,%f1323,%f1324,%f1325,%f1326,%f1327,%f1328,%f1329,%f1330,%f1331,%f1332,%f1333,%f1334,%f1335,%f1336,%f1337}, %rd50, %rd31, %p5, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd52, %rd45, 4611686293338849284;
	add.s64 	%rd33, %rd47, 4611686293372403716;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f1274,%f1275,%f1276,%f1277,%f1278,%f1279,%f1280,%f1281,%f1282,%f1283,%f1284,%f1285,%f1286,%f1287,%f1288,%f1289,%f1290,%f1291,%f1292,%f1293,%f1294,%f1295,%f1296,%f1297,%f1298,%f1299,%f1300,%f1301,%f1302,%f1303,%f1304,%f1305,%f1306,%f1307,%f1308,%f1309,%f1310,%f1311,%f1312,%f1313,%f1314,%f1315,%f1316,%f1317,%f1318,%f1319,%f1320,%f1321,%f1322,%f1323,%f1324,%f1325,%f1326,%f1327,%f1328,%f1329,%f1330,%f1331,%f1332,%f1333,%f1334,%f1335,%f1336,%f1337}, %rd52, %rd33, %p5, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd54, %rd45, 4611686293338849286;
	add.s64 	%rd35, %rd47, 4611686293372403718;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f1274,%f1275,%f1276,%f1277,%f1278,%f1279,%f1280,%f1281,%f1282,%f1283,%f1284,%f1285,%f1286,%f1287,%f1288,%f1289,%f1290,%f1291,%f1292,%f1293,%f1294,%f1295,%f1296,%f1297,%f1298,%f1299,%f1300,%f1301,%f1302,%f1303,%f1304,%f1305,%f1306,%f1307,%f1308,%f1309,%f1310,%f1311,%f1312,%f1313,%f1314,%f1315,%f1316,%f1317,%f1318,%f1319,%f1320,%f1321,%f1322,%f1323,%f1324,%f1325,%f1326,%f1327,%f1328,%f1329,%f1330,%f1331,%f1332,%f1333,%f1334,%f1335,%f1336,%f1337}, %rd54, %rd35, %p5, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd56, %rd45, 4611686293338849792;
	add.s64 	%rd37, %rd47, 4611686293372404736;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f1274,%f1275,%f1276,%f1277,%f1278,%f1279,%f1280,%f1281,%f1282,%f1283,%f1284,%f1285,%f1286,%f1287,%f1288,%f1289,%f1290,%f1291,%f1292,%f1293,%f1294,%f1295,%f1296,%f1297,%f1298,%f1299,%f1300,%f1301,%f1302,%f1303,%f1304,%f1305,%f1306,%f1307,%f1308,%f1309,%f1310,%f1311,%f1312,%f1313,%f1314,%f1315,%f1316,%f1317,%f1318,%f1319,%f1320,%f1321,%f1322,%f1323,%f1324,%f1325,%f1326,%f1327,%f1328,%f1329,%f1330,%f1331,%f1332,%f1333,%f1334,%f1335,%f1336,%f1337}, %rd56, %rd37, %p5, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd58, %rd45, 4611686293338849794;
	add.s64 	%rd39, %rd47, 4611686293372404738;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f1274,%f1275,%f1276,%f1277,%f1278,%f1279,%f1280,%f1281,%f1282,%f1283,%f1284,%f1285,%f1286,%f1287,%f1288,%f1289,%f1290,%f1291,%f1292,%f1293,%f1294,%f1295,%f1296,%f1297,%f1298,%f1299,%f1300,%f1301,%f1302,%f1303,%f1304,%f1305,%f1306,%f1307,%f1308,%f1309,%f1310,%f1311,%f1312,%f1313,%f1314,%f1315,%f1316,%f1317,%f1318,%f1319,%f1320,%f1321,%f1322,%f1323,%f1324,%f1325,%f1326,%f1327,%f1328,%f1329,%f1330,%f1331,%f1332,%f1333,%f1334,%f1335,%f1336,%f1337}, %rd58, %rd39, %p5, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd60, %rd45, 4611686293338849796;
	add.s64 	%rd41, %rd47, 4611686293372404740;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f1274,%f1275,%f1276,%f1277,%f1278,%f1279,%f1280,%f1281,%f1282,%f1283,%f1284,%f1285,%f1286,%f1287,%f1288,%f1289,%f1290,%f1291,%f1292,%f1293,%f1294,%f1295,%f1296,%f1297,%f1298,%f1299,%f1300,%f1301,%f1302,%f1303,%f1304,%f1305,%f1306,%f1307,%f1308,%f1309,%f1310,%f1311,%f1312,%f1313,%f1314,%f1315,%f1316,%f1317,%f1318,%f1319,%f1320,%f1321,%f1322,%f1323,%f1324,%f1325,%f1326,%f1327,%f1328,%f1329,%f1330,%f1331,%f1332,%f1333,%f1334,%f1335,%f1336,%f1337}, %rd60, %rd41, %p5, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd62, %rd45, 4611686293338849798;
	add.s64 	%rd43, %rd47, 4611686293372404742;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f1274,%f1275,%f1276,%f1277,%f1278,%f1279,%f1280,%f1281,%f1282,%f1283,%f1284,%f1285,%f1286,%f1287,%f1288,%f1289,%f1290,%f1291,%f1292,%f1293,%f1294,%f1295,%f1296,%f1297,%f1298,%f1299,%f1300,%f1301,%f1302,%f1303,%f1304,%f1305,%f1306,%f1307,%f1308,%f1309,%f1310,%f1311,%f1312,%f1313,%f1314,%f1315,%f1316,%f1317,%f1318,%f1319,%f1320,%f1321,%f1322,%f1323,%f1324,%f1325,%f1326,%f1327,%f1328,%f1329,%f1330,%f1331,%f1332,%f1333,%f1334,%f1335,%f1336,%f1337}, %rd62, %rd43, %p5, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	.loc	1 150 39                        // hopper-fa-ws-pipelined-pingpong.py:150:39
	// begin inline asm
	// wait for regs: %f1274,%f1275,%f1276,%f1277,%f1278,%f1279,%f1280,%f1281,%f1282,%f1283,%f1284,%f1285,%f1286,%f1287,%f1288,%f1289,%f1290,%f1291,%f1292,%f1293,%f1294,%f1295,%f1296,%f1297,%f1298,%f1299,%f1300,%f1301,%f1302,%f1303,%f1304,%f1305,%f1306,%f1307,%f1308,%f1309,%f1310,%f1311,%f1312,%f1313,%f1314,%f1315,%f1316,%f1317,%f1318,%f1319,%f1320,%f1321,%f1322,%f1323,%f1324,%f1325,%f1326,%f1327,%f1328,%f1329,%f1330,%f1331,%f1332,%f1333,%f1334,%f1335,%f1336,%f1337
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 152 52                        // hopper-fa-ws-pipelined-pingpong.py:152:52
	// begin inline asm
	barrier.sync.aligned 3, 128 ;
	// end inline asm
	setp.eq.s32 	%p33, %r20, 0;
	add.s32 	%r58, %r48, 196624;
	// begin inline asm
	@%p33 mbarrier.arrive.shared::cta.b64 _, [%r58], 1;
	// end inline asm
$L__tmp1:
	.loc	2 167 27                        // standard.py:167:27 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	max.f32 	%f2170, %f1274, %f1275;
	max.f32 	%f2171, %f1276, %f1277;
	max.f32 	%f2172, %f2170, %f1278;
	max.f32 	%f2173, %f2172, %f1279;
	max.f32 	%f2174, %f2171, %f1280;
	max.f32 	%f2175, %f2174, %f1281;
	max.f32 	%f2176, %f2173, %f1282;
	max.f32 	%f2177, %f2176, %f1283;
	max.f32 	%f2178, %f2175, %f1284;
	max.f32 	%f2179, %f2178, %f1285;
	max.f32 	%f2180, %f2177, %f1286;
	max.f32 	%f2181, %f2180, %f1287;
	max.f32 	%f2182, %f2179, %f1288;
	max.f32 	%f2183, %f2182, %f1289;
	max.f32 	%f2184, %f2181, %f1290;
	max.f32 	%f2185, %f2184, %f1291;
	max.f32 	%f2186, %f2183, %f1292;
	max.f32 	%f2187, %f2186, %f1293;
	max.f32 	%f2188, %f2185, %f1294;
	max.f32 	%f2189, %f2188, %f1295;
	max.f32 	%f2190, %f2187, %f1296;
	max.f32 	%f2191, %f2190, %f1297;
	max.f32 	%f2192, %f2189, %f1298;
	max.f32 	%f2193, %f2192, %f1299;
	max.f32 	%f2194, %f2191, %f1300;
	max.f32 	%f2195, %f2194, %f1301;
	max.f32 	%f2196, %f2193, %f1302;
	max.f32 	%f2197, %f2196, %f1303;
	max.f32 	%f2198, %f2195, %f1304;
	max.f32 	%f2199, %f2198, %f1305;
	max.f32 	%f2200, %f2197, %f1306;
	max.f32 	%f2201, %f2200, %f1307;
	max.f32 	%f2202, %f2199, %f1308;
	max.f32 	%f2203, %f2202, %f1309;
	max.f32 	%f2204, %f2201, %f1310;
	max.f32 	%f2205, %f2204, %f1311;
	max.f32 	%f2206, %f2203, %f1312;
	max.f32 	%f2207, %f2206, %f1313;
	max.f32 	%f2208, %f2205, %f1314;
	max.f32 	%f2209, %f2208, %f1315;
	max.f32 	%f2210, %f2207, %f1316;
	max.f32 	%f2211, %f2210, %f1317;
	max.f32 	%f2212, %f2209, %f1318;
	max.f32 	%f2213, %f2212, %f1319;
	max.f32 	%f2214, %f2211, %f1320;
	max.f32 	%f2215, %f2214, %f1321;
	max.f32 	%f2216, %f2213, %f1322;
	max.f32 	%f2217, %f2216, %f1323;
	max.f32 	%f2218, %f2215, %f1324;
	max.f32 	%f2219, %f2218, %f1325;
	max.f32 	%f2220, %f2217, %f1326;
	max.f32 	%f2221, %f2220, %f1327;
	max.f32 	%f2222, %f2219, %f1328;
	max.f32 	%f2223, %f2222, %f1329;
	max.f32 	%f2224, %f2221, %f1330;
	max.f32 	%f2225, %f2224, %f1331;
	max.f32 	%f2226, %f2223, %f1332;
	max.f32 	%f2227, %f2226, %f1333;
	max.f32 	%f2228, %f2225, %f1334;
	max.f32 	%f2229, %f2228, %f1335;
	max.f32 	%f2230, %f2227, %f1336;
	max.f32 	%f2231, %f2230, %f1337;
	.loc	2 188 40                        // standard.py:188:40 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	mov.b32 	%r66, %f2229;
	shfl.sync.bfly.b32	%r67, %r66, 2, 31, -1;
	mov.b32 	%f2232, %r67;
	.loc	2 167 27                        // standard.py:167:27 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	max.f32 	%f2233, %f2229, %f2232;
	.loc	2 188 40                        // standard.py:188:40 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	mov.b32 	%r68, %f2233;
	shfl.sync.bfly.b32	%r69, %r68, 1, 31, -1;
	mov.b32 	%f2234, %r69;
	.loc	2 167 27                        // standard.py:167:27 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	max.f32 	%f2235, %f2233, %f2234;
	.loc	2 188 40                        // standard.py:188:40 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	mov.b32 	%r70, %f2231;
	shfl.sync.bfly.b32	%r71, %r70, 2, 31, -1;
	mov.b32 	%f2236, %r71;
	.loc	2 167 27                        // standard.py:167:27 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	max.f32 	%f2237, %f2231, %f2236;
	.loc	2 188 40                        // standard.py:188:40 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	mov.b32 	%r72, %f2237;
	shfl.sync.bfly.b32	%r73, %r72, 1, 31, -1;
	mov.b32 	%f2238, %r73;
	.loc	2 167 27                        // standard.py:167:27 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	max.f32 	%f2239, %f2237, %f2238;
$L__tmp2:
	.loc	1 155 51                        // hopper-fa-ws-pipelined-pingpong.py:155:51
	mul.f32 	%f2240, %f1, %f2235;
	mul.f32 	%f2241, %f1, %f2239;
	.loc	1 155 35                        // hopper-fa-ws-pipelined-pingpong.py:155:35
	max.f32 	%f11614, %f2240, 0fFF800000;
	max.f32 	%f11615, %f2241, 0fFF800000;
	.loc	1 156 33                        // hopper-fa-ws-pipelined-pingpong.py:156:33
	neg.f32 	%f2242, %f11614;
	fma.rn.f32 	%f2243, %f1, %f1274, %f2242;
	fma.rn.f32 	%f2244, %f1, %f1275, %f2242;
	neg.f32 	%f2245, %f11615;
	fma.rn.f32 	%f2246, %f1, %f1276, %f2245;
	fma.rn.f32 	%f2247, %f1, %f1277, %f2245;
	fma.rn.f32 	%f2248, %f1, %f1278, %f2242;
	fma.rn.f32 	%f2249, %f1, %f1279, %f2242;
	fma.rn.f32 	%f2250, %f1, %f1280, %f2245;
	fma.rn.f32 	%f2251, %f1, %f1281, %f2245;
	fma.rn.f32 	%f2252, %f1, %f1282, %f2242;
	fma.rn.f32 	%f2253, %f1, %f1283, %f2242;
	fma.rn.f32 	%f2254, %f1, %f1284, %f2245;
	fma.rn.f32 	%f2255, %f1, %f1285, %f2245;
	fma.rn.f32 	%f2256, %f1, %f1286, %f2242;
	fma.rn.f32 	%f2257, %f1, %f1287, %f2242;
	fma.rn.f32 	%f2258, %f1, %f1288, %f2245;
	fma.rn.f32 	%f2259, %f1, %f1289, %f2245;
	fma.rn.f32 	%f2260, %f1, %f1290, %f2242;
	fma.rn.f32 	%f2261, %f1, %f1291, %f2242;
	fma.rn.f32 	%f2262, %f1, %f1292, %f2245;
	fma.rn.f32 	%f2263, %f1, %f1293, %f2245;
	fma.rn.f32 	%f2264, %f1, %f1294, %f2242;
	fma.rn.f32 	%f2265, %f1, %f1295, %f2242;
	fma.rn.f32 	%f2266, %f1, %f1296, %f2245;
	fma.rn.f32 	%f2267, %f1, %f1297, %f2245;
	fma.rn.f32 	%f2268, %f1, %f1298, %f2242;
	fma.rn.f32 	%f2269, %f1, %f1299, %f2242;
	fma.rn.f32 	%f2270, %f1, %f1300, %f2245;
	fma.rn.f32 	%f2271, %f1, %f1301, %f2245;
	fma.rn.f32 	%f2272, %f1, %f1302, %f2242;
	fma.rn.f32 	%f2273, %f1, %f1303, %f2242;
	fma.rn.f32 	%f2274, %f1, %f1304, %f2245;
	fma.rn.f32 	%f2275, %f1, %f1305, %f2245;
	fma.rn.f32 	%f2276, %f1, %f1306, %f2242;
	fma.rn.f32 	%f2277, %f1, %f1307, %f2242;
	fma.rn.f32 	%f2278, %f1, %f1308, %f2245;
	fma.rn.f32 	%f2279, %f1, %f1309, %f2245;
	fma.rn.f32 	%f2280, %f1, %f1310, %f2242;
	fma.rn.f32 	%f2281, %f1, %f1311, %f2242;
	fma.rn.f32 	%f2282, %f1, %f1312, %f2245;
	fma.rn.f32 	%f2283, %f1, %f1313, %f2245;
	fma.rn.f32 	%f2284, %f1, %f1314, %f2242;
	fma.rn.f32 	%f2285, %f1, %f1315, %f2242;
	fma.rn.f32 	%f2286, %f1, %f1316, %f2245;
	fma.rn.f32 	%f2287, %f1, %f1317, %f2245;
	fma.rn.f32 	%f2288, %f1, %f1318, %f2242;
	fma.rn.f32 	%f2289, %f1, %f1319, %f2242;
	fma.rn.f32 	%f2290, %f1, %f1320, %f2245;
	fma.rn.f32 	%f2291, %f1, %f1321, %f2245;
	fma.rn.f32 	%f2292, %f1, %f1322, %f2242;
	fma.rn.f32 	%f2293, %f1, %f1323, %f2242;
	fma.rn.f32 	%f2294, %f1, %f1324, %f2245;
	fma.rn.f32 	%f2295, %f1, %f1325, %f2245;
	fma.rn.f32 	%f2296, %f1, %f1326, %f2242;
	fma.rn.f32 	%f2297, %f1, %f1327, %f2242;
	fma.rn.f32 	%f2298, %f1, %f1328, %f2245;
	fma.rn.f32 	%f2299, %f1, %f1329, %f2245;
	fma.rn.f32 	%f2300, %f1, %f1330, %f2242;
	fma.rn.f32 	%f2301, %f1, %f1331, %f2242;
	fma.rn.f32 	%f2302, %f1, %f1332, %f2245;
	fma.rn.f32 	%f2303, %f1, %f1333, %f2245;
	fma.rn.f32 	%f2304, %f1, %f1334, %f2242;
	fma.rn.f32 	%f2305, %f1, %f1335, %f2242;
	fma.rn.f32 	%f2306, %f1, %f1336, %f2245;
	fma.rn.f32 	%f2307, %f1, %f1337, %f2245;
	.loc	1 157 29                        // hopper-fa-ws-pipelined-pingpong.py:157:29
	ex2.approx.ftz.f32 	%f11678, %f2243;
	ex2.approx.ftz.f32 	%f11679, %f2244;
	ex2.approx.ftz.f32 	%f11676, %f2246;
	ex2.approx.ftz.f32 	%f11677, %f2247;
	ex2.approx.ftz.f32 	%f11674, %f2248;
	ex2.approx.ftz.f32 	%f11675, %f2249;
	ex2.approx.ftz.f32 	%f11672, %f2250;
	ex2.approx.ftz.f32 	%f11673, %f2251;
	ex2.approx.ftz.f32 	%f11670, %f2252;
	ex2.approx.ftz.f32 	%f11671, %f2253;
	ex2.approx.ftz.f32 	%f11668, %f2254;
	ex2.approx.ftz.f32 	%f11669, %f2255;
	ex2.approx.ftz.f32 	%f11666, %f2256;
	ex2.approx.ftz.f32 	%f11667, %f2257;
	ex2.approx.ftz.f32 	%f11664, %f2258;
	ex2.approx.ftz.f32 	%f11665, %f2259;
	ex2.approx.ftz.f32 	%f11662, %f2260;
	ex2.approx.ftz.f32 	%f11663, %f2261;
	ex2.approx.ftz.f32 	%f11660, %f2262;
	ex2.approx.ftz.f32 	%f11661, %f2263;
	ex2.approx.ftz.f32 	%f11658, %f2264;
	ex2.approx.ftz.f32 	%f11659, %f2265;
	ex2.approx.ftz.f32 	%f11656, %f2266;
	ex2.approx.ftz.f32 	%f11657, %f2267;
	ex2.approx.ftz.f32 	%f11654, %f2268;
	ex2.approx.ftz.f32 	%f11655, %f2269;
	ex2.approx.ftz.f32 	%f11652, %f2270;
	ex2.approx.ftz.f32 	%f11653, %f2271;
	ex2.approx.ftz.f32 	%f11650, %f2272;
	ex2.approx.ftz.f32 	%f11651, %f2273;
	ex2.approx.ftz.f32 	%f11648, %f2274;
	ex2.approx.ftz.f32 	%f11649, %f2275;
	ex2.approx.ftz.f32 	%f11646, %f2276;
	ex2.approx.ftz.f32 	%f11647, %f2277;
	ex2.approx.ftz.f32 	%f11644, %f2278;
	ex2.approx.ftz.f32 	%f11645, %f2279;
	ex2.approx.ftz.f32 	%f11642, %f2280;
	ex2.approx.ftz.f32 	%f11643, %f2281;
	ex2.approx.ftz.f32 	%f11640, %f2282;
	ex2.approx.ftz.f32 	%f11641, %f2283;
	ex2.approx.ftz.f32 	%f11638, %f2284;
	ex2.approx.ftz.f32 	%f11639, %f2285;
	ex2.approx.ftz.f32 	%f11636, %f2286;
	ex2.approx.ftz.f32 	%f11637, %f2287;
	ex2.approx.ftz.f32 	%f11634, %f2288;
	ex2.approx.ftz.f32 	%f11635, %f2289;
	ex2.approx.ftz.f32 	%f11632, %f2290;
	ex2.approx.ftz.f32 	%f11633, %f2291;
	ex2.approx.ftz.f32 	%f11630, %f2292;
	ex2.approx.ftz.f32 	%f11631, %f2293;
	ex2.approx.ftz.f32 	%f11628, %f2294;
	ex2.approx.ftz.f32 	%f11629, %f2295;
	ex2.approx.ftz.f32 	%f11626, %f2296;
	ex2.approx.ftz.f32 	%f11627, %f2297;
	ex2.approx.ftz.f32 	%f11624, %f2298;
	ex2.approx.ftz.f32 	%f11625, %f2299;
	ex2.approx.ftz.f32 	%f11622, %f2300;
	ex2.approx.ftz.f32 	%f11623, %f2301;
	ex2.approx.ftz.f32 	%f11620, %f2302;
	ex2.approx.ftz.f32 	%f11621, %f2303;
	ex2.approx.ftz.f32 	%f11618, %f2304;
	ex2.approx.ftz.f32 	%f11619, %f2305;
	ex2.approx.ftz.f32 	%f11616, %f2306;
	ex2.approx.ftz.f32 	%f11617, %f2307;
	mov.b32 	%f2308, 0fFF800000;
	.loc	1 159 39                        // hopper-fa-ws-pipelined-pingpong.py:159:39
	sub.f32 	%f2309, %f2308, %f11614;
	sub.f32 	%f2310, %f2308, %f11615;
	.loc	1 159 33                        // hopper-fa-ws-pipelined-pingpong.py:159:33
	ex2.approx.ftz.f32 	%f2311, %f2309;
	ex2.approx.ftz.f32 	%f2312, %f2310;
	.loc	1 161 24                        // hopper-fa-ws-pipelined-pingpong.py:161:24
	mul.f32 	%f11483, %f2311, 0f00000000;
	mul.f32 	%f11481, %f2312, 0f00000000;
$L__tmp3:
	.loc	2 260 15                        // standard.py:260:15 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	add.f32 	%f2313, %f11678, %f11679;
	add.f32 	%f2314, %f11676, %f11677;
	add.f32 	%f2315, %f2313, %f11674;
	add.f32 	%f2316, %f2315, %f11675;
	add.f32 	%f2317, %f2314, %f11672;
	add.f32 	%f2318, %f2317, %f11673;
	add.f32 	%f2319, %f2316, %f11670;
	add.f32 	%f2320, %f2319, %f11671;
	add.f32 	%f2321, %f2318, %f11668;
	add.f32 	%f2322, %f2321, %f11669;
	add.f32 	%f2323, %f2320, %f11666;
	add.f32 	%f2324, %f2323, %f11667;
	add.f32 	%f2325, %f2322, %f11664;
	add.f32 	%f2326, %f2325, %f11665;
	add.f32 	%f2327, %f2324, %f11662;
	add.f32 	%f2328, %f2327, %f11663;
	add.f32 	%f2329, %f2326, %f11660;
	add.f32 	%f2330, %f2329, %f11661;
	add.f32 	%f2331, %f2328, %f11658;
	add.f32 	%f2332, %f2331, %f11659;
	add.f32 	%f2333, %f2330, %f11656;
	add.f32 	%f2334, %f2333, %f11657;
	add.f32 	%f2335, %f2332, %f11654;
	add.f32 	%f2336, %f2335, %f11655;
	add.f32 	%f2337, %f2334, %f11652;
	add.f32 	%f2338, %f2337, %f11653;
	add.f32 	%f2339, %f2336, %f11650;
	add.f32 	%f2340, %f2339, %f11651;
	add.f32 	%f2341, %f2338, %f11648;
	add.f32 	%f2342, %f2341, %f11649;
	add.f32 	%f2343, %f2340, %f11646;
	add.f32 	%f2344, %f2343, %f11647;
	add.f32 	%f2345, %f2342, %f11644;
	add.f32 	%f2346, %f2345, %f11645;
	add.f32 	%f2347, %f2344, %f11642;
	add.f32 	%f2348, %f2347, %f11643;
	add.f32 	%f2349, %f2346, %f11640;
	add.f32 	%f2350, %f2349, %f11641;
	add.f32 	%f2351, %f2348, %f11638;
	add.f32 	%f2352, %f2351, %f11639;
	add.f32 	%f2353, %f2350, %f11636;
	add.f32 	%f2354, %f2353, %f11637;
	add.f32 	%f2355, %f2352, %f11634;
	add.f32 	%f2356, %f2355, %f11635;
	add.f32 	%f2357, %f2354, %f11632;
	add.f32 	%f2358, %f2357, %f11633;
	add.f32 	%f2359, %f2356, %f11630;
	add.f32 	%f2360, %f2359, %f11631;
	add.f32 	%f2361, %f2358, %f11628;
	add.f32 	%f2362, %f2361, %f11629;
	add.f32 	%f2363, %f2360, %f11626;
	add.f32 	%f2364, %f2363, %f11627;
	add.f32 	%f2365, %f2362, %f11624;
	add.f32 	%f2366, %f2365, %f11625;
	add.f32 	%f2367, %f2364, %f11622;
	add.f32 	%f2368, %f2367, %f11623;
	add.f32 	%f2369, %f2366, %f11620;
	add.f32 	%f2370, %f2369, %f11621;
	add.f32 	%f2371, %f2368, %f11618;
	add.f32 	%f2372, %f2371, %f11619;
	add.f32 	%f2373, %f2370, %f11616;
	add.f32 	%f2374, %f2373, %f11617;
	.loc	2 290 36                        // standard.py:290:36 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	mov.b32 	%r74, %f2372;
	shfl.sync.bfly.b32	%r75, %r74, 2, 31, -1;
	mov.b32 	%f2375, %r75;
	.loc	2 260 15                        // standard.py:260:15 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	add.f32 	%f2376, %f2372, %f2375;
	.loc	2 290 36                        // standard.py:290:36 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	mov.b32 	%r76, %f2376;
	shfl.sync.bfly.b32	%r77, %r76, 1, 31, -1;
	mov.b32 	%f2377, %r77;
	.loc	2 260 15                        // standard.py:260:15 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	add.f32 	%f2378, %f2376, %f2377;
	.loc	2 290 36                        // standard.py:290:36 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	mov.b32 	%r78, %f2374;
	shfl.sync.bfly.b32	%r79, %r78, 2, 31, -1;
	mov.b32 	%f2379, %r79;
	.loc	2 260 15                        // standard.py:260:15 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	add.f32 	%f2380, %f2374, %f2379;
	.loc	2 290 36                        // standard.py:290:36 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	mov.b32 	%r80, %f2380;
	shfl.sync.bfly.b32	%r81, %r80, 1, 31, -1;
	mov.b32 	%f2381, %r81;
	.loc	2 260 15                        // standard.py:260:15 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	add.f32 	%f2382, %f2380, %f2381;
$L__tmp4:
	.loc	1 163 32                        // hopper-fa-ws-pipelined-pingpong.py:163:32
	add.f32 	%f11612, %f2311, %f2378;
	add.f32 	%f11613, %f2312, %f2382;
	mov.b32 	%r642, 1;
	mov.b32 	%f11482, %f11483;
	mov.b32 	%f11480, %f11481;
	mov.b32 	%f11479, %f11483;
	mov.b32 	%f11478, %f11483;
	mov.b32 	%f11477, %f11481;
	mov.b32 	%f11476, %f11481;
	mov.b32 	%f11475, %f11483;
	mov.b32 	%f11474, %f11483;
	mov.b32 	%f11473, %f11481;
	mov.b32 	%f11472, %f11481;
	mov.b32 	%f11471, %f11483;
	mov.b32 	%f11470, %f11483;
	mov.b32 	%f11469, %f11481;
	mov.b32 	%f11468, %f11481;
	mov.b32 	%f11467, %f11483;
	mov.b32 	%f11466, %f11483;
	mov.b32 	%f11465, %f11481;
	mov.b32 	%f11464, %f11481;
	mov.b32 	%f11463, %f11483;
	mov.b32 	%f11462, %f11483;
	mov.b32 	%f11461, %f11481;
	mov.b32 	%f11460, %f11481;
	mov.b32 	%f11459, %f11483;
	mov.b32 	%f11458, %f11483;
	mov.b32 	%f11457, %f11481;
	mov.b32 	%f11456, %f11481;
	mov.b32 	%f11455, %f11483;
	mov.b32 	%f11454, %f11483;
	mov.b32 	%f11453, %f11481;
	mov.b32 	%f11452, %f11481;
	mov.b32 	%f11451, %f11483;
	mov.b32 	%f11450, %f11483;
	mov.b32 	%f11449, %f11481;
	mov.b32 	%f11448, %f11481;
	mov.b32 	%f11447, %f11483;
	mov.b32 	%f11446, %f11483;
	mov.b32 	%f11445, %f11481;
	mov.b32 	%f11444, %f11481;
	mov.b32 	%f11443, %f11483;
	mov.b32 	%f11442, %f11483;
	mov.b32 	%f11441, %f11481;
	mov.b32 	%f11440, %f11481;
	mov.b32 	%f11439, %f11483;
	mov.b32 	%f11438, %f11483;
	mov.b32 	%f11437, %f11481;
	mov.b32 	%f11436, %f11481;
	mov.b32 	%f11435, %f11483;
	mov.b32 	%f11434, %f11483;
	mov.b32 	%f11433, %f11481;
	mov.b32 	%f11432, %f11481;
	mov.b32 	%f11431, %f11483;
	mov.b32 	%f11430, %f11483;
	mov.b32 	%f11429, %f11481;
	mov.b32 	%f11428, %f11481;
	mov.b32 	%f11427, %f11483;
	mov.b32 	%f11426, %f11483;
	mov.b32 	%f11425, %f11481;
	mov.b32 	%f11424, %f11481;
	mov.b32 	%f11423, %f11483;
	mov.b32 	%f11422, %f11483;
	mov.b32 	%f11421, %f11481;
	mov.b32 	%f11420, %f11481;
	.loc	1 168 48                        // hopper-fa-ws-pipelined-pingpong.py:168:48
	@%p71 bra 	$L__BB0_17;
// %bb.15:                              // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 48                          // hopper-fa-ws-pipelined-pingpong.py:0:48
	mov.b32 	%r641, 128;
	mov.b32 	%r640, 0;
	mov.b32 	%r638, 1;
	mov.b32 	%f11416, %f11615;
	mov.b32 	%f11417, %f11614;
	mov.b32 	%f11420, %f11481;
	mov.b32 	%f11421, %f11481;
	mov.b32 	%f11422, %f11483;
	mov.b32 	%f11423, %f11483;
	mov.b32 	%f11424, %f11481;
	mov.b32 	%f11425, %f11481;
	mov.b32 	%f11426, %f11483;
	mov.b32 	%f11427, %f11483;
	mov.b32 	%f11428, %f11481;
	mov.b32 	%f11429, %f11481;
	mov.b32 	%f11430, %f11483;
	mov.b32 	%f11431, %f11483;
	mov.b32 	%f11432, %f11481;
	mov.b32 	%f11433, %f11481;
	mov.b32 	%f11434, %f11483;
	mov.b32 	%f11435, %f11483;
	mov.b32 	%f11436, %f11481;
	mov.b32 	%f11437, %f11481;
	mov.b32 	%f11438, %f11483;
	mov.b32 	%f11439, %f11483;
	mov.b32 	%f11440, %f11481;
	mov.b32 	%f11441, %f11481;
	mov.b32 	%f11442, %f11483;
	mov.b32 	%f11443, %f11483;
	mov.b32 	%f11444, %f11481;
	mov.b32 	%f11445, %f11481;
	mov.b32 	%f11446, %f11483;
	mov.b32 	%f11447, %f11483;
	mov.b32 	%f11448, %f11481;
	mov.b32 	%f11449, %f11481;
	mov.b32 	%f11450, %f11483;
	mov.b32 	%f11451, %f11483;
	mov.b32 	%f11452, %f11481;
	mov.b32 	%f11453, %f11481;
	mov.b32 	%f11454, %f11483;
	mov.b32 	%f11455, %f11483;
	mov.b32 	%f11456, %f11481;
	mov.b32 	%f11457, %f11481;
	mov.b32 	%f11458, %f11483;
	mov.b32 	%f11459, %f11483;
	mov.b32 	%f11460, %f11481;
	mov.b32 	%f11461, %f11481;
	mov.b32 	%f11462, %f11483;
	mov.b32 	%f11463, %f11483;
	mov.b32 	%f11464, %f11481;
	mov.b32 	%f11465, %f11481;
	mov.b32 	%f11466, %f11483;
	mov.b32 	%f11467, %f11483;
	mov.b32 	%f11468, %f11481;
	mov.b32 	%f11469, %f11481;
	mov.b32 	%f11470, %f11483;
	mov.b32 	%f11471, %f11483;
	mov.b32 	%f11472, %f11481;
	mov.b32 	%f11473, %f11481;
	mov.b32 	%f11474, %f11483;
	mov.b32 	%f11475, %f11483;
	mov.b32 	%f11476, %f11481;
	mov.b32 	%f11477, %f11481;
	mov.b32 	%f11478, %f11483;
	mov.b32 	%f11479, %f11483;
	mov.b32 	%f11480, %f11481;
	mov.b32 	%f11482, %f11483;
	mov.b32 	%r642, %r638;
$L__BB0_16:                             // %.lr.ph
                                        //   Parent Loop BB0_2 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.loc	1 169 37                        // hopper-fa-ws-pipelined-pingpong.py:169:37
	shr.u32 	%r123, %r638, 31;
	add.s32 	%r124, %r638, %r123;
	and.b32 	%r125, %r124, -2;
	sub.s32 	%r643, %r638, %r125;
	.loc	1 171 49                        // hopper-fa-ws-pipelined-pingpong.py:171:49
	setp.eq.s32 	%p35, %r643, 0;
	.loc	1 171 37                        // hopper-fa-ws-pipelined-pingpong.py:171:37
	selp.b32 	%r126, 1, 0, %p35;
	xor.b32 	%r640, %r640, %r126;
	.loc	1 174 41                        // hopper-fa-ws-pipelined-pingpong.py:174:41
	shl.b32 	%r127, %r643, 3;
	add.s32 	%r129, %r48, %r127;
	add.s32 	%r85, %r129, 196640;
	.loc	1 174 52                        // hopper-fa-ws-pipelined-pingpong.py:174:52
	// begin inline asm
	barrier.sync.aligned 3, 128 ;
	// end inline asm
	mov.pred 	%p16, -1;
	// begin inline asm
	{                                                           
	@!%p16 bra.uni skipWait;                                      
	.reg .pred P1;                                              
	waitLoop:                                                   
	mbarrier.try_wait.parity.shared.b64 P1, [%r85], %r640;           
	@!P1 bra.uni waitLoop;                                      
	skipWait:                                                   
	}                                                           
	
	// end inline asm
	.loc	1 177 49                        // hopper-fa-ws-pipelined-pingpong.py:177:49
	shl.b32 	%r130, %r643, 15;
	add.s32 	%r131, %r48, %r130;
	.loc	1 178 49                        // hopper-fa-ws-pipelined-pingpong.py:178:49
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	bfe.u32 	%r132, %r131, 4, 14;
	cvt.u64.u32 	%rd72, %r132;
	or.b64 	%rd49, %rd72, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f2575,%f2576,%f2577,%f2578,%f2579,%f2580,%f2581,%f2582,%f2583,%f2584,%f2585,%f2586,%f2587,%f2588,%f2589,%f2590,%f2591,%f2592,%f2593,%f2594,%f2595,%f2596,%f2597,%f2598,%f2599,%f2600,%f2601,%f2602,%f2603,%f2604,%f2605,%f2606,%f2607,%f2608,%f2609,%f2610,%f2611,%f2612,%f2613,%f2614,%f2615,%f2616,%f2617,%f2618,%f2619,%f2620,%f2621,%f2622,%f2623,%f2624,%f2625,%f2626,%f2627,%f2628,%f2629,%f2630,%f2631,%f2632,%f2633,%f2634,%f2635,%f2636,%f2637,%f2638}, %rd48, %rd49, 0, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd51, %rd72, 4611686293372403714;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f2575,%f2576,%f2577,%f2578,%f2579,%f2580,%f2581,%f2582,%f2583,%f2584,%f2585,%f2586,%f2587,%f2588,%f2589,%f2590,%f2591,%f2592,%f2593,%f2594,%f2595,%f2596,%f2597,%f2598,%f2599,%f2600,%f2601,%f2602,%f2603,%f2604,%f2605,%f2606,%f2607,%f2608,%f2609,%f2610,%f2611,%f2612,%f2613,%f2614,%f2615,%f2616,%f2617,%f2618,%f2619,%f2620,%f2621,%f2622,%f2623,%f2624,%f2625,%f2626,%f2627,%f2628,%f2629,%f2630,%f2631,%f2632,%f2633,%f2634,%f2635,%f2636,%f2637,%f2638}, %rd50, %rd51, %p16, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd53, %rd72, 4611686293372403716;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f2575,%f2576,%f2577,%f2578,%f2579,%f2580,%f2581,%f2582,%f2583,%f2584,%f2585,%f2586,%f2587,%f2588,%f2589,%f2590,%f2591,%f2592,%f2593,%f2594,%f2595,%f2596,%f2597,%f2598,%f2599,%f2600,%f2601,%f2602,%f2603,%f2604,%f2605,%f2606,%f2607,%f2608,%f2609,%f2610,%f2611,%f2612,%f2613,%f2614,%f2615,%f2616,%f2617,%f2618,%f2619,%f2620,%f2621,%f2622,%f2623,%f2624,%f2625,%f2626,%f2627,%f2628,%f2629,%f2630,%f2631,%f2632,%f2633,%f2634,%f2635,%f2636,%f2637,%f2638}, %rd52, %rd53, %p16, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd55, %rd72, 4611686293372403718;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f2575,%f2576,%f2577,%f2578,%f2579,%f2580,%f2581,%f2582,%f2583,%f2584,%f2585,%f2586,%f2587,%f2588,%f2589,%f2590,%f2591,%f2592,%f2593,%f2594,%f2595,%f2596,%f2597,%f2598,%f2599,%f2600,%f2601,%f2602,%f2603,%f2604,%f2605,%f2606,%f2607,%f2608,%f2609,%f2610,%f2611,%f2612,%f2613,%f2614,%f2615,%f2616,%f2617,%f2618,%f2619,%f2620,%f2621,%f2622,%f2623,%f2624,%f2625,%f2626,%f2627,%f2628,%f2629,%f2630,%f2631,%f2632,%f2633,%f2634,%f2635,%f2636,%f2637,%f2638}, %rd54, %rd55, %p16, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd57, %rd72, 4611686293372404736;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f2575,%f2576,%f2577,%f2578,%f2579,%f2580,%f2581,%f2582,%f2583,%f2584,%f2585,%f2586,%f2587,%f2588,%f2589,%f2590,%f2591,%f2592,%f2593,%f2594,%f2595,%f2596,%f2597,%f2598,%f2599,%f2600,%f2601,%f2602,%f2603,%f2604,%f2605,%f2606,%f2607,%f2608,%f2609,%f2610,%f2611,%f2612,%f2613,%f2614,%f2615,%f2616,%f2617,%f2618,%f2619,%f2620,%f2621,%f2622,%f2623,%f2624,%f2625,%f2626,%f2627,%f2628,%f2629,%f2630,%f2631,%f2632,%f2633,%f2634,%f2635,%f2636,%f2637,%f2638}, %rd56, %rd57, %p16, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd59, %rd72, 4611686293372404738;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f2575,%f2576,%f2577,%f2578,%f2579,%f2580,%f2581,%f2582,%f2583,%f2584,%f2585,%f2586,%f2587,%f2588,%f2589,%f2590,%f2591,%f2592,%f2593,%f2594,%f2595,%f2596,%f2597,%f2598,%f2599,%f2600,%f2601,%f2602,%f2603,%f2604,%f2605,%f2606,%f2607,%f2608,%f2609,%f2610,%f2611,%f2612,%f2613,%f2614,%f2615,%f2616,%f2617,%f2618,%f2619,%f2620,%f2621,%f2622,%f2623,%f2624,%f2625,%f2626,%f2627,%f2628,%f2629,%f2630,%f2631,%f2632,%f2633,%f2634,%f2635,%f2636,%f2637,%f2638}, %rd58, %rd59, %p16, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd61, %rd72, 4611686293372404740;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f2575,%f2576,%f2577,%f2578,%f2579,%f2580,%f2581,%f2582,%f2583,%f2584,%f2585,%f2586,%f2587,%f2588,%f2589,%f2590,%f2591,%f2592,%f2593,%f2594,%f2595,%f2596,%f2597,%f2598,%f2599,%f2600,%f2601,%f2602,%f2603,%f2604,%f2605,%f2606,%f2607,%f2608,%f2609,%f2610,%f2611,%f2612,%f2613,%f2614,%f2615,%f2616,%f2617,%f2618,%f2619,%f2620,%f2621,%f2622,%f2623,%f2624,%f2625,%f2626,%f2627,%f2628,%f2629,%f2630,%f2631,%f2632,%f2633,%f2634,%f2635,%f2636,%f2637,%f2638}, %rd60, %rd61, %p16, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd63, %rd72, 4611686293372404742;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f2575,%f2576,%f2577,%f2578,%f2579,%f2580,%f2581,%f2582,%f2583,%f2584,%f2585,%f2586,%f2587,%f2588,%f2589,%f2590,%f2591,%f2592,%f2593,%f2594,%f2595,%f2596,%f2597,%f2598,%f2599,%f2600,%f2601,%f2602,%f2603,%f2604,%f2605,%f2606,%f2607,%f2608,%f2609,%f2610,%f2611,%f2612,%f2613,%f2614,%f2615,%f2616,%f2617,%f2618,%f2619,%f2620,%f2621,%f2622,%f2623,%f2624,%f2625,%f2626,%f2627,%f2628,%f2629,%f2630,%f2631,%f2632,%f2633,%f2634,%f2635,%f2636,%f2637,%f2638}, %rd62, %rd63, %p16, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	.loc	1 182 38                        // hopper-fa-ws-pipelined-pingpong.py:182:38
	add.s32 	%r133, %r638, -1;
	.loc	1 182 43                        // hopper-fa-ws-pipelined-pingpong.py:182:43
	shr.u32 	%r134, %r133, 31;
	add.s32 	%r135, %r133, %r134;
	and.b32 	%r136, %r135, -2;
	sub.s32 	%r137, %r133, %r136;
	.loc	1 183 49                        // hopper-fa-ws-pipelined-pingpong.py:183:49
	setp.eq.s32 	%p36, %r137, 0;
	.loc	1 183 37                        // hopper-fa-ws-pipelined-pingpong.py:183:37
	selp.b32 	%r138, 1, 0, %p36;
	xor.b32 	%r642, %r642, %r138;
	.loc	1 184 41                        // hopper-fa-ws-pipelined-pingpong.py:184:41
	shl.b32 	%r139, %r137, 3;
	add.s32 	%r140, %r48, %r139;
	add.s32 	%r87, %r140, 196672;
	.loc	1 184 52                        // hopper-fa-ws-pipelined-pingpong.py:184:52
	// begin inline asm
	{                                                           
	@!%p16 bra.uni skipWait;                                      
	.reg .pred P1;                                              
	waitLoop:                                                   
	mbarrier.try_wait.parity.shared.b64 P1, [%r87], %r642;           
	@!P1 bra.uni waitLoop;                                      
	skipWait:                                                   
	}                                                           
	
	// end inline asm
	.loc	1 186 25                        // hopper-fa-ws-pipelined-pingpong.py:186:25
	cvt.rn.f16x2.f32 	%r89, %f11679, %f11678;
	cvt.rn.f16x2.f32 	%r90, %f11677, %f11676;
	cvt.rn.f16x2.f32 	%r91, %f11675, %f11674;
	cvt.rn.f16x2.f32 	%r92, %f11673, %f11672;
	cvt.rn.f16x2.f32 	%r93, %f11671, %f11670;
	cvt.rn.f16x2.f32 	%r94, %f11669, %f11668;
	cvt.rn.f16x2.f32 	%r95, %f11667, %f11666;
	cvt.rn.f16x2.f32 	%r96, %f11665, %f11664;
	cvt.rn.f16x2.f32 	%r97, %f11663, %f11662;
	cvt.rn.f16x2.f32 	%r98, %f11661, %f11660;
	cvt.rn.f16x2.f32 	%r99, %f11659, %f11658;
	cvt.rn.f16x2.f32 	%r100, %f11657, %f11656;
	cvt.rn.f16x2.f32 	%r101, %f11655, %f11654;
	cvt.rn.f16x2.f32 	%r102, %f11653, %f11652;
	cvt.rn.f16x2.f32 	%r103, %f11651, %f11650;
	cvt.rn.f16x2.f32 	%r104, %f11649, %f11648;
	cvt.rn.f16x2.f32 	%r105, %f11647, %f11646;
	cvt.rn.f16x2.f32 	%r106, %f11645, %f11644;
	cvt.rn.f16x2.f32 	%r107, %f11643, %f11642;
	cvt.rn.f16x2.f32 	%r108, %f11641, %f11640;
	cvt.rn.f16x2.f32 	%r109, %f11639, %f11638;
	cvt.rn.f16x2.f32 	%r110, %f11637, %f11636;
	cvt.rn.f16x2.f32 	%r111, %f11635, %f11634;
	cvt.rn.f16x2.f32 	%r112, %f11633, %f11632;
	cvt.rn.f16x2.f32 	%r113, %f11631, %f11630;
	cvt.rn.f16x2.f32 	%r114, %f11629, %f11628;
	cvt.rn.f16x2.f32 	%r115, %f11627, %f11626;
	cvt.rn.f16x2.f32 	%r116, %f11625, %f11624;
	cvt.rn.f16x2.f32 	%r117, %f11623, %f11622;
	cvt.rn.f16x2.f32 	%r118, %f11621, %f11620;
	cvt.rn.f16x2.f32 	%r119, %f11619, %f11618;
	cvt.rn.f16x2.f32 	%r120, %f11617, %f11616;
	.loc	1 187 47                        // hopper-fa-ws-pipelined-pingpong.py:187:47
	shl.b32 	%r141, %r137, 15;
	add.s32 	%r142, %r48, %r141;
	add.s32 	%r143, %r142, 65536;
	.loc	1 187 58                        // hopper-fa-ws-pipelined-pingpong.py:187:58
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	bfe.u32 	%r144, %r143, 4, 14;
	cvt.u64.u32 	%rd73, %r144;
	or.b64 	%rd64, %rd73, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11483,%f11482,%f11481,%f11480,%f11479,%f11478,%f11477,%f11476,%f11475,%f11474,%f11473,%f11472,%f11471,%f11470,%f11469,%f11468,%f11467,%f11466,%f11465,%f11464,%f11463,%f11462,%f11461,%f11460,%f11459,%f11458,%f11457,%f11456,%f11455,%f11454,%f11453,%f11452,%f11451,%f11450,%f11449,%f11448,%f11447,%f11446,%f11445,%f11444,%f11443,%f11442,%f11441,%f11440,%f11439,%f11438,%f11437,%f11436,%f11435,%f11434,%f11433,%f11432,%f11431,%f11430,%f11429,%f11428,%f11427,%f11426,%f11425,%f11424,%f11423,%f11422,%f11421,%f11420}, {%r89,%r90,%r91,%r92}, %rd64, %p16, 1, 1, 1;
	// end inline asm
	add.s64 	%rd65, %rd73, 4611686293372403840;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11483,%f11482,%f11481,%f11480,%f11479,%f11478,%f11477,%f11476,%f11475,%f11474,%f11473,%f11472,%f11471,%f11470,%f11469,%f11468,%f11467,%f11466,%f11465,%f11464,%f11463,%f11462,%f11461,%f11460,%f11459,%f11458,%f11457,%f11456,%f11455,%f11454,%f11453,%f11452,%f11451,%f11450,%f11449,%f11448,%f11447,%f11446,%f11445,%f11444,%f11443,%f11442,%f11441,%f11440,%f11439,%f11438,%f11437,%f11436,%f11435,%f11434,%f11433,%f11432,%f11431,%f11430,%f11429,%f11428,%f11427,%f11426,%f11425,%f11424,%f11423,%f11422,%f11421,%f11420}, {%r93,%r94,%r95,%r96}, %rd65, %p16, 1, 1, 1;
	// end inline asm
	add.s64 	%rd66, %rd73, 4611686293372403968;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11483,%f11482,%f11481,%f11480,%f11479,%f11478,%f11477,%f11476,%f11475,%f11474,%f11473,%f11472,%f11471,%f11470,%f11469,%f11468,%f11467,%f11466,%f11465,%f11464,%f11463,%f11462,%f11461,%f11460,%f11459,%f11458,%f11457,%f11456,%f11455,%f11454,%f11453,%f11452,%f11451,%f11450,%f11449,%f11448,%f11447,%f11446,%f11445,%f11444,%f11443,%f11442,%f11441,%f11440,%f11439,%f11438,%f11437,%f11436,%f11435,%f11434,%f11433,%f11432,%f11431,%f11430,%f11429,%f11428,%f11427,%f11426,%f11425,%f11424,%f11423,%f11422,%f11421,%f11420}, {%r97,%r98,%r99,%r100}, %rd66, %p16, 1, 1, 1;
	// end inline asm
	add.s64 	%rd67, %rd73, 4611686293372404096;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11483,%f11482,%f11481,%f11480,%f11479,%f11478,%f11477,%f11476,%f11475,%f11474,%f11473,%f11472,%f11471,%f11470,%f11469,%f11468,%f11467,%f11466,%f11465,%f11464,%f11463,%f11462,%f11461,%f11460,%f11459,%f11458,%f11457,%f11456,%f11455,%f11454,%f11453,%f11452,%f11451,%f11450,%f11449,%f11448,%f11447,%f11446,%f11445,%f11444,%f11443,%f11442,%f11441,%f11440,%f11439,%f11438,%f11437,%f11436,%f11435,%f11434,%f11433,%f11432,%f11431,%f11430,%f11429,%f11428,%f11427,%f11426,%f11425,%f11424,%f11423,%f11422,%f11421,%f11420}, {%r101,%r102,%r103,%r104}, %rd67, %p16, 1, 1, 1;
	// end inline asm
	add.s64 	%rd68, %rd73, 4611686293372404224;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11483,%f11482,%f11481,%f11480,%f11479,%f11478,%f11477,%f11476,%f11475,%f11474,%f11473,%f11472,%f11471,%f11470,%f11469,%f11468,%f11467,%f11466,%f11465,%f11464,%f11463,%f11462,%f11461,%f11460,%f11459,%f11458,%f11457,%f11456,%f11455,%f11454,%f11453,%f11452,%f11451,%f11450,%f11449,%f11448,%f11447,%f11446,%f11445,%f11444,%f11443,%f11442,%f11441,%f11440,%f11439,%f11438,%f11437,%f11436,%f11435,%f11434,%f11433,%f11432,%f11431,%f11430,%f11429,%f11428,%f11427,%f11426,%f11425,%f11424,%f11423,%f11422,%f11421,%f11420}, {%r105,%r106,%r107,%r108}, %rd68, %p16, 1, 1, 1;
	// end inline asm
	add.s64 	%rd69, %rd73, 4611686293372404352;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11483,%f11482,%f11481,%f11480,%f11479,%f11478,%f11477,%f11476,%f11475,%f11474,%f11473,%f11472,%f11471,%f11470,%f11469,%f11468,%f11467,%f11466,%f11465,%f11464,%f11463,%f11462,%f11461,%f11460,%f11459,%f11458,%f11457,%f11456,%f11455,%f11454,%f11453,%f11452,%f11451,%f11450,%f11449,%f11448,%f11447,%f11446,%f11445,%f11444,%f11443,%f11442,%f11441,%f11440,%f11439,%f11438,%f11437,%f11436,%f11435,%f11434,%f11433,%f11432,%f11431,%f11430,%f11429,%f11428,%f11427,%f11426,%f11425,%f11424,%f11423,%f11422,%f11421,%f11420}, {%r109,%r110,%r111,%r112}, %rd69, %p16, 1, 1, 1;
	// end inline asm
	add.s64 	%rd70, %rd73, 4611686293372404480;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11483,%f11482,%f11481,%f11480,%f11479,%f11478,%f11477,%f11476,%f11475,%f11474,%f11473,%f11472,%f11471,%f11470,%f11469,%f11468,%f11467,%f11466,%f11465,%f11464,%f11463,%f11462,%f11461,%f11460,%f11459,%f11458,%f11457,%f11456,%f11455,%f11454,%f11453,%f11452,%f11451,%f11450,%f11449,%f11448,%f11447,%f11446,%f11445,%f11444,%f11443,%f11442,%f11441,%f11440,%f11439,%f11438,%f11437,%f11436,%f11435,%f11434,%f11433,%f11432,%f11431,%f11430,%f11429,%f11428,%f11427,%f11426,%f11425,%f11424,%f11423,%f11422,%f11421,%f11420}, {%r113,%r114,%r115,%r116}, %rd70, %p16, 1, 1, 1;
	// end inline asm
	add.s64 	%rd71, %rd73, 4611686293372404608;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11483,%f11482,%f11481,%f11480,%f11479,%f11478,%f11477,%f11476,%f11475,%f11474,%f11473,%f11472,%f11471,%f11470,%f11469,%f11468,%f11467,%f11466,%f11465,%f11464,%f11463,%f11462,%f11461,%f11460,%f11459,%f11458,%f11457,%f11456,%f11455,%f11454,%f11453,%f11452,%f11451,%f11450,%f11449,%f11448,%f11447,%f11446,%f11445,%f11444,%f11443,%f11442,%f11441,%f11440,%f11439,%f11438,%f11437,%f11436,%f11435,%f11434,%f11433,%f11432,%f11431,%f11430,%f11429,%f11428,%f11427,%f11426,%f11425,%f11424,%f11423,%f11422,%f11421,%f11420}, {%r117,%r118,%r119,%r120}, %rd71, %p16, 1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	.loc	1 190 43                        // hopper-fa-ws-pipelined-pingpong.py:190:43
	// begin inline asm
	// wait for regs: %f2575,%f2576,%f2577,%f2578,%f2579,%f2580,%f2581,%f2582,%f2583,%f2584,%f2585,%f2586,%f2587,%f2588,%f2589,%f2590,%f2591,%f2592,%f2593,%f2594,%f2595,%f2596,%f2597,%f2598,%f2599,%f2600,%f2601,%f2602,%f2603,%f2604,%f2605,%f2606,%f2607,%f2608,%f2609,%f2610,%f2611,%f2612,%f2613,%f2614,%f2615,%f2616,%f2617,%f2618,%f2619,%f2620,%f2621,%f2622,%f2623,%f2624,%f2625,%f2626,%f2627,%f2628,%f2629,%f2630,%f2631,%f2632,%f2633,%f2634,%f2635,%f2636,%f2637,%f2638
	wgmma.wait_group.sync.aligned 1;
	// end inline asm
	.loc	1 192 45                        // hopper-fa-ws-pipelined-pingpong.py:192:45
	add.s32 	%r121, %r129, 196624;
	.loc	1 192 56                        // hopper-fa-ws-pipelined-pingpong.py:192:56
	// begin inline asm
	barrier.sync.aligned 3, 128 ;
	// end inline asm
	// begin inline asm
	@%p33 mbarrier.arrive.shared::cta.b64 _, [%r121], 1;
	// end inline asm
$L__tmp5:
	.loc	2 167 27                        // standard.py:167:27 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	max.f32 	%f4623, %f2575, %f2576;
	max.f32 	%f4624, %f2577, %f2578;
	max.f32 	%f4625, %f4623, %f2579;
	max.f32 	%f4626, %f4625, %f2580;
	max.f32 	%f4627, %f4624, %f2581;
	max.f32 	%f4628, %f4627, %f2582;
	max.f32 	%f4629, %f4626, %f2583;
	max.f32 	%f4630, %f4629, %f2584;
	max.f32 	%f4631, %f4628, %f2585;
	max.f32 	%f4632, %f4631, %f2586;
	max.f32 	%f4633, %f4630, %f2587;
	max.f32 	%f4634, %f4633, %f2588;
	max.f32 	%f4635, %f4632, %f2589;
	max.f32 	%f4636, %f4635, %f2590;
	max.f32 	%f4637, %f4634, %f2591;
	max.f32 	%f4638, %f4637, %f2592;
	max.f32 	%f4639, %f4636, %f2593;
	max.f32 	%f4640, %f4639, %f2594;
	max.f32 	%f4641, %f4638, %f2595;
	max.f32 	%f4642, %f4641, %f2596;
	max.f32 	%f4643, %f4640, %f2597;
	max.f32 	%f4644, %f4643, %f2598;
	max.f32 	%f4645, %f4642, %f2599;
	max.f32 	%f4646, %f4645, %f2600;
	max.f32 	%f4647, %f4644, %f2601;
	max.f32 	%f4648, %f4647, %f2602;
	max.f32 	%f4649, %f4646, %f2603;
	max.f32 	%f4650, %f4649, %f2604;
	max.f32 	%f4651, %f4648, %f2605;
	max.f32 	%f4652, %f4651, %f2606;
	max.f32 	%f4653, %f4650, %f2607;
	max.f32 	%f4654, %f4653, %f2608;
	max.f32 	%f4655, %f4652, %f2609;
	max.f32 	%f4656, %f4655, %f2610;
	max.f32 	%f4657, %f4654, %f2611;
	max.f32 	%f4658, %f4657, %f2612;
	max.f32 	%f4659, %f4656, %f2613;
	max.f32 	%f4660, %f4659, %f2614;
	max.f32 	%f4661, %f4658, %f2615;
	max.f32 	%f4662, %f4661, %f2616;
	max.f32 	%f4663, %f4660, %f2617;
	max.f32 	%f4664, %f4663, %f2618;
	max.f32 	%f4665, %f4662, %f2619;
	max.f32 	%f4666, %f4665, %f2620;
	max.f32 	%f4667, %f4664, %f2621;
	max.f32 	%f4668, %f4667, %f2622;
	max.f32 	%f4669, %f4666, %f2623;
	max.f32 	%f4670, %f4669, %f2624;
	max.f32 	%f4671, %f4668, %f2625;
	max.f32 	%f4672, %f4671, %f2626;
	max.f32 	%f4673, %f4670, %f2627;
	max.f32 	%f4674, %f4673, %f2628;
	max.f32 	%f4675, %f4672, %f2629;
	max.f32 	%f4676, %f4675, %f2630;
	max.f32 	%f4677, %f4674, %f2631;
	max.f32 	%f4678, %f4677, %f2632;
	max.f32 	%f4679, %f4676, %f2633;
	max.f32 	%f4680, %f4679, %f2634;
	max.f32 	%f4681, %f4678, %f2635;
	max.f32 	%f4682, %f4681, %f2636;
	max.f32 	%f4683, %f4680, %f2637;
	max.f32 	%f4684, %f4683, %f2638;
	.loc	2 188 40                        // standard.py:188:40 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	mov.b32 	%r145, %f4682;
	shfl.sync.bfly.b32	%r146, %r145, 2, 31, -1;
	mov.b32 	%f4685, %r146;
	.loc	2 167 27                        // standard.py:167:27 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	max.f32 	%f4686, %f4682, %f4685;
	.loc	2 188 40                        // standard.py:188:40 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	mov.b32 	%r147, %f4686;
	shfl.sync.bfly.b32	%r148, %r147, 1, 31, -1;
	mov.b32 	%f4687, %r148;
	.loc	2 167 27                        // standard.py:167:27 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	max.f32 	%f4688, %f4686, %f4687;
	.loc	2 188 40                        // standard.py:188:40 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	mov.b32 	%r149, %f4684;
	shfl.sync.bfly.b32	%r150, %r149, 2, 31, -1;
	mov.b32 	%f4689, %r150;
	.loc	2 167 27                        // standard.py:167:27 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	max.f32 	%f4690, %f4684, %f4689;
	.loc	2 188 40                        // standard.py:188:40 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	mov.b32 	%r151, %f4690;
	shfl.sync.bfly.b32	%r152, %r151, 1, 31, -1;
	mov.b32 	%f4691, %r152;
	.loc	2 167 27                        // standard.py:167:27 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	max.f32 	%f4692, %f4690, %f4691;
$L__tmp6:
	.loc	1 195 55                        // hopper-fa-ws-pipelined-pingpong.py:195:55
	mul.f32 	%f4693, %f1, %f4688;
	mul.f32 	%f4694, %f1, %f4692;
	.loc	1 195 39                        // hopper-fa-ws-pipelined-pingpong.py:195:39
	max.f32 	%f11614, %f11417, %f4693;
	max.f32 	%f11615, %f11416, %f4694;
	.loc	1 196 37                        // hopper-fa-ws-pipelined-pingpong.py:196:37
	neg.f32 	%f4695, %f11614;
	fma.rn.f32 	%f4696, %f1, %f2575, %f4695;
	fma.rn.f32 	%f4697, %f1, %f2576, %f4695;
	neg.f32 	%f4698, %f11615;
	fma.rn.f32 	%f4699, %f1, %f2577, %f4698;
	fma.rn.f32 	%f4700, %f1, %f2578, %f4698;
	fma.rn.f32 	%f4701, %f1, %f2579, %f4695;
	fma.rn.f32 	%f4702, %f1, %f2580, %f4695;
	fma.rn.f32 	%f4703, %f1, %f2581, %f4698;
	fma.rn.f32 	%f4704, %f1, %f2582, %f4698;
	fma.rn.f32 	%f4705, %f1, %f2583, %f4695;
	fma.rn.f32 	%f4706, %f1, %f2584, %f4695;
	fma.rn.f32 	%f4707, %f1, %f2585, %f4698;
	fma.rn.f32 	%f4708, %f1, %f2586, %f4698;
	fma.rn.f32 	%f4709, %f1, %f2587, %f4695;
	fma.rn.f32 	%f4710, %f1, %f2588, %f4695;
	fma.rn.f32 	%f4711, %f1, %f2589, %f4698;
	fma.rn.f32 	%f4712, %f1, %f2590, %f4698;
	fma.rn.f32 	%f4713, %f1, %f2591, %f4695;
	fma.rn.f32 	%f4714, %f1, %f2592, %f4695;
	fma.rn.f32 	%f4715, %f1, %f2593, %f4698;
	fma.rn.f32 	%f4716, %f1, %f2594, %f4698;
	fma.rn.f32 	%f4717, %f1, %f2595, %f4695;
	fma.rn.f32 	%f4718, %f1, %f2596, %f4695;
	fma.rn.f32 	%f4719, %f1, %f2597, %f4698;
	fma.rn.f32 	%f4720, %f1, %f2598, %f4698;
	fma.rn.f32 	%f4721, %f1, %f2599, %f4695;
	fma.rn.f32 	%f4722, %f1, %f2600, %f4695;
	fma.rn.f32 	%f4723, %f1, %f2601, %f4698;
	fma.rn.f32 	%f4724, %f1, %f2602, %f4698;
	fma.rn.f32 	%f4725, %f1, %f2603, %f4695;
	fma.rn.f32 	%f4726, %f1, %f2604, %f4695;
	fma.rn.f32 	%f4727, %f1, %f2605, %f4698;
	fma.rn.f32 	%f4728, %f1, %f2606, %f4698;
	fma.rn.f32 	%f4729, %f1, %f2607, %f4695;
	fma.rn.f32 	%f4730, %f1, %f2608, %f4695;
	fma.rn.f32 	%f4731, %f1, %f2609, %f4698;
	fma.rn.f32 	%f4732, %f1, %f2610, %f4698;
	fma.rn.f32 	%f4733, %f1, %f2611, %f4695;
	fma.rn.f32 	%f4734, %f1, %f2612, %f4695;
	fma.rn.f32 	%f4735, %f1, %f2613, %f4698;
	fma.rn.f32 	%f4736, %f1, %f2614, %f4698;
	fma.rn.f32 	%f4737, %f1, %f2615, %f4695;
	fma.rn.f32 	%f4738, %f1, %f2616, %f4695;
	fma.rn.f32 	%f4739, %f1, %f2617, %f4698;
	fma.rn.f32 	%f4740, %f1, %f2618, %f4698;
	fma.rn.f32 	%f4741, %f1, %f2619, %f4695;
	fma.rn.f32 	%f4742, %f1, %f2620, %f4695;
	fma.rn.f32 	%f4743, %f1, %f2621, %f4698;
	fma.rn.f32 	%f4744, %f1, %f2622, %f4698;
	fma.rn.f32 	%f4745, %f1, %f2623, %f4695;
	fma.rn.f32 	%f4746, %f1, %f2624, %f4695;
	fma.rn.f32 	%f4747, %f1, %f2625, %f4698;
	fma.rn.f32 	%f4748, %f1, %f2626, %f4698;
	fma.rn.f32 	%f4749, %f1, %f2627, %f4695;
	fma.rn.f32 	%f4750, %f1, %f2628, %f4695;
	fma.rn.f32 	%f4751, %f1, %f2629, %f4698;
	fma.rn.f32 	%f4752, %f1, %f2630, %f4698;
	fma.rn.f32 	%f4753, %f1, %f2631, %f4695;
	fma.rn.f32 	%f4754, %f1, %f2632, %f4695;
	fma.rn.f32 	%f4755, %f1, %f2633, %f4698;
	fma.rn.f32 	%f4756, %f1, %f2634, %f4698;
	fma.rn.f32 	%f4757, %f1, %f2635, %f4695;
	fma.rn.f32 	%f4758, %f1, %f2636, %f4695;
	fma.rn.f32 	%f4759, %f1, %f2637, %f4698;
	fma.rn.f32 	%f4760, %f1, %f2638, %f4698;
	.loc	1 197 33                        // hopper-fa-ws-pipelined-pingpong.py:197:33
	ex2.approx.ftz.f32 	%f11678, %f4696;
	ex2.approx.ftz.f32 	%f11679, %f4697;
	ex2.approx.ftz.f32 	%f11676, %f4699;
	ex2.approx.ftz.f32 	%f11677, %f4700;
	ex2.approx.ftz.f32 	%f11674, %f4701;
	ex2.approx.ftz.f32 	%f11675, %f4702;
	ex2.approx.ftz.f32 	%f11672, %f4703;
	ex2.approx.ftz.f32 	%f11673, %f4704;
	ex2.approx.ftz.f32 	%f11670, %f4705;
	ex2.approx.ftz.f32 	%f11671, %f4706;
	ex2.approx.ftz.f32 	%f11668, %f4707;
	ex2.approx.ftz.f32 	%f11669, %f4708;
	ex2.approx.ftz.f32 	%f11666, %f4709;
	ex2.approx.ftz.f32 	%f11667, %f4710;
	ex2.approx.ftz.f32 	%f11664, %f4711;
	ex2.approx.ftz.f32 	%f11665, %f4712;
	ex2.approx.ftz.f32 	%f11662, %f4713;
	ex2.approx.ftz.f32 	%f11663, %f4714;
	ex2.approx.ftz.f32 	%f11660, %f4715;
	ex2.approx.ftz.f32 	%f11661, %f4716;
	ex2.approx.ftz.f32 	%f11658, %f4717;
	ex2.approx.ftz.f32 	%f11659, %f4718;
	ex2.approx.ftz.f32 	%f11656, %f4719;
	ex2.approx.ftz.f32 	%f11657, %f4720;
	ex2.approx.ftz.f32 	%f11654, %f4721;
	ex2.approx.ftz.f32 	%f11655, %f4722;
	ex2.approx.ftz.f32 	%f11652, %f4723;
	ex2.approx.ftz.f32 	%f11653, %f4724;
	ex2.approx.ftz.f32 	%f11650, %f4725;
	ex2.approx.ftz.f32 	%f11651, %f4726;
	ex2.approx.ftz.f32 	%f11648, %f4727;
	ex2.approx.ftz.f32 	%f11649, %f4728;
	ex2.approx.ftz.f32 	%f11646, %f4729;
	ex2.approx.ftz.f32 	%f11647, %f4730;
	ex2.approx.ftz.f32 	%f11644, %f4731;
	ex2.approx.ftz.f32 	%f11645, %f4732;
	ex2.approx.ftz.f32 	%f11642, %f4733;
	ex2.approx.ftz.f32 	%f11643, %f4734;
	ex2.approx.ftz.f32 	%f11640, %f4735;
	ex2.approx.ftz.f32 	%f11641, %f4736;
	ex2.approx.ftz.f32 	%f11638, %f4737;
	ex2.approx.ftz.f32 	%f11639, %f4738;
	ex2.approx.ftz.f32 	%f11636, %f4739;
	ex2.approx.ftz.f32 	%f11637, %f4740;
	ex2.approx.ftz.f32 	%f11634, %f4741;
	ex2.approx.ftz.f32 	%f11635, %f4742;
	ex2.approx.ftz.f32 	%f11632, %f4743;
	ex2.approx.ftz.f32 	%f11633, %f4744;
	ex2.approx.ftz.f32 	%f11630, %f4745;
	ex2.approx.ftz.f32 	%f11631, %f4746;
	ex2.approx.ftz.f32 	%f11628, %f4747;
	ex2.approx.ftz.f32 	%f11629, %f4748;
	ex2.approx.ftz.f32 	%f11626, %f4749;
	ex2.approx.ftz.f32 	%f11627, %f4750;
	ex2.approx.ftz.f32 	%f11624, %f4751;
	ex2.approx.ftz.f32 	%f11625, %f4752;
	ex2.approx.ftz.f32 	%f11622, %f4753;
	ex2.approx.ftz.f32 	%f11623, %f4754;
	ex2.approx.ftz.f32 	%f11620, %f4755;
	ex2.approx.ftz.f32 	%f11621, %f4756;
	ex2.approx.ftz.f32 	%f11618, %f4757;
	ex2.approx.ftz.f32 	%f11619, %f4758;
	ex2.approx.ftz.f32 	%f11616, %f4759;
	ex2.approx.ftz.f32 	%f11617, %f4760;
	.loc	1 199 43                        // hopper-fa-ws-pipelined-pingpong.py:199:43
	sub.f32 	%f4761, %f11417, %f11614;
	sub.f32 	%f4762, %f11416, %f11615;
	.loc	1 199 37                        // hopper-fa-ws-pipelined-pingpong.py:199:37
	ex2.approx.ftz.f32 	%f4763, %f4761;
	ex2.approx.ftz.f32 	%f4764, %f4762;
$L__tmp7:
	.loc	2 260 15                        // standard.py:260:15 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	add.f32 	%f4765, %f11678, %f11679;
	add.f32 	%f4766, %f11676, %f11677;
	add.f32 	%f4767, %f4765, %f11674;
	add.f32 	%f4768, %f4767, %f11675;
	add.f32 	%f4769, %f4766, %f11672;
	add.f32 	%f4770, %f4769, %f11673;
	add.f32 	%f4771, %f4768, %f11670;
	add.f32 	%f4772, %f4771, %f11671;
	add.f32 	%f4773, %f4770, %f11668;
	add.f32 	%f4774, %f4773, %f11669;
	add.f32 	%f4775, %f4772, %f11666;
	add.f32 	%f4776, %f4775, %f11667;
	add.f32 	%f4777, %f4774, %f11664;
	add.f32 	%f4778, %f4777, %f11665;
	add.f32 	%f4779, %f4776, %f11662;
	add.f32 	%f4780, %f4779, %f11663;
	add.f32 	%f4781, %f4778, %f11660;
	add.f32 	%f4782, %f4781, %f11661;
	add.f32 	%f4783, %f4780, %f11658;
	add.f32 	%f4784, %f4783, %f11659;
	add.f32 	%f4785, %f4782, %f11656;
	add.f32 	%f4786, %f4785, %f11657;
	add.f32 	%f4787, %f4784, %f11654;
	add.f32 	%f4788, %f4787, %f11655;
	add.f32 	%f4789, %f4786, %f11652;
	add.f32 	%f4790, %f4789, %f11653;
	add.f32 	%f4791, %f4788, %f11650;
	add.f32 	%f4792, %f4791, %f11651;
	add.f32 	%f4793, %f4790, %f11648;
	add.f32 	%f4794, %f4793, %f11649;
	add.f32 	%f4795, %f4792, %f11646;
	add.f32 	%f4796, %f4795, %f11647;
	add.f32 	%f4797, %f4794, %f11644;
	add.f32 	%f4798, %f4797, %f11645;
	add.f32 	%f4799, %f4796, %f11642;
	add.f32 	%f4800, %f4799, %f11643;
	add.f32 	%f4801, %f4798, %f11640;
	add.f32 	%f4802, %f4801, %f11641;
	add.f32 	%f4803, %f4800, %f11638;
	add.f32 	%f4804, %f4803, %f11639;
	add.f32 	%f4805, %f4802, %f11636;
	add.f32 	%f4806, %f4805, %f11637;
	add.f32 	%f4807, %f4804, %f11634;
	add.f32 	%f4808, %f4807, %f11635;
	add.f32 	%f4809, %f4806, %f11632;
	add.f32 	%f4810, %f4809, %f11633;
	add.f32 	%f4811, %f4808, %f11630;
	add.f32 	%f4812, %f4811, %f11631;
	add.f32 	%f4813, %f4810, %f11628;
	add.f32 	%f4814, %f4813, %f11629;
	add.f32 	%f4815, %f4812, %f11626;
	add.f32 	%f4816, %f4815, %f11627;
	add.f32 	%f4817, %f4814, %f11624;
	add.f32 	%f4818, %f4817, %f11625;
	add.f32 	%f4819, %f4816, %f11622;
	add.f32 	%f4820, %f4819, %f11623;
	add.f32 	%f4821, %f4818, %f11620;
	add.f32 	%f4822, %f4821, %f11621;
	add.f32 	%f4823, %f4820, %f11618;
	add.f32 	%f4824, %f4823, %f11619;
	add.f32 	%f4825, %f4822, %f11616;
	add.f32 	%f4826, %f4825, %f11617;
	.loc	2 290 36                        // standard.py:290:36 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	mov.b32 	%r153, %f4824;
	shfl.sync.bfly.b32	%r154, %r153, 2, 31, -1;
	mov.b32 	%f4827, %r154;
	.loc	2 260 15                        // standard.py:260:15 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	add.f32 	%f4828, %f4824, %f4827;
	.loc	2 290 36                        // standard.py:290:36 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	mov.b32 	%r155, %f4828;
	shfl.sync.bfly.b32	%r156, %r155, 1, 31, -1;
	mov.b32 	%f4829, %r156;
	.loc	2 260 15                        // standard.py:260:15 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	add.f32 	%f4830, %f4828, %f4829;
	.loc	2 290 36                        // standard.py:290:36 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	mov.b32 	%r157, %f4826;
	shfl.sync.bfly.b32	%r158, %r157, 2, 31, -1;
	mov.b32 	%f4831, %r158;
	.loc	2 260 15                        // standard.py:260:15 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	add.f32 	%f4832, %f4826, %f4831;
	.loc	2 290 36                        // standard.py:290:36 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	mov.b32 	%r159, %f4832;
	shfl.sync.bfly.b32	%r160, %r159, 1, 31, -1;
	mov.b32 	%f4833, %r160;
	.loc	2 260 15                        // standard.py:260:15 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	add.f32 	%f4834, %f4832, %f4833;
$L__tmp8:
	.loc	1 202 36                        // hopper-fa-ws-pipelined-pingpong.py:202:36
	fma.rn.f32 	%f11612, %f11612, %f4763, %f4830;
	fma.rn.f32 	%f11613, %f11613, %f4764, %f4834;
	.loc	1 207 44                        // hopper-fa-ws-pipelined-pingpong.py:207:44
	// begin inline asm
	// wait for regs: %f11483,%f11482,%f11481,%f11480,%f11479,%f11478,%f11477,%f11476,%f11475,%f11474,%f11473,%f11472,%f11471,%f11470,%f11469,%f11468,%f11467,%f11466,%f11465,%f11464,%f11463,%f11462,%f11461,%f11460,%f11459,%f11458,%f11457,%f11456,%f11455,%f11454,%f11453,%f11452,%f11451,%f11450,%f11449,%f11448,%f11447,%f11446,%f11445,%f11444,%f11443,%f11442,%f11441,%f11440,%f11439,%f11438,%f11437,%f11436,%f11435,%f11434,%f11433,%f11432,%f11431,%f11430,%f11429,%f11428,%f11427,%f11426,%f11425,%f11424,%f11423,%f11422,%f11421,%f11420
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 209 45                        // hopper-fa-ws-pipelined-pingpong.py:209:45
	add.s32 	%r122, %r140, 196656;
	.loc	1 209 56                        // hopper-fa-ws-pipelined-pingpong.py:209:56
	// begin inline asm
	barrier.sync.aligned 3, 128 ;
	// end inline asm
	// begin inline asm
	@%p33 mbarrier.arrive.shared::cta.b64 _, [%r122], 1;
	// end inline asm
	.loc	1 210 28                        // hopper-fa-ws-pipelined-pingpong.py:210:28
	mul.f32 	%f11483, %f4763, %f11483;
	mul.f32 	%f11482, %f4763, %f11482;
	mul.f32 	%f11481, %f4764, %f11481;
	mul.f32 	%f11480, %f4764, %f11480;
	mul.f32 	%f11479, %f4763, %f11479;
	mul.f32 	%f11478, %f4763, %f11478;
	mul.f32 	%f11477, %f4764, %f11477;
	mul.f32 	%f11476, %f4764, %f11476;
	mul.f32 	%f11475, %f4763, %f11475;
	mul.f32 	%f11474, %f4763, %f11474;
	mul.f32 	%f11473, %f4764, %f11473;
	mul.f32 	%f11472, %f4764, %f11472;
	mul.f32 	%f11471, %f4763, %f11471;
	mul.f32 	%f11470, %f4763, %f11470;
	mul.f32 	%f11469, %f4764, %f11469;
	mul.f32 	%f11468, %f4764, %f11468;
	mul.f32 	%f11467, %f4763, %f11467;
	mul.f32 	%f11466, %f4763, %f11466;
	mul.f32 	%f11465, %f4764, %f11465;
	mul.f32 	%f11464, %f4764, %f11464;
	mul.f32 	%f11463, %f4763, %f11463;
	mul.f32 	%f11462, %f4763, %f11462;
	mul.f32 	%f11461, %f4764, %f11461;
	mul.f32 	%f11460, %f4764, %f11460;
	mul.f32 	%f11459, %f4763, %f11459;
	mul.f32 	%f11458, %f4763, %f11458;
	mul.f32 	%f11457, %f4764, %f11457;
	mul.f32 	%f11456, %f4764, %f11456;
	mul.f32 	%f11455, %f4763, %f11455;
	mul.f32 	%f11454, %f4763, %f11454;
	mul.f32 	%f11453, %f4764, %f11453;
	mul.f32 	%f11452, %f4764, %f11452;
	mul.f32 	%f11451, %f4763, %f11451;
	mul.f32 	%f11450, %f4763, %f11450;
	mul.f32 	%f11449, %f4764, %f11449;
	mul.f32 	%f11448, %f4764, %f11448;
	mul.f32 	%f11447, %f4763, %f11447;
	mul.f32 	%f11446, %f4763, %f11446;
	mul.f32 	%f11445, %f4764, %f11445;
	mul.f32 	%f11444, %f4764, %f11444;
	mul.f32 	%f11443, %f4763, %f11443;
	mul.f32 	%f11442, %f4763, %f11442;
	mul.f32 	%f11441, %f4764, %f11441;
	mul.f32 	%f11440, %f4764, %f11440;
	mul.f32 	%f11439, %f4763, %f11439;
	mul.f32 	%f11438, %f4763, %f11438;
	mul.f32 	%f11437, %f4764, %f11437;
	mul.f32 	%f11436, %f4764, %f11436;
	mul.f32 	%f11435, %f4763, %f11435;
	mul.f32 	%f11434, %f4763, %f11434;
	mul.f32 	%f11433, %f4764, %f11433;
	mul.f32 	%f11432, %f4764, %f11432;
	mul.f32 	%f11431, %f4763, %f11431;
	mul.f32 	%f11430, %f4763, %f11430;
	mul.f32 	%f11429, %f4764, %f11429;
	mul.f32 	%f11428, %f4764, %f11428;
	mul.f32 	%f11427, %f4763, %f11427;
	mul.f32 	%f11426, %f4763, %f11426;
	mul.f32 	%f11425, %f4764, %f11425;
	mul.f32 	%f11424, %f4764, %f11424;
	mul.f32 	%f11423, %f4763, %f11423;
	mul.f32 	%f11422, %f4763, %f11422;
	mul.f32 	%f11421, %f4764, %f11421;
	mul.f32 	%f11420, %f4764, %f11420;
	.loc	1 168 48                        // hopper-fa-ws-pipelined-pingpong.py:168:48
	add.s32 	%r641, %r641, 128;
	setp.lt.s32 	%p37, %r641, %r47;
	add.s32 	%r638, %r638, 1;
	mov.b32 	%f11416, %f11615;
	mov.b32 	%f11417, %f11614;
	@%p37 bra 	$L__BB0_16;
$L__BB0_17:                             // %._crit_edge
                                        //   in Loop: Header=BB0_2 Depth=1
	.loc	1 216 45                        // hopper-fa-ws-pipelined-pingpong.py:216:45
	setp.eq.s32 	%p48, %r643, 0;
	.loc	1 216 33                        // hopper-fa-ws-pipelined-pingpong.py:216:33
	selp.b32 	%r196, 1, 0, %p48;
	xor.b32 	%r162, %r642, %r196;
	.loc	1 217 37                        // hopper-fa-ws-pipelined-pingpong.py:217:37
	shl.b32 	%r197, %r643, 3;
	add.s32 	%r199, %r48, %r197;
	add.s32 	%r161, %r199, 196672;
	.loc	1 217 48                        // hopper-fa-ws-pipelined-pingpong.py:217:48
	// begin inline asm
	barrier.sync.aligned 3, 128 ;
	// end inline asm
	// begin inline asm
	{                                                           
	@!%p5 bra.uni skipWait;                                      
	.reg .pred P1;                                              
	waitLoop:                                                   
	mbarrier.try_wait.parity.shared.b64 P1, [%r161], %r162;           
	@!P1 bra.uni waitLoop;                                      
	skipWait:                                                   
	}                                                           
	
	// end inline asm
	.loc	1 219 21                        // hopper-fa-ws-pipelined-pingpong.py:219:21
	cvt.rn.f16x2.f32 	%r163, %f11679, %f11678;
	cvt.rn.f16x2.f32 	%r164, %f11677, %f11676;
	cvt.rn.f16x2.f32 	%r165, %f11675, %f11674;
	cvt.rn.f16x2.f32 	%r166, %f11673, %f11672;
	cvt.rn.f16x2.f32 	%r167, %f11671, %f11670;
	cvt.rn.f16x2.f32 	%r168, %f11669, %f11668;
	cvt.rn.f16x2.f32 	%r169, %f11667, %f11666;
	cvt.rn.f16x2.f32 	%r170, %f11665, %f11664;
	cvt.rn.f16x2.f32 	%r171, %f11663, %f11662;
	cvt.rn.f16x2.f32 	%r172, %f11661, %f11660;
	cvt.rn.f16x2.f32 	%r173, %f11659, %f11658;
	cvt.rn.f16x2.f32 	%r174, %f11657, %f11656;
	cvt.rn.f16x2.f32 	%r175, %f11655, %f11654;
	cvt.rn.f16x2.f32 	%r176, %f11653, %f11652;
	cvt.rn.f16x2.f32 	%r177, %f11651, %f11650;
	cvt.rn.f16x2.f32 	%r178, %f11649, %f11648;
	cvt.rn.f16x2.f32 	%r179, %f11647, %f11646;
	cvt.rn.f16x2.f32 	%r180, %f11645, %f11644;
	cvt.rn.f16x2.f32 	%r181, %f11643, %f11642;
	cvt.rn.f16x2.f32 	%r182, %f11641, %f11640;
	cvt.rn.f16x2.f32 	%r183, %f11639, %f11638;
	cvt.rn.f16x2.f32 	%r184, %f11637, %f11636;
	cvt.rn.f16x2.f32 	%r185, %f11635, %f11634;
	cvt.rn.f16x2.f32 	%r186, %f11633, %f11632;
	cvt.rn.f16x2.f32 	%r187, %f11631, %f11630;
	cvt.rn.f16x2.f32 	%r188, %f11629, %f11628;
	cvt.rn.f16x2.f32 	%r189, %f11627, %f11626;
	cvt.rn.f16x2.f32 	%r190, %f11625, %f11624;
	cvt.rn.f16x2.f32 	%r191, %f11623, %f11622;
	cvt.rn.f16x2.f32 	%r192, %f11621, %f11620;
	cvt.rn.f16x2.f32 	%r193, %f11619, %f11618;
	cvt.rn.f16x2.f32 	%r194, %f11617, %f11616;
	.loc	1 220 43                        // hopper-fa-ws-pipelined-pingpong.py:220:43
	shl.b32 	%r200, %r643, 15;
	add.s32 	%r201, %r48, %r200;
	add.s32 	%r202, %r201, 65536;
	.loc	1 220 54                        // hopper-fa-ws-pipelined-pingpong.py:220:54
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	bfe.u32 	%r203, %r202, 4, 14;
	cvt.u64.u32 	%rd82, %r203;
	or.b64 	%rd74, %rd82, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11483,%f11482,%f11481,%f11480,%f11479,%f11478,%f11477,%f11476,%f11475,%f11474,%f11473,%f11472,%f11471,%f11470,%f11469,%f11468,%f11467,%f11466,%f11465,%f11464,%f11463,%f11462,%f11461,%f11460,%f11459,%f11458,%f11457,%f11456,%f11455,%f11454,%f11453,%f11452,%f11451,%f11450,%f11449,%f11448,%f11447,%f11446,%f11445,%f11444,%f11443,%f11442,%f11441,%f11440,%f11439,%f11438,%f11437,%f11436,%f11435,%f11434,%f11433,%f11432,%f11431,%f11430,%f11429,%f11428,%f11427,%f11426,%f11425,%f11424,%f11423,%f11422,%f11421,%f11420}, {%r163,%r164,%r165,%r166}, %rd74, %p5, 1, 1, 1;
	// end inline asm
	add.s64 	%rd75, %rd82, 4611686293372403840;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11483,%f11482,%f11481,%f11480,%f11479,%f11478,%f11477,%f11476,%f11475,%f11474,%f11473,%f11472,%f11471,%f11470,%f11469,%f11468,%f11467,%f11466,%f11465,%f11464,%f11463,%f11462,%f11461,%f11460,%f11459,%f11458,%f11457,%f11456,%f11455,%f11454,%f11453,%f11452,%f11451,%f11450,%f11449,%f11448,%f11447,%f11446,%f11445,%f11444,%f11443,%f11442,%f11441,%f11440,%f11439,%f11438,%f11437,%f11436,%f11435,%f11434,%f11433,%f11432,%f11431,%f11430,%f11429,%f11428,%f11427,%f11426,%f11425,%f11424,%f11423,%f11422,%f11421,%f11420}, {%r167,%r168,%r169,%r170}, %rd75, %p5, 1, 1, 1;
	// end inline asm
	add.s64 	%rd76, %rd82, 4611686293372403968;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11483,%f11482,%f11481,%f11480,%f11479,%f11478,%f11477,%f11476,%f11475,%f11474,%f11473,%f11472,%f11471,%f11470,%f11469,%f11468,%f11467,%f11466,%f11465,%f11464,%f11463,%f11462,%f11461,%f11460,%f11459,%f11458,%f11457,%f11456,%f11455,%f11454,%f11453,%f11452,%f11451,%f11450,%f11449,%f11448,%f11447,%f11446,%f11445,%f11444,%f11443,%f11442,%f11441,%f11440,%f11439,%f11438,%f11437,%f11436,%f11435,%f11434,%f11433,%f11432,%f11431,%f11430,%f11429,%f11428,%f11427,%f11426,%f11425,%f11424,%f11423,%f11422,%f11421,%f11420}, {%r171,%r172,%r173,%r174}, %rd76, %p5, 1, 1, 1;
	// end inline asm
	add.s64 	%rd77, %rd82, 4611686293372404096;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11483,%f11482,%f11481,%f11480,%f11479,%f11478,%f11477,%f11476,%f11475,%f11474,%f11473,%f11472,%f11471,%f11470,%f11469,%f11468,%f11467,%f11466,%f11465,%f11464,%f11463,%f11462,%f11461,%f11460,%f11459,%f11458,%f11457,%f11456,%f11455,%f11454,%f11453,%f11452,%f11451,%f11450,%f11449,%f11448,%f11447,%f11446,%f11445,%f11444,%f11443,%f11442,%f11441,%f11440,%f11439,%f11438,%f11437,%f11436,%f11435,%f11434,%f11433,%f11432,%f11431,%f11430,%f11429,%f11428,%f11427,%f11426,%f11425,%f11424,%f11423,%f11422,%f11421,%f11420}, {%r175,%r176,%r177,%r178}, %rd77, %p5, 1, 1, 1;
	// end inline asm
	add.s64 	%rd78, %rd82, 4611686293372404224;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11483,%f11482,%f11481,%f11480,%f11479,%f11478,%f11477,%f11476,%f11475,%f11474,%f11473,%f11472,%f11471,%f11470,%f11469,%f11468,%f11467,%f11466,%f11465,%f11464,%f11463,%f11462,%f11461,%f11460,%f11459,%f11458,%f11457,%f11456,%f11455,%f11454,%f11453,%f11452,%f11451,%f11450,%f11449,%f11448,%f11447,%f11446,%f11445,%f11444,%f11443,%f11442,%f11441,%f11440,%f11439,%f11438,%f11437,%f11436,%f11435,%f11434,%f11433,%f11432,%f11431,%f11430,%f11429,%f11428,%f11427,%f11426,%f11425,%f11424,%f11423,%f11422,%f11421,%f11420}, {%r179,%r180,%r181,%r182}, %rd78, %p5, 1, 1, 1;
	// end inline asm
	add.s64 	%rd79, %rd82, 4611686293372404352;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11483,%f11482,%f11481,%f11480,%f11479,%f11478,%f11477,%f11476,%f11475,%f11474,%f11473,%f11472,%f11471,%f11470,%f11469,%f11468,%f11467,%f11466,%f11465,%f11464,%f11463,%f11462,%f11461,%f11460,%f11459,%f11458,%f11457,%f11456,%f11455,%f11454,%f11453,%f11452,%f11451,%f11450,%f11449,%f11448,%f11447,%f11446,%f11445,%f11444,%f11443,%f11442,%f11441,%f11440,%f11439,%f11438,%f11437,%f11436,%f11435,%f11434,%f11433,%f11432,%f11431,%f11430,%f11429,%f11428,%f11427,%f11426,%f11425,%f11424,%f11423,%f11422,%f11421,%f11420}, {%r183,%r184,%r185,%r186}, %rd79, %p5, 1, 1, 1;
	// end inline asm
	add.s64 	%rd80, %rd82, 4611686293372404480;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11483,%f11482,%f11481,%f11480,%f11479,%f11478,%f11477,%f11476,%f11475,%f11474,%f11473,%f11472,%f11471,%f11470,%f11469,%f11468,%f11467,%f11466,%f11465,%f11464,%f11463,%f11462,%f11461,%f11460,%f11459,%f11458,%f11457,%f11456,%f11455,%f11454,%f11453,%f11452,%f11451,%f11450,%f11449,%f11448,%f11447,%f11446,%f11445,%f11444,%f11443,%f11442,%f11441,%f11440,%f11439,%f11438,%f11437,%f11436,%f11435,%f11434,%f11433,%f11432,%f11431,%f11430,%f11429,%f11428,%f11427,%f11426,%f11425,%f11424,%f11423,%f11422,%f11421,%f11420}, {%r187,%r188,%r189,%r190}, %rd80, %p5, 1, 1, 1;
	// end inline asm
	add.s64 	%rd81, %rd82, 4611686293372404608;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11483,%f11482,%f11481,%f11480,%f11479,%f11478,%f11477,%f11476,%f11475,%f11474,%f11473,%f11472,%f11471,%f11470,%f11469,%f11468,%f11467,%f11466,%f11465,%f11464,%f11463,%f11462,%f11461,%f11460,%f11459,%f11458,%f11457,%f11456,%f11455,%f11454,%f11453,%f11452,%f11451,%f11450,%f11449,%f11448,%f11447,%f11446,%f11445,%f11444,%f11443,%f11442,%f11441,%f11440,%f11439,%f11438,%f11437,%f11436,%f11435,%f11434,%f11433,%f11432,%f11431,%f11430,%f11429,%f11428,%f11427,%f11426,%f11425,%f11424,%f11423,%f11422,%f11421,%f11420}, {%r191,%r192,%r193,%r194}, %rd81, %p5, 1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	.loc	1 222 40                        // hopper-fa-ws-pipelined-pingpong.py:222:40
	// begin inline asm
	// wait for regs: %f11483,%f11482,%f11481,%f11480,%f11479,%f11478,%f11477,%f11476,%f11475,%f11474,%f11473,%f11472,%f11471,%f11470,%f11469,%f11468,%f11467,%f11466,%f11465,%f11464,%f11463,%f11462,%f11461,%f11460,%f11459,%f11458,%f11457,%f11456,%f11455,%f11454,%f11453,%f11452,%f11451,%f11450,%f11449,%f11448,%f11447,%f11446,%f11445,%f11444,%f11443,%f11442,%f11441,%f11440,%f11439,%f11438,%f11437,%f11436,%f11435,%f11434,%f11433,%f11432,%f11431,%f11430,%f11429,%f11428,%f11427,%f11426,%f11425,%f11424,%f11423,%f11422,%f11421,%f11420
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 224 41                        // hopper-fa-ws-pipelined-pingpong.py:224:41
	add.s32 	%r195, %r199, 196656;
	.loc	1 224 52                        // hopper-fa-ws-pipelined-pingpong.py:224:52
	// begin inline asm
	barrier.sync.aligned 3, 128 ;
	// end inline asm
	// begin inline asm
	@%p33 mbarrier.arrive.shared::cta.b64 _, [%r195], 1;
	// end inline asm
	.loc	1 227 36                        // hopper-fa-ws-pipelined-pingpong.py:227:36
	mov.u32 	%r204, %ctaid.x;
	.loc	1 228 35                        // hopper-fa-ws-pipelined-pingpong.py:228:35
	mov.u32 	%r205, %ctaid.y;
	.loc	1 232 47                        // hopper-fa-ws-pipelined-pingpong.py:232:47
	shl.b32 	%r33, %r204, 7;
	.loc	1 233 46                        // hopper-fa-ws-pipelined-pingpong.py:233:46
	mul.lo.s32 	%r34, %r205, %r47;
	add.s32 	%r206, %r34, %r33;
	.loc	1 234 32                        // hopper-fa-ws-pipelined-pingpong.py:234:32
	setp.lt.f32 	%p49, %f11612, 0f00800000;
	mul.f32 	%f5987, %f11612, 0f4B000000;
	selp.f32 	%f1072, %f5987, %f11612, %p49;
	selp.f32 	%f5988, 0fC1B80000, 0f00000000, %p49;
	mov.b32 	%r207, %f1072;
	add.s32 	%r208, %r207, -1060439283;
	and.b32 	%r209, %r208, -8388608;
	sub.s32 	%r210, %r207, %r209;
	mov.b32 	%f5989, %r210;
	cvt.rn.f32.s32 	%f5990, %r209;
	mov.b32 	%f5991, 0f34000000;
	fma.rn.ftz.f32 	%f5992, %f5990, %f5991, %f5988;
	add.f32 	%f5993, %f5989, 0fBF800000;
	mov.b32 	%f5994, 0fBE2C7F30;
	mov.b32 	%f5995, 0f3DC6B27F;
	fma.rn.ftz.f32 	%f5996, %f5995, %f5993, %f5994;
	mov.b32 	%f5997, 0f3E2FCF2A;
	fma.rn.ftz.f32 	%f5998, %f5996, %f5993, %f5997;
	mov.b32 	%f5999, 0fBE374E43;
	fma.rn.ftz.f32 	%f6000, %f5998, %f5993, %f5999;
	mov.b32 	%f6001, 0f3E520BF4;
	fma.rn.ftz.f32 	%f6002, %f6000, %f5993, %f6001;
	mov.b32 	%f6003, 0fBE763C8B;
	fma.rn.ftz.f32 	%f6004, %f6002, %f5993, %f6003;
	mov.b32 	%f6005, 0f3E93BF99;
	fma.rn.ftz.f32 	%f6006, %f6004, %f5993, %f6005;
	mov.b32 	%f6007, 0fBEB8AA49;
	fma.rn.ftz.f32 	%f6008, %f6006, %f5993, %f6007;
	mov.b32 	%f6009, 0f3EF6384A;
	fma.rn.ftz.f32 	%f6010, %f6008, %f5993, %f6009;
	mov.b32 	%f6011, 0fBF38AA3B;
	fma.rn.ftz.f32 	%f6012, %f6010, %f5993, %f6011;
	mul.f32 	%f6013, %f5993, %f6012;
	mul.f32 	%f6014, %f5993, %f6013;
	mov.b32 	%f6015, 0f3FB8AA3B;
	fma.rn.ftz.f32 	%f6016, %f5993, %f6015, %f6014;
	add.f32 	%f11680, %f5992, %f6016;
	setp.lt.u32 	%p50, %r207, 2139095040;
	mov.b32 	%f6017, 0f7F800000;
	@%p50 bra 	$L__BB0_19;
// %bb.18:                              // %__nv_fmaf_rn.exit.i.i
                                        //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 32                          // hopper-fa-ws-pipelined-pingpong.py:0:32
	fma.rn.ftz.f32 	%f11680, %f1072, %f6017, %f6017;
$L__BB0_19:                             // %__nv_log2f.exit
                                        //   in Loop: Header=BB0_2 Depth=1
	add.s32 	%r261, %r206, 64;
	.loc	1 234 32                        // hopper-fa-ws-pipelined-pingpong.py:234:32
	setp.eq.f32 	%p51, %f1072, 0f00000000;
	selp.f32 	%f1076, 0fFF800000, %f11680, %p51;
	setp.lt.f32 	%p52, %f11613, 0f00800000;
	mul.f32 	%f6018, %f11613, 0f4B000000;
	selp.f32 	%f1077, %f6018, %f11613, %p52;
	selp.f32 	%f6019, 0fC1B80000, 0f00000000, %p52;
	mov.b32 	%r211, %f1077;
	add.s32 	%r212, %r211, -1060439283;
	and.b32 	%r213, %r212, -8388608;
	sub.s32 	%r214, %r211, %r213;
	mov.b32 	%f6020, %r214;
	cvt.rn.f32.s32 	%f6021, %r213;
	fma.rn.ftz.f32 	%f6023, %f6021, %f5991, %f6019;
	add.f32 	%f6024, %f6020, 0fBF800000;
	fma.rn.ftz.f32 	%f6027, %f5995, %f6024, %f5994;
	fma.rn.ftz.f32 	%f6029, %f6027, %f6024, %f5997;
	fma.rn.ftz.f32 	%f6031, %f6029, %f6024, %f5999;
	fma.rn.ftz.f32 	%f6033, %f6031, %f6024, %f6001;
	fma.rn.ftz.f32 	%f6035, %f6033, %f6024, %f6003;
	fma.rn.ftz.f32 	%f6037, %f6035, %f6024, %f6005;
	fma.rn.ftz.f32 	%f6039, %f6037, %f6024, %f6007;
	fma.rn.ftz.f32 	%f6041, %f6039, %f6024, %f6009;
	fma.rn.ftz.f32 	%f6043, %f6041, %f6024, %f6011;
	mul.f32 	%f6044, %f6024, %f6043;
	mul.f32 	%f6045, %f6024, %f6044;
	fma.rn.ftz.f32 	%f6047, %f6024, %f6015, %f6045;
	add.f32 	%f11681, %f6023, %f6047;
	setp.lt.u32 	%p53, %r211, 2139095040;
	@%p53 bra 	$L__BB0_21;
// %bb.20:                              // %__nv_fmaf_rn.exit.i.i1359
                                        //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 32                          // hopper-fa-ws-pipelined-pingpong.py:0:32
	fma.rn.ftz.f32 	%f11681, %f1077, %f6017, %f6017;
	bra.uni 	$L__BB0_21;
$L__BB0_6:                              // %__nv_exp2f.exit937
                                        //   in Loop: Header=BB0_2 Depth=1
	.loc	1 65 9                          // hopper-fa-ws-pipelined-pingpong.py:65:9
	setmaxnreg.inc.sync.aligned.u32 232;
	// begin inline asm
	barrier.sync 1 ;
	// end inline asm
	mov.b32 	%r637, 0;
	mov.pred 	%p61, -1;
	.loc	1 120 43                        // hopper-fa-ws-pipelined-pingpong.py:120:43
	// begin inline asm
	{                                                           
	@!%p61 bra.uni skipWait;                                      
	.reg .pred P1;                                              
	waitLoop:                                                   
	mbarrier.try_wait.parity.shared.b64 P1, [%r312], %r637;           
	@!P1 bra.uni waitLoop;                                      
	skipWait:                                                   
	}                                                           
	
	// end inline asm
	.loc	1 129 48                        // hopper-fa-ws-pipelined-pingpong.py:129:48
	add.s32 	%r314, %r48, 196640;
	// begin inline asm
	{                                                           
	@!%p61 bra.uni skipWait;                                      
	.reg .pred P1;                                              
	waitLoop:                                                   
	mbarrier.try_wait.parity.shared.b64 P1, [%r314], %r637;           
	@!P1 bra.uni waitLoop;                                      
	skipWait:                                                   
	}                                                           
	
	// end inline asm
	mov.b32 	%r316, 9;
	mov.b32 	%r317, 256;
	.loc	1 136 42                        // hopper-fa-ws-pipelined-pingpong.py:136:42
	// begin inline asm
	bar.sync %r316, %r317;
	// end inline asm
	.loc	1 143 45                        // hopper-fa-ws-pipelined-pingpong.py:143:45
	add.s32 	%r4, %r1, -128;
	shr.u32 	%r324, %r4, 5;
	shfl.sync.idx.b32	%r5, %r324, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	add.s32 	%r325, %r48, 131072;
	shr.u32 	%r326, %r325, 4;
	cvt.u64.u32 	%rd105, %r326;
	and.b64 	%rd106, %rd105, 16383;
	or.b64 	%rd109, %rd106, 4611686293338849280;
	shr.u32 	%r327, %r48, 4;
	cvt.u64.u32 	%rd107, %r327;
	and.b64 	%rd108, %rd107, 16383;
	or.b64 	%rd90, %rd108, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f6308,%f6309,%f6310,%f6311,%f6312,%f6313,%f6314,%f6315,%f6316,%f6317,%f6318,%f6319,%f6320,%f6321,%f6322,%f6323,%f6324,%f6325,%f6326,%f6327,%f6328,%f6329,%f6330,%f6331,%f6332,%f6333,%f6334,%f6335,%f6336,%f6337,%f6338,%f6339,%f6340,%f6341,%f6342,%f6343,%f6344,%f6345,%f6346,%f6347,%f6348,%f6349,%f6350,%f6351,%f6352,%f6353,%f6354,%f6355,%f6356,%f6357,%f6358,%f6359,%f6360,%f6361,%f6362,%f6363,%f6364,%f6365,%f6366,%f6367,%f6368,%f6369,%f6370,%f6371}, %rd109, %rd90, 0, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd111, %rd106, 4611686293338849282;
	add.s64 	%rd92, %rd108, 4611686293372403714;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f6308,%f6309,%f6310,%f6311,%f6312,%f6313,%f6314,%f6315,%f6316,%f6317,%f6318,%f6319,%f6320,%f6321,%f6322,%f6323,%f6324,%f6325,%f6326,%f6327,%f6328,%f6329,%f6330,%f6331,%f6332,%f6333,%f6334,%f6335,%f6336,%f6337,%f6338,%f6339,%f6340,%f6341,%f6342,%f6343,%f6344,%f6345,%f6346,%f6347,%f6348,%f6349,%f6350,%f6351,%f6352,%f6353,%f6354,%f6355,%f6356,%f6357,%f6358,%f6359,%f6360,%f6361,%f6362,%f6363,%f6364,%f6365,%f6366,%f6367,%f6368,%f6369,%f6370,%f6371}, %rd111, %rd92, %p61, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd113, %rd106, 4611686293338849284;
	add.s64 	%rd94, %rd108, 4611686293372403716;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f6308,%f6309,%f6310,%f6311,%f6312,%f6313,%f6314,%f6315,%f6316,%f6317,%f6318,%f6319,%f6320,%f6321,%f6322,%f6323,%f6324,%f6325,%f6326,%f6327,%f6328,%f6329,%f6330,%f6331,%f6332,%f6333,%f6334,%f6335,%f6336,%f6337,%f6338,%f6339,%f6340,%f6341,%f6342,%f6343,%f6344,%f6345,%f6346,%f6347,%f6348,%f6349,%f6350,%f6351,%f6352,%f6353,%f6354,%f6355,%f6356,%f6357,%f6358,%f6359,%f6360,%f6361,%f6362,%f6363,%f6364,%f6365,%f6366,%f6367,%f6368,%f6369,%f6370,%f6371}, %rd113, %rd94, %p61, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd115, %rd106, 4611686293338849286;
	add.s64 	%rd96, %rd108, 4611686293372403718;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f6308,%f6309,%f6310,%f6311,%f6312,%f6313,%f6314,%f6315,%f6316,%f6317,%f6318,%f6319,%f6320,%f6321,%f6322,%f6323,%f6324,%f6325,%f6326,%f6327,%f6328,%f6329,%f6330,%f6331,%f6332,%f6333,%f6334,%f6335,%f6336,%f6337,%f6338,%f6339,%f6340,%f6341,%f6342,%f6343,%f6344,%f6345,%f6346,%f6347,%f6348,%f6349,%f6350,%f6351,%f6352,%f6353,%f6354,%f6355,%f6356,%f6357,%f6358,%f6359,%f6360,%f6361,%f6362,%f6363,%f6364,%f6365,%f6366,%f6367,%f6368,%f6369,%f6370,%f6371}, %rd115, %rd96, %p61, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd117, %rd106, 4611686293338849792;
	add.s64 	%rd98, %rd108, 4611686293372404736;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f6308,%f6309,%f6310,%f6311,%f6312,%f6313,%f6314,%f6315,%f6316,%f6317,%f6318,%f6319,%f6320,%f6321,%f6322,%f6323,%f6324,%f6325,%f6326,%f6327,%f6328,%f6329,%f6330,%f6331,%f6332,%f6333,%f6334,%f6335,%f6336,%f6337,%f6338,%f6339,%f6340,%f6341,%f6342,%f6343,%f6344,%f6345,%f6346,%f6347,%f6348,%f6349,%f6350,%f6351,%f6352,%f6353,%f6354,%f6355,%f6356,%f6357,%f6358,%f6359,%f6360,%f6361,%f6362,%f6363,%f6364,%f6365,%f6366,%f6367,%f6368,%f6369,%f6370,%f6371}, %rd117, %rd98, %p61, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd119, %rd106, 4611686293338849794;
	add.s64 	%rd100, %rd108, 4611686293372404738;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f6308,%f6309,%f6310,%f6311,%f6312,%f6313,%f6314,%f6315,%f6316,%f6317,%f6318,%f6319,%f6320,%f6321,%f6322,%f6323,%f6324,%f6325,%f6326,%f6327,%f6328,%f6329,%f6330,%f6331,%f6332,%f6333,%f6334,%f6335,%f6336,%f6337,%f6338,%f6339,%f6340,%f6341,%f6342,%f6343,%f6344,%f6345,%f6346,%f6347,%f6348,%f6349,%f6350,%f6351,%f6352,%f6353,%f6354,%f6355,%f6356,%f6357,%f6358,%f6359,%f6360,%f6361,%f6362,%f6363,%f6364,%f6365,%f6366,%f6367,%f6368,%f6369,%f6370,%f6371}, %rd119, %rd100, %p61, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd121, %rd106, 4611686293338849796;
	add.s64 	%rd102, %rd108, 4611686293372404740;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f6308,%f6309,%f6310,%f6311,%f6312,%f6313,%f6314,%f6315,%f6316,%f6317,%f6318,%f6319,%f6320,%f6321,%f6322,%f6323,%f6324,%f6325,%f6326,%f6327,%f6328,%f6329,%f6330,%f6331,%f6332,%f6333,%f6334,%f6335,%f6336,%f6337,%f6338,%f6339,%f6340,%f6341,%f6342,%f6343,%f6344,%f6345,%f6346,%f6347,%f6348,%f6349,%f6350,%f6351,%f6352,%f6353,%f6354,%f6355,%f6356,%f6357,%f6358,%f6359,%f6360,%f6361,%f6362,%f6363,%f6364,%f6365,%f6366,%f6367,%f6368,%f6369,%f6370,%f6371}, %rd121, %rd102, %p61, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd123, %rd106, 4611686293338849798;
	add.s64 	%rd104, %rd108, 4611686293372404742;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f6308,%f6309,%f6310,%f6311,%f6312,%f6313,%f6314,%f6315,%f6316,%f6317,%f6318,%f6319,%f6320,%f6321,%f6322,%f6323,%f6324,%f6325,%f6326,%f6327,%f6328,%f6329,%f6330,%f6331,%f6332,%f6333,%f6334,%f6335,%f6336,%f6337,%f6338,%f6339,%f6340,%f6341,%f6342,%f6343,%f6344,%f6345,%f6346,%f6347,%f6348,%f6349,%f6350,%f6351,%f6352,%f6353,%f6354,%f6355,%f6356,%f6357,%f6358,%f6359,%f6360,%f6361,%f6362,%f6363,%f6364,%f6365,%f6366,%f6367,%f6368,%f6369,%f6370,%f6371}, %rd123, %rd104, %p61, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	mov.b32 	%r318, 10;
	.loc	1 147 45                        // hopper-fa-ws-pipelined-pingpong.py:147:45
	// begin inline asm
	bar.arrive %r318, %r317;
	// end inline asm
	.loc	1 150 39                        // hopper-fa-ws-pipelined-pingpong.py:150:39
	// begin inline asm
	// wait for regs: %f6308,%f6309,%f6310,%f6311,%f6312,%f6313,%f6314,%f6315,%f6316,%f6317,%f6318,%f6319,%f6320,%f6321,%f6322,%f6323,%f6324,%f6325,%f6326,%f6327,%f6328,%f6329,%f6330,%f6331,%f6332,%f6333,%f6334,%f6335,%f6336,%f6337,%f6338,%f6339,%f6340,%f6341,%f6342,%f6343,%f6344,%f6345,%f6346,%f6347,%f6348,%f6349,%f6350,%f6351,%f6352,%f6353,%f6354,%f6355,%f6356,%f6357,%f6358,%f6359,%f6360,%f6361,%f6362,%f6363,%f6364,%f6365,%f6366,%f6367,%f6368,%f6369,%f6370,%f6371
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 152 52                        // hopper-fa-ws-pipelined-pingpong.py:152:52
	// begin inline asm
	barrier.sync.aligned 2, 128 ;
	// end inline asm
	setp.eq.s32 	%p89, %r4, 0;
	add.s32 	%r320, %r48, 196624;
	// begin inline asm
	@%p89 mbarrier.arrive.shared::cta.b64 _, [%r320], 1;
	// end inline asm
$L__tmp9:
	.loc	2 167 27                        // standard.py:167:27 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	max.f32 	%f7204, %f6308, %f6309;
	max.f32 	%f7205, %f6310, %f6311;
	max.f32 	%f7206, %f7204, %f6312;
	max.f32 	%f7207, %f7206, %f6313;
	max.f32 	%f7208, %f7205, %f6314;
	max.f32 	%f7209, %f7208, %f6315;
	max.f32 	%f7210, %f7207, %f6316;
	max.f32 	%f7211, %f7210, %f6317;
	max.f32 	%f7212, %f7209, %f6318;
	max.f32 	%f7213, %f7212, %f6319;
	max.f32 	%f7214, %f7211, %f6320;
	max.f32 	%f7215, %f7214, %f6321;
	max.f32 	%f7216, %f7213, %f6322;
	max.f32 	%f7217, %f7216, %f6323;
	max.f32 	%f7218, %f7215, %f6324;
	max.f32 	%f7219, %f7218, %f6325;
	max.f32 	%f7220, %f7217, %f6326;
	max.f32 	%f7221, %f7220, %f6327;
	max.f32 	%f7222, %f7219, %f6328;
	max.f32 	%f7223, %f7222, %f6329;
	max.f32 	%f7224, %f7221, %f6330;
	max.f32 	%f7225, %f7224, %f6331;
	max.f32 	%f7226, %f7223, %f6332;
	max.f32 	%f7227, %f7226, %f6333;
	max.f32 	%f7228, %f7225, %f6334;
	max.f32 	%f7229, %f7228, %f6335;
	max.f32 	%f7230, %f7227, %f6336;
	max.f32 	%f7231, %f7230, %f6337;
	max.f32 	%f7232, %f7229, %f6338;
	max.f32 	%f7233, %f7232, %f6339;
	max.f32 	%f7234, %f7231, %f6340;
	max.f32 	%f7235, %f7234, %f6341;
	max.f32 	%f7236, %f7233, %f6342;
	max.f32 	%f7237, %f7236, %f6343;
	max.f32 	%f7238, %f7235, %f6344;
	max.f32 	%f7239, %f7238, %f6345;
	max.f32 	%f7240, %f7237, %f6346;
	max.f32 	%f7241, %f7240, %f6347;
	max.f32 	%f7242, %f7239, %f6348;
	max.f32 	%f7243, %f7242, %f6349;
	max.f32 	%f7244, %f7241, %f6350;
	max.f32 	%f7245, %f7244, %f6351;
	max.f32 	%f7246, %f7243, %f6352;
	max.f32 	%f7247, %f7246, %f6353;
	max.f32 	%f7248, %f7245, %f6354;
	max.f32 	%f7249, %f7248, %f6355;
	max.f32 	%f7250, %f7247, %f6356;
	max.f32 	%f7251, %f7250, %f6357;
	max.f32 	%f7252, %f7249, %f6358;
	max.f32 	%f7253, %f7252, %f6359;
	max.f32 	%f7254, %f7251, %f6360;
	max.f32 	%f7255, %f7254, %f6361;
	max.f32 	%f7256, %f7253, %f6362;
	max.f32 	%f7257, %f7256, %f6363;
	max.f32 	%f7258, %f7255, %f6364;
	max.f32 	%f7259, %f7258, %f6365;
	max.f32 	%f7260, %f7257, %f6366;
	max.f32 	%f7261, %f7260, %f6367;
	max.f32 	%f7262, %f7259, %f6368;
	max.f32 	%f7263, %f7262, %f6369;
	max.f32 	%f7264, %f7261, %f6370;
	max.f32 	%f7265, %f7264, %f6371;
	.loc	2 188 40                        // standard.py:188:40 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	mov.b32 	%r328, %f7263;
	shfl.sync.bfly.b32	%r329, %r328, 2, 31, -1;
	mov.b32 	%f7266, %r329;
	.loc	2 167 27                        // standard.py:167:27 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	max.f32 	%f7267, %f7263, %f7266;
	.loc	2 188 40                        // standard.py:188:40 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	mov.b32 	%r330, %f7267;
	shfl.sync.bfly.b32	%r331, %r330, 1, 31, -1;
	mov.b32 	%f7268, %r331;
	.loc	2 167 27                        // standard.py:167:27 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	max.f32 	%f7269, %f7267, %f7268;
	.loc	2 188 40                        // standard.py:188:40 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	mov.b32 	%r332, %f7265;
	shfl.sync.bfly.b32	%r333, %r332, 2, 31, -1;
	mov.b32 	%f7270, %r333;
	.loc	2 167 27                        // standard.py:167:27 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	max.f32 	%f7271, %f7265, %f7270;
	.loc	2 188 40                        // standard.py:188:40 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	mov.b32 	%r334, %f7271;
	shfl.sync.bfly.b32	%r335, %r334, 1, 31, -1;
	mov.b32 	%f7272, %r335;
	.loc	2 167 27                        // standard.py:167:27 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	max.f32 	%f7273, %f7271, %f7272;
$L__tmp10:
	.loc	1 155 51                        // hopper-fa-ws-pipelined-pingpong.py:155:51
	mul.f32 	%f7274, %f1, %f7269;
	mul.f32 	%f7275, %f1, %f7273;
	.loc	1 155 35                        // hopper-fa-ws-pipelined-pingpong.py:155:35
	max.f32 	%f11348, %f7274, 0fFF800000;
	max.f32 	%f11349, %f7275, 0fFF800000;
	.loc	1 156 33                        // hopper-fa-ws-pipelined-pingpong.py:156:33
	neg.f32 	%f7276, %f11348;
	fma.rn.f32 	%f7277, %f1, %f6308, %f7276;
	fma.rn.f32 	%f7278, %f1, %f6309, %f7276;
	neg.f32 	%f7279, %f11349;
	fma.rn.f32 	%f7280, %f1, %f6310, %f7279;
	fma.rn.f32 	%f7281, %f1, %f6311, %f7279;
	fma.rn.f32 	%f7282, %f1, %f6312, %f7276;
	fma.rn.f32 	%f7283, %f1, %f6313, %f7276;
	fma.rn.f32 	%f7284, %f1, %f6314, %f7279;
	fma.rn.f32 	%f7285, %f1, %f6315, %f7279;
	fma.rn.f32 	%f7286, %f1, %f6316, %f7276;
	fma.rn.f32 	%f7287, %f1, %f6317, %f7276;
	fma.rn.f32 	%f7288, %f1, %f6318, %f7279;
	fma.rn.f32 	%f7289, %f1, %f6319, %f7279;
	fma.rn.f32 	%f7290, %f1, %f6320, %f7276;
	fma.rn.f32 	%f7291, %f1, %f6321, %f7276;
	fma.rn.f32 	%f7292, %f1, %f6322, %f7279;
	fma.rn.f32 	%f7293, %f1, %f6323, %f7279;
	fma.rn.f32 	%f7294, %f1, %f6324, %f7276;
	fma.rn.f32 	%f7295, %f1, %f6325, %f7276;
	fma.rn.f32 	%f7296, %f1, %f6326, %f7279;
	fma.rn.f32 	%f7297, %f1, %f6327, %f7279;
	fma.rn.f32 	%f7298, %f1, %f6328, %f7276;
	fma.rn.f32 	%f7299, %f1, %f6329, %f7276;
	fma.rn.f32 	%f7300, %f1, %f6330, %f7279;
	fma.rn.f32 	%f7301, %f1, %f6331, %f7279;
	fma.rn.f32 	%f7302, %f1, %f6332, %f7276;
	fma.rn.f32 	%f7303, %f1, %f6333, %f7276;
	fma.rn.f32 	%f7304, %f1, %f6334, %f7279;
	fma.rn.f32 	%f7305, %f1, %f6335, %f7279;
	fma.rn.f32 	%f7306, %f1, %f6336, %f7276;
	fma.rn.f32 	%f7307, %f1, %f6337, %f7276;
	fma.rn.f32 	%f7308, %f1, %f6338, %f7279;
	fma.rn.f32 	%f7309, %f1, %f6339, %f7279;
	fma.rn.f32 	%f7310, %f1, %f6340, %f7276;
	fma.rn.f32 	%f7311, %f1, %f6341, %f7276;
	fma.rn.f32 	%f7312, %f1, %f6342, %f7279;
	fma.rn.f32 	%f7313, %f1, %f6343, %f7279;
	fma.rn.f32 	%f7314, %f1, %f6344, %f7276;
	fma.rn.f32 	%f7315, %f1, %f6345, %f7276;
	fma.rn.f32 	%f7316, %f1, %f6346, %f7279;
	fma.rn.f32 	%f7317, %f1, %f6347, %f7279;
	fma.rn.f32 	%f7318, %f1, %f6348, %f7276;
	fma.rn.f32 	%f7319, %f1, %f6349, %f7276;
	fma.rn.f32 	%f7320, %f1, %f6350, %f7279;
	fma.rn.f32 	%f7321, %f1, %f6351, %f7279;
	fma.rn.f32 	%f7322, %f1, %f6352, %f7276;
	fma.rn.f32 	%f7323, %f1, %f6353, %f7276;
	fma.rn.f32 	%f7324, %f1, %f6354, %f7279;
	fma.rn.f32 	%f7325, %f1, %f6355, %f7279;
	fma.rn.f32 	%f7326, %f1, %f6356, %f7276;
	fma.rn.f32 	%f7327, %f1, %f6357, %f7276;
	fma.rn.f32 	%f7328, %f1, %f6358, %f7279;
	fma.rn.f32 	%f7329, %f1, %f6359, %f7279;
	fma.rn.f32 	%f7330, %f1, %f6360, %f7276;
	fma.rn.f32 	%f7331, %f1, %f6361, %f7276;
	fma.rn.f32 	%f7332, %f1, %f6362, %f7279;
	fma.rn.f32 	%f7333, %f1, %f6363, %f7279;
	fma.rn.f32 	%f7334, %f1, %f6364, %f7276;
	fma.rn.f32 	%f7335, %f1, %f6365, %f7276;
	fma.rn.f32 	%f7336, %f1, %f6366, %f7279;
	fma.rn.f32 	%f7337, %f1, %f6367, %f7279;
	fma.rn.f32 	%f7338, %f1, %f6368, %f7276;
	fma.rn.f32 	%f7339, %f1, %f6369, %f7276;
	fma.rn.f32 	%f7340, %f1, %f6370, %f7279;
	fma.rn.f32 	%f7341, %f1, %f6371, %f7279;
	.loc	1 157 29                        // hopper-fa-ws-pipelined-pingpong.py:157:29
	ex2.approx.ftz.f32 	%f11412, %f7277;
	ex2.approx.ftz.f32 	%f11413, %f7278;
	ex2.approx.ftz.f32 	%f11410, %f7280;
	ex2.approx.ftz.f32 	%f11411, %f7281;
	ex2.approx.ftz.f32 	%f11408, %f7282;
	ex2.approx.ftz.f32 	%f11409, %f7283;
	ex2.approx.ftz.f32 	%f11406, %f7284;
	ex2.approx.ftz.f32 	%f11407, %f7285;
	ex2.approx.ftz.f32 	%f11404, %f7286;
	ex2.approx.ftz.f32 	%f11405, %f7287;
	ex2.approx.ftz.f32 	%f11402, %f7288;
	ex2.approx.ftz.f32 	%f11403, %f7289;
	ex2.approx.ftz.f32 	%f11400, %f7290;
	ex2.approx.ftz.f32 	%f11401, %f7291;
	ex2.approx.ftz.f32 	%f11398, %f7292;
	ex2.approx.ftz.f32 	%f11399, %f7293;
	ex2.approx.ftz.f32 	%f11396, %f7294;
	ex2.approx.ftz.f32 	%f11397, %f7295;
	ex2.approx.ftz.f32 	%f11394, %f7296;
	ex2.approx.ftz.f32 	%f11395, %f7297;
	ex2.approx.ftz.f32 	%f11392, %f7298;
	ex2.approx.ftz.f32 	%f11393, %f7299;
	ex2.approx.ftz.f32 	%f11390, %f7300;
	ex2.approx.ftz.f32 	%f11391, %f7301;
	ex2.approx.ftz.f32 	%f11388, %f7302;
	ex2.approx.ftz.f32 	%f11389, %f7303;
	ex2.approx.ftz.f32 	%f11386, %f7304;
	ex2.approx.ftz.f32 	%f11387, %f7305;
	ex2.approx.ftz.f32 	%f11384, %f7306;
	ex2.approx.ftz.f32 	%f11385, %f7307;
	ex2.approx.ftz.f32 	%f11382, %f7308;
	ex2.approx.ftz.f32 	%f11383, %f7309;
	ex2.approx.ftz.f32 	%f11380, %f7310;
	ex2.approx.ftz.f32 	%f11381, %f7311;
	ex2.approx.ftz.f32 	%f11378, %f7312;
	ex2.approx.ftz.f32 	%f11379, %f7313;
	ex2.approx.ftz.f32 	%f11376, %f7314;
	ex2.approx.ftz.f32 	%f11377, %f7315;
	ex2.approx.ftz.f32 	%f11374, %f7316;
	ex2.approx.ftz.f32 	%f11375, %f7317;
	ex2.approx.ftz.f32 	%f11372, %f7318;
	ex2.approx.ftz.f32 	%f11373, %f7319;
	ex2.approx.ftz.f32 	%f11370, %f7320;
	ex2.approx.ftz.f32 	%f11371, %f7321;
	ex2.approx.ftz.f32 	%f11368, %f7322;
	ex2.approx.ftz.f32 	%f11369, %f7323;
	ex2.approx.ftz.f32 	%f11366, %f7324;
	ex2.approx.ftz.f32 	%f11367, %f7325;
	ex2.approx.ftz.f32 	%f11364, %f7326;
	ex2.approx.ftz.f32 	%f11365, %f7327;
	ex2.approx.ftz.f32 	%f11362, %f7328;
	ex2.approx.ftz.f32 	%f11363, %f7329;
	ex2.approx.ftz.f32 	%f11360, %f7330;
	ex2.approx.ftz.f32 	%f11361, %f7331;
	ex2.approx.ftz.f32 	%f11358, %f7332;
	ex2.approx.ftz.f32 	%f11359, %f7333;
	ex2.approx.ftz.f32 	%f11356, %f7334;
	ex2.approx.ftz.f32 	%f11357, %f7335;
	ex2.approx.ftz.f32 	%f11354, %f7336;
	ex2.approx.ftz.f32 	%f11355, %f7337;
	ex2.approx.ftz.f32 	%f11352, %f7338;
	ex2.approx.ftz.f32 	%f11353, %f7339;
	ex2.approx.ftz.f32 	%f11350, %f7340;
	ex2.approx.ftz.f32 	%f11351, %f7341;
	mov.b32 	%f7342, 0fFF800000;
	.loc	1 159 39                        // hopper-fa-ws-pipelined-pingpong.py:159:39
	sub.f32 	%f7343, %f7342, %f11348;
	sub.f32 	%f7344, %f7342, %f11349;
	.loc	1 159 33                        // hopper-fa-ws-pipelined-pingpong.py:159:33
	ex2.approx.ftz.f32 	%f7345, %f7343;
	ex2.approx.ftz.f32 	%f7346, %f7344;
	.loc	1 161 24                        // hopper-fa-ws-pipelined-pingpong.py:161:24
	mul.f32 	%f11217, %f7345, 0f00000000;
	mul.f32 	%f11215, %f7346, 0f00000000;
$L__tmp11:
	.loc	2 260 15                        // standard.py:260:15 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	add.f32 	%f7347, %f11412, %f11413;
	add.f32 	%f7348, %f11410, %f11411;
	add.f32 	%f7349, %f7347, %f11408;
	add.f32 	%f7350, %f7349, %f11409;
	add.f32 	%f7351, %f7348, %f11406;
	add.f32 	%f7352, %f7351, %f11407;
	add.f32 	%f7353, %f7350, %f11404;
	add.f32 	%f7354, %f7353, %f11405;
	add.f32 	%f7355, %f7352, %f11402;
	add.f32 	%f7356, %f7355, %f11403;
	add.f32 	%f7357, %f7354, %f11400;
	add.f32 	%f7358, %f7357, %f11401;
	add.f32 	%f7359, %f7356, %f11398;
	add.f32 	%f7360, %f7359, %f11399;
	add.f32 	%f7361, %f7358, %f11396;
	add.f32 	%f7362, %f7361, %f11397;
	add.f32 	%f7363, %f7360, %f11394;
	add.f32 	%f7364, %f7363, %f11395;
	add.f32 	%f7365, %f7362, %f11392;
	add.f32 	%f7366, %f7365, %f11393;
	add.f32 	%f7367, %f7364, %f11390;
	add.f32 	%f7368, %f7367, %f11391;
	add.f32 	%f7369, %f7366, %f11388;
	add.f32 	%f7370, %f7369, %f11389;
	add.f32 	%f7371, %f7368, %f11386;
	add.f32 	%f7372, %f7371, %f11387;
	add.f32 	%f7373, %f7370, %f11384;
	add.f32 	%f7374, %f7373, %f11385;
	add.f32 	%f7375, %f7372, %f11382;
	add.f32 	%f7376, %f7375, %f11383;
	add.f32 	%f7377, %f7374, %f11380;
	add.f32 	%f7378, %f7377, %f11381;
	add.f32 	%f7379, %f7376, %f11378;
	add.f32 	%f7380, %f7379, %f11379;
	add.f32 	%f7381, %f7378, %f11376;
	add.f32 	%f7382, %f7381, %f11377;
	add.f32 	%f7383, %f7380, %f11374;
	add.f32 	%f7384, %f7383, %f11375;
	add.f32 	%f7385, %f7382, %f11372;
	add.f32 	%f7386, %f7385, %f11373;
	add.f32 	%f7387, %f7384, %f11370;
	add.f32 	%f7388, %f7387, %f11371;
	add.f32 	%f7389, %f7386, %f11368;
	add.f32 	%f7390, %f7389, %f11369;
	add.f32 	%f7391, %f7388, %f11366;
	add.f32 	%f7392, %f7391, %f11367;
	add.f32 	%f7393, %f7390, %f11364;
	add.f32 	%f7394, %f7393, %f11365;
	add.f32 	%f7395, %f7392, %f11362;
	add.f32 	%f7396, %f7395, %f11363;
	add.f32 	%f7397, %f7394, %f11360;
	add.f32 	%f7398, %f7397, %f11361;
	add.f32 	%f7399, %f7396, %f11358;
	add.f32 	%f7400, %f7399, %f11359;
	add.f32 	%f7401, %f7398, %f11356;
	add.f32 	%f7402, %f7401, %f11357;
	add.f32 	%f7403, %f7400, %f11354;
	add.f32 	%f7404, %f7403, %f11355;
	add.f32 	%f7405, %f7402, %f11352;
	add.f32 	%f7406, %f7405, %f11353;
	add.f32 	%f7407, %f7404, %f11350;
	add.f32 	%f7408, %f7407, %f11351;
	.loc	2 290 36                        // standard.py:290:36 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	mov.b32 	%r336, %f7406;
	shfl.sync.bfly.b32	%r337, %r336, 2, 31, -1;
	mov.b32 	%f7409, %r337;
	.loc	2 260 15                        // standard.py:260:15 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	add.f32 	%f7410, %f7406, %f7409;
	.loc	2 290 36                        // standard.py:290:36 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	mov.b32 	%r338, %f7410;
	shfl.sync.bfly.b32	%r339, %r338, 1, 31, -1;
	mov.b32 	%f7411, %r339;
	.loc	2 260 15                        // standard.py:260:15 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	add.f32 	%f7412, %f7410, %f7411;
	.loc	2 290 36                        // standard.py:290:36 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	mov.b32 	%r340, %f7408;
	shfl.sync.bfly.b32	%r341, %r340, 2, 31, -1;
	mov.b32 	%f7413, %r341;
	.loc	2 260 15                        // standard.py:260:15 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	add.f32 	%f7414, %f7408, %f7413;
	.loc	2 290 36                        // standard.py:290:36 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	mov.b32 	%r342, %f7414;
	shfl.sync.bfly.b32	%r343, %r342, 1, 31, -1;
	mov.b32 	%f7415, %r343;
	.loc	2 260 15                        // standard.py:260:15 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	add.f32 	%f7416, %f7414, %f7415;
$L__tmp12:
	.loc	1 163 32                        // hopper-fa-ws-pipelined-pingpong.py:163:32
	add.f32 	%f11346, %f7345, %f7412;
	add.f32 	%f11347, %f7346, %f7416;
	mov.b32 	%r636, 1;
	mov.b32 	%f11216, %f11217;
	mov.b32 	%f11214, %f11215;
	mov.b32 	%f11213, %f11217;
	mov.b32 	%f11212, %f11217;
	mov.b32 	%f11211, %f11215;
	mov.b32 	%f11210, %f11215;
	mov.b32 	%f11209, %f11217;
	mov.b32 	%f11208, %f11217;
	mov.b32 	%f11207, %f11215;
	mov.b32 	%f11206, %f11215;
	mov.b32 	%f11205, %f11217;
	mov.b32 	%f11204, %f11217;
	mov.b32 	%f11203, %f11215;
	mov.b32 	%f11202, %f11215;
	mov.b32 	%f11201, %f11217;
	mov.b32 	%f11200, %f11217;
	mov.b32 	%f11199, %f11215;
	mov.b32 	%f11198, %f11215;
	mov.b32 	%f11197, %f11217;
	mov.b32 	%f11196, %f11217;
	mov.b32 	%f11195, %f11215;
	mov.b32 	%f11194, %f11215;
	mov.b32 	%f11193, %f11217;
	mov.b32 	%f11192, %f11217;
	mov.b32 	%f11191, %f11215;
	mov.b32 	%f11190, %f11215;
	mov.b32 	%f11189, %f11217;
	mov.b32 	%f11188, %f11217;
	mov.b32 	%f11187, %f11215;
	mov.b32 	%f11186, %f11215;
	mov.b32 	%f11185, %f11217;
	mov.b32 	%f11184, %f11217;
	mov.b32 	%f11183, %f11215;
	mov.b32 	%f11182, %f11215;
	mov.b32 	%f11181, %f11217;
	mov.b32 	%f11180, %f11217;
	mov.b32 	%f11179, %f11215;
	mov.b32 	%f11178, %f11215;
	mov.b32 	%f11177, %f11217;
	mov.b32 	%f11176, %f11217;
	mov.b32 	%f11175, %f11215;
	mov.b32 	%f11174, %f11215;
	mov.b32 	%f11173, %f11217;
	mov.b32 	%f11172, %f11217;
	mov.b32 	%f11171, %f11215;
	mov.b32 	%f11170, %f11215;
	mov.b32 	%f11169, %f11217;
	mov.b32 	%f11168, %f11217;
	mov.b32 	%f11167, %f11215;
	mov.b32 	%f11166, %f11215;
	mov.b32 	%f11165, %f11217;
	mov.b32 	%f11164, %f11217;
	mov.b32 	%f11163, %f11215;
	mov.b32 	%f11162, %f11215;
	mov.b32 	%f11161, %f11217;
	mov.b32 	%f11160, %f11217;
	mov.b32 	%f11159, %f11215;
	mov.b32 	%f11158, %f11215;
	mov.b32 	%f11157, %f11217;
	mov.b32 	%f11156, %f11217;
	mov.b32 	%f11155, %f11215;
	mov.b32 	%f11154, %f11215;
	.loc	1 168 48                        // hopper-fa-ws-pipelined-pingpong.py:168:48
	@%p71 bra 	$L__BB0_9;
// %bb.7:                               // %.lr.ph1827.preheader
                                        //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 48                          // hopper-fa-ws-pipelined-pingpong.py:0:48
	mov.b32 	%r635, 128;
	mov.b32 	%r634, 0;
	mov.b32 	%r632, 1;
	mov.b32 	%f11150, %f11349;
	mov.b32 	%f11151, %f11348;
	mov.b32 	%f11154, %f11215;
	mov.b32 	%f11155, %f11215;
	mov.b32 	%f11156, %f11217;
	mov.b32 	%f11157, %f11217;
	mov.b32 	%f11158, %f11215;
	mov.b32 	%f11159, %f11215;
	mov.b32 	%f11160, %f11217;
	mov.b32 	%f11161, %f11217;
	mov.b32 	%f11162, %f11215;
	mov.b32 	%f11163, %f11215;
	mov.b32 	%f11164, %f11217;
	mov.b32 	%f11165, %f11217;
	mov.b32 	%f11166, %f11215;
	mov.b32 	%f11167, %f11215;
	mov.b32 	%f11168, %f11217;
	mov.b32 	%f11169, %f11217;
	mov.b32 	%f11170, %f11215;
	mov.b32 	%f11171, %f11215;
	mov.b32 	%f11172, %f11217;
	mov.b32 	%f11173, %f11217;
	mov.b32 	%f11174, %f11215;
	mov.b32 	%f11175, %f11215;
	mov.b32 	%f11176, %f11217;
	mov.b32 	%f11177, %f11217;
	mov.b32 	%f11178, %f11215;
	mov.b32 	%f11179, %f11215;
	mov.b32 	%f11180, %f11217;
	mov.b32 	%f11181, %f11217;
	mov.b32 	%f11182, %f11215;
	mov.b32 	%f11183, %f11215;
	mov.b32 	%f11184, %f11217;
	mov.b32 	%f11185, %f11217;
	mov.b32 	%f11186, %f11215;
	mov.b32 	%f11187, %f11215;
	mov.b32 	%f11188, %f11217;
	mov.b32 	%f11189, %f11217;
	mov.b32 	%f11190, %f11215;
	mov.b32 	%f11191, %f11215;
	mov.b32 	%f11192, %f11217;
	mov.b32 	%f11193, %f11217;
	mov.b32 	%f11194, %f11215;
	mov.b32 	%f11195, %f11215;
	mov.b32 	%f11196, %f11217;
	mov.b32 	%f11197, %f11217;
	mov.b32 	%f11198, %f11215;
	mov.b32 	%f11199, %f11215;
	mov.b32 	%f11200, %f11217;
	mov.b32 	%f11201, %f11217;
	mov.b32 	%f11202, %f11215;
	mov.b32 	%f11203, %f11215;
	mov.b32 	%f11204, %f11217;
	mov.b32 	%f11205, %f11217;
	mov.b32 	%f11206, %f11215;
	mov.b32 	%f11207, %f11215;
	mov.b32 	%f11208, %f11217;
	mov.b32 	%f11209, %f11217;
	mov.b32 	%f11210, %f11215;
	mov.b32 	%f11211, %f11215;
	mov.b32 	%f11212, %f11217;
	mov.b32 	%f11213, %f11217;
	mov.b32 	%f11214, %f11215;
	mov.b32 	%f11216, %f11217;
	mov.b32 	%r636, %r632;
$L__BB0_8:                              // %.lr.ph1827
                                        //   Parent Loop BB0_2 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.loc	1 169 37                        // hopper-fa-ws-pipelined-pingpong.py:169:37
	shr.u32 	%r385, %r632, 31;
	add.s32 	%r386, %r632, %r385;
	and.b32 	%r387, %r386, -2;
	sub.s32 	%r637, %r632, %r387;
	.loc	1 171 49                        // hopper-fa-ws-pipelined-pingpong.py:171:49
	setp.eq.s32 	%p91, %r637, 0;
	.loc	1 171 37                        // hopper-fa-ws-pipelined-pingpong.py:171:37
	selp.b32 	%r388, 1, 0, %p91;
	xor.b32 	%r634, %r634, %r388;
	.loc	1 174 41                        // hopper-fa-ws-pipelined-pingpong.py:174:41
	shl.b32 	%r389, %r637, 3;
	add.s32 	%r391, %r48, %r389;
	add.s32 	%r347, %r391, 196640;
	.loc	1 174 52                        // hopper-fa-ws-pipelined-pingpong.py:174:52
	// begin inline asm
	barrier.sync.aligned 2, 128 ;
	// end inline asm
	mov.pred 	%p72, -1;
	// begin inline asm
	{                                                           
	@!%p72 bra.uni skipWait;                                      
	.reg .pred P1;                                              
	waitLoop:                                                   
	mbarrier.try_wait.parity.shared.b64 P1, [%r347], %r634;           
	@!P1 bra.uni waitLoop;                                      
	skipWait:                                                   
	}                                                           
	
	// end inline asm
	.loc	1 177 49                        // hopper-fa-ws-pipelined-pingpong.py:177:49
	shl.b32 	%r392, %r637, 15;
	add.s32 	%r393, %r48, %r392;
	.loc	1 178 49                        // hopper-fa-ws-pipelined-pingpong.py:178:49
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	bfe.u32 	%r394, %r393, 4, 14;
	cvt.u64.u32 	%rd133, %r394;
	or.b64 	%rd110, %rd133, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f7609,%f7610,%f7611,%f7612,%f7613,%f7614,%f7615,%f7616,%f7617,%f7618,%f7619,%f7620,%f7621,%f7622,%f7623,%f7624,%f7625,%f7626,%f7627,%f7628,%f7629,%f7630,%f7631,%f7632,%f7633,%f7634,%f7635,%f7636,%f7637,%f7638,%f7639,%f7640,%f7641,%f7642,%f7643,%f7644,%f7645,%f7646,%f7647,%f7648,%f7649,%f7650,%f7651,%f7652,%f7653,%f7654,%f7655,%f7656,%f7657,%f7658,%f7659,%f7660,%f7661,%f7662,%f7663,%f7664,%f7665,%f7666,%f7667,%f7668,%f7669,%f7670,%f7671,%f7672}, %rd109, %rd110, 0, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd112, %rd133, 4611686293372403714;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f7609,%f7610,%f7611,%f7612,%f7613,%f7614,%f7615,%f7616,%f7617,%f7618,%f7619,%f7620,%f7621,%f7622,%f7623,%f7624,%f7625,%f7626,%f7627,%f7628,%f7629,%f7630,%f7631,%f7632,%f7633,%f7634,%f7635,%f7636,%f7637,%f7638,%f7639,%f7640,%f7641,%f7642,%f7643,%f7644,%f7645,%f7646,%f7647,%f7648,%f7649,%f7650,%f7651,%f7652,%f7653,%f7654,%f7655,%f7656,%f7657,%f7658,%f7659,%f7660,%f7661,%f7662,%f7663,%f7664,%f7665,%f7666,%f7667,%f7668,%f7669,%f7670,%f7671,%f7672}, %rd111, %rd112, %p72, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd114, %rd133, 4611686293372403716;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f7609,%f7610,%f7611,%f7612,%f7613,%f7614,%f7615,%f7616,%f7617,%f7618,%f7619,%f7620,%f7621,%f7622,%f7623,%f7624,%f7625,%f7626,%f7627,%f7628,%f7629,%f7630,%f7631,%f7632,%f7633,%f7634,%f7635,%f7636,%f7637,%f7638,%f7639,%f7640,%f7641,%f7642,%f7643,%f7644,%f7645,%f7646,%f7647,%f7648,%f7649,%f7650,%f7651,%f7652,%f7653,%f7654,%f7655,%f7656,%f7657,%f7658,%f7659,%f7660,%f7661,%f7662,%f7663,%f7664,%f7665,%f7666,%f7667,%f7668,%f7669,%f7670,%f7671,%f7672}, %rd113, %rd114, %p72, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd116, %rd133, 4611686293372403718;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f7609,%f7610,%f7611,%f7612,%f7613,%f7614,%f7615,%f7616,%f7617,%f7618,%f7619,%f7620,%f7621,%f7622,%f7623,%f7624,%f7625,%f7626,%f7627,%f7628,%f7629,%f7630,%f7631,%f7632,%f7633,%f7634,%f7635,%f7636,%f7637,%f7638,%f7639,%f7640,%f7641,%f7642,%f7643,%f7644,%f7645,%f7646,%f7647,%f7648,%f7649,%f7650,%f7651,%f7652,%f7653,%f7654,%f7655,%f7656,%f7657,%f7658,%f7659,%f7660,%f7661,%f7662,%f7663,%f7664,%f7665,%f7666,%f7667,%f7668,%f7669,%f7670,%f7671,%f7672}, %rd115, %rd116, %p72, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd118, %rd133, 4611686293372404736;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f7609,%f7610,%f7611,%f7612,%f7613,%f7614,%f7615,%f7616,%f7617,%f7618,%f7619,%f7620,%f7621,%f7622,%f7623,%f7624,%f7625,%f7626,%f7627,%f7628,%f7629,%f7630,%f7631,%f7632,%f7633,%f7634,%f7635,%f7636,%f7637,%f7638,%f7639,%f7640,%f7641,%f7642,%f7643,%f7644,%f7645,%f7646,%f7647,%f7648,%f7649,%f7650,%f7651,%f7652,%f7653,%f7654,%f7655,%f7656,%f7657,%f7658,%f7659,%f7660,%f7661,%f7662,%f7663,%f7664,%f7665,%f7666,%f7667,%f7668,%f7669,%f7670,%f7671,%f7672}, %rd117, %rd118, %p72, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd120, %rd133, 4611686293372404738;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f7609,%f7610,%f7611,%f7612,%f7613,%f7614,%f7615,%f7616,%f7617,%f7618,%f7619,%f7620,%f7621,%f7622,%f7623,%f7624,%f7625,%f7626,%f7627,%f7628,%f7629,%f7630,%f7631,%f7632,%f7633,%f7634,%f7635,%f7636,%f7637,%f7638,%f7639,%f7640,%f7641,%f7642,%f7643,%f7644,%f7645,%f7646,%f7647,%f7648,%f7649,%f7650,%f7651,%f7652,%f7653,%f7654,%f7655,%f7656,%f7657,%f7658,%f7659,%f7660,%f7661,%f7662,%f7663,%f7664,%f7665,%f7666,%f7667,%f7668,%f7669,%f7670,%f7671,%f7672}, %rd119, %rd120, %p72, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd122, %rd133, 4611686293372404740;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f7609,%f7610,%f7611,%f7612,%f7613,%f7614,%f7615,%f7616,%f7617,%f7618,%f7619,%f7620,%f7621,%f7622,%f7623,%f7624,%f7625,%f7626,%f7627,%f7628,%f7629,%f7630,%f7631,%f7632,%f7633,%f7634,%f7635,%f7636,%f7637,%f7638,%f7639,%f7640,%f7641,%f7642,%f7643,%f7644,%f7645,%f7646,%f7647,%f7648,%f7649,%f7650,%f7651,%f7652,%f7653,%f7654,%f7655,%f7656,%f7657,%f7658,%f7659,%f7660,%f7661,%f7662,%f7663,%f7664,%f7665,%f7666,%f7667,%f7668,%f7669,%f7670,%f7671,%f7672}, %rd121, %rd122, %p72, 1, 1, 0, 0;
	// end inline asm
	add.s64 	%rd124, %rd133, 4611686293372404742;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f7609,%f7610,%f7611,%f7612,%f7613,%f7614,%f7615,%f7616,%f7617,%f7618,%f7619,%f7620,%f7621,%f7622,%f7623,%f7624,%f7625,%f7626,%f7627,%f7628,%f7629,%f7630,%f7631,%f7632,%f7633,%f7634,%f7635,%f7636,%f7637,%f7638,%f7639,%f7640,%f7641,%f7642,%f7643,%f7644,%f7645,%f7646,%f7647,%f7648,%f7649,%f7650,%f7651,%f7652,%f7653,%f7654,%f7655,%f7656,%f7657,%f7658,%f7659,%f7660,%f7661,%f7662,%f7663,%f7664,%f7665,%f7666,%f7667,%f7668,%f7669,%f7670,%f7671,%f7672}, %rd123, %rd124, %p72, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	.loc	1 182 38                        // hopper-fa-ws-pipelined-pingpong.py:182:38
	add.s32 	%r395, %r632, -1;
	.loc	1 182 43                        // hopper-fa-ws-pipelined-pingpong.py:182:43
	shr.u32 	%r396, %r395, 31;
	add.s32 	%r397, %r395, %r396;
	and.b32 	%r398, %r397, -2;
	sub.s32 	%r399, %r395, %r398;
	.loc	1 183 49                        // hopper-fa-ws-pipelined-pingpong.py:183:49
	setp.eq.s32 	%p92, %r399, 0;
	.loc	1 183 37                        // hopper-fa-ws-pipelined-pingpong.py:183:37
	selp.b32 	%r400, 1, 0, %p92;
	xor.b32 	%r636, %r636, %r400;
	.loc	1 184 41                        // hopper-fa-ws-pipelined-pingpong.py:184:41
	shl.b32 	%r401, %r399, 3;
	add.s32 	%r402, %r48, %r401;
	add.s32 	%r349, %r402, 196672;
	.loc	1 184 52                        // hopper-fa-ws-pipelined-pingpong.py:184:52
	// begin inline asm
	{                                                           
	@!%p72 bra.uni skipWait;                                      
	.reg .pred P1;                                              
	waitLoop:                                                   
	mbarrier.try_wait.parity.shared.b64 P1, [%r349], %r636;           
	@!P1 bra.uni waitLoop;                                      
	skipWait:                                                   
	}                                                           
	
	// end inline asm
	.loc	1 186 25                        // hopper-fa-ws-pipelined-pingpong.py:186:25
	cvt.rn.f16x2.f32 	%r351, %f11413, %f11412;
	cvt.rn.f16x2.f32 	%r352, %f11411, %f11410;
	cvt.rn.f16x2.f32 	%r353, %f11409, %f11408;
	cvt.rn.f16x2.f32 	%r354, %f11407, %f11406;
	cvt.rn.f16x2.f32 	%r355, %f11405, %f11404;
	cvt.rn.f16x2.f32 	%r356, %f11403, %f11402;
	cvt.rn.f16x2.f32 	%r357, %f11401, %f11400;
	cvt.rn.f16x2.f32 	%r358, %f11399, %f11398;
	cvt.rn.f16x2.f32 	%r359, %f11397, %f11396;
	cvt.rn.f16x2.f32 	%r360, %f11395, %f11394;
	cvt.rn.f16x2.f32 	%r361, %f11393, %f11392;
	cvt.rn.f16x2.f32 	%r362, %f11391, %f11390;
	cvt.rn.f16x2.f32 	%r363, %f11389, %f11388;
	cvt.rn.f16x2.f32 	%r364, %f11387, %f11386;
	cvt.rn.f16x2.f32 	%r365, %f11385, %f11384;
	cvt.rn.f16x2.f32 	%r366, %f11383, %f11382;
	cvt.rn.f16x2.f32 	%r367, %f11381, %f11380;
	cvt.rn.f16x2.f32 	%r368, %f11379, %f11378;
	cvt.rn.f16x2.f32 	%r369, %f11377, %f11376;
	cvt.rn.f16x2.f32 	%r370, %f11375, %f11374;
	cvt.rn.f16x2.f32 	%r371, %f11373, %f11372;
	cvt.rn.f16x2.f32 	%r372, %f11371, %f11370;
	cvt.rn.f16x2.f32 	%r373, %f11369, %f11368;
	cvt.rn.f16x2.f32 	%r374, %f11367, %f11366;
	cvt.rn.f16x2.f32 	%r375, %f11365, %f11364;
	cvt.rn.f16x2.f32 	%r376, %f11363, %f11362;
	cvt.rn.f16x2.f32 	%r377, %f11361, %f11360;
	cvt.rn.f16x2.f32 	%r378, %f11359, %f11358;
	cvt.rn.f16x2.f32 	%r379, %f11357, %f11356;
	cvt.rn.f16x2.f32 	%r380, %f11355, %f11354;
	cvt.rn.f16x2.f32 	%r381, %f11353, %f11352;
	cvt.rn.f16x2.f32 	%r382, %f11351, %f11350;
	.loc	1 187 47                        // hopper-fa-ws-pipelined-pingpong.py:187:47
	shl.b32 	%r403, %r399, 15;
	add.s32 	%r404, %r48, %r403;
	add.s32 	%r405, %r404, 65536;
	.loc	1 187 58                        // hopper-fa-ws-pipelined-pingpong.py:187:58
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	bfe.u32 	%r406, %r405, 4, 14;
	cvt.u64.u32 	%rd134, %r406;
	or.b64 	%rd125, %rd134, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11217,%f11216,%f11215,%f11214,%f11213,%f11212,%f11211,%f11210,%f11209,%f11208,%f11207,%f11206,%f11205,%f11204,%f11203,%f11202,%f11201,%f11200,%f11199,%f11198,%f11197,%f11196,%f11195,%f11194,%f11193,%f11192,%f11191,%f11190,%f11189,%f11188,%f11187,%f11186,%f11185,%f11184,%f11183,%f11182,%f11181,%f11180,%f11179,%f11178,%f11177,%f11176,%f11175,%f11174,%f11173,%f11172,%f11171,%f11170,%f11169,%f11168,%f11167,%f11166,%f11165,%f11164,%f11163,%f11162,%f11161,%f11160,%f11159,%f11158,%f11157,%f11156,%f11155,%f11154}, {%r351,%r352,%r353,%r354}, %rd125, %p72, 1, 1, 1;
	// end inline asm
	add.s64 	%rd126, %rd134, 4611686293372403840;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11217,%f11216,%f11215,%f11214,%f11213,%f11212,%f11211,%f11210,%f11209,%f11208,%f11207,%f11206,%f11205,%f11204,%f11203,%f11202,%f11201,%f11200,%f11199,%f11198,%f11197,%f11196,%f11195,%f11194,%f11193,%f11192,%f11191,%f11190,%f11189,%f11188,%f11187,%f11186,%f11185,%f11184,%f11183,%f11182,%f11181,%f11180,%f11179,%f11178,%f11177,%f11176,%f11175,%f11174,%f11173,%f11172,%f11171,%f11170,%f11169,%f11168,%f11167,%f11166,%f11165,%f11164,%f11163,%f11162,%f11161,%f11160,%f11159,%f11158,%f11157,%f11156,%f11155,%f11154}, {%r355,%r356,%r357,%r358}, %rd126, %p72, 1, 1, 1;
	// end inline asm
	add.s64 	%rd127, %rd134, 4611686293372403968;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11217,%f11216,%f11215,%f11214,%f11213,%f11212,%f11211,%f11210,%f11209,%f11208,%f11207,%f11206,%f11205,%f11204,%f11203,%f11202,%f11201,%f11200,%f11199,%f11198,%f11197,%f11196,%f11195,%f11194,%f11193,%f11192,%f11191,%f11190,%f11189,%f11188,%f11187,%f11186,%f11185,%f11184,%f11183,%f11182,%f11181,%f11180,%f11179,%f11178,%f11177,%f11176,%f11175,%f11174,%f11173,%f11172,%f11171,%f11170,%f11169,%f11168,%f11167,%f11166,%f11165,%f11164,%f11163,%f11162,%f11161,%f11160,%f11159,%f11158,%f11157,%f11156,%f11155,%f11154}, {%r359,%r360,%r361,%r362}, %rd127, %p72, 1, 1, 1;
	// end inline asm
	add.s64 	%rd128, %rd134, 4611686293372404096;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11217,%f11216,%f11215,%f11214,%f11213,%f11212,%f11211,%f11210,%f11209,%f11208,%f11207,%f11206,%f11205,%f11204,%f11203,%f11202,%f11201,%f11200,%f11199,%f11198,%f11197,%f11196,%f11195,%f11194,%f11193,%f11192,%f11191,%f11190,%f11189,%f11188,%f11187,%f11186,%f11185,%f11184,%f11183,%f11182,%f11181,%f11180,%f11179,%f11178,%f11177,%f11176,%f11175,%f11174,%f11173,%f11172,%f11171,%f11170,%f11169,%f11168,%f11167,%f11166,%f11165,%f11164,%f11163,%f11162,%f11161,%f11160,%f11159,%f11158,%f11157,%f11156,%f11155,%f11154}, {%r363,%r364,%r365,%r366}, %rd128, %p72, 1, 1, 1;
	// end inline asm
	add.s64 	%rd129, %rd134, 4611686293372404224;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11217,%f11216,%f11215,%f11214,%f11213,%f11212,%f11211,%f11210,%f11209,%f11208,%f11207,%f11206,%f11205,%f11204,%f11203,%f11202,%f11201,%f11200,%f11199,%f11198,%f11197,%f11196,%f11195,%f11194,%f11193,%f11192,%f11191,%f11190,%f11189,%f11188,%f11187,%f11186,%f11185,%f11184,%f11183,%f11182,%f11181,%f11180,%f11179,%f11178,%f11177,%f11176,%f11175,%f11174,%f11173,%f11172,%f11171,%f11170,%f11169,%f11168,%f11167,%f11166,%f11165,%f11164,%f11163,%f11162,%f11161,%f11160,%f11159,%f11158,%f11157,%f11156,%f11155,%f11154}, {%r367,%r368,%r369,%r370}, %rd129, %p72, 1, 1, 1;
	// end inline asm
	add.s64 	%rd130, %rd134, 4611686293372404352;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11217,%f11216,%f11215,%f11214,%f11213,%f11212,%f11211,%f11210,%f11209,%f11208,%f11207,%f11206,%f11205,%f11204,%f11203,%f11202,%f11201,%f11200,%f11199,%f11198,%f11197,%f11196,%f11195,%f11194,%f11193,%f11192,%f11191,%f11190,%f11189,%f11188,%f11187,%f11186,%f11185,%f11184,%f11183,%f11182,%f11181,%f11180,%f11179,%f11178,%f11177,%f11176,%f11175,%f11174,%f11173,%f11172,%f11171,%f11170,%f11169,%f11168,%f11167,%f11166,%f11165,%f11164,%f11163,%f11162,%f11161,%f11160,%f11159,%f11158,%f11157,%f11156,%f11155,%f11154}, {%r371,%r372,%r373,%r374}, %rd130, %p72, 1, 1, 1;
	// end inline asm
	add.s64 	%rd131, %rd134, 4611686293372404480;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11217,%f11216,%f11215,%f11214,%f11213,%f11212,%f11211,%f11210,%f11209,%f11208,%f11207,%f11206,%f11205,%f11204,%f11203,%f11202,%f11201,%f11200,%f11199,%f11198,%f11197,%f11196,%f11195,%f11194,%f11193,%f11192,%f11191,%f11190,%f11189,%f11188,%f11187,%f11186,%f11185,%f11184,%f11183,%f11182,%f11181,%f11180,%f11179,%f11178,%f11177,%f11176,%f11175,%f11174,%f11173,%f11172,%f11171,%f11170,%f11169,%f11168,%f11167,%f11166,%f11165,%f11164,%f11163,%f11162,%f11161,%f11160,%f11159,%f11158,%f11157,%f11156,%f11155,%f11154}, {%r375,%r376,%r377,%r378}, %rd131, %p72, 1, 1, 1;
	// end inline asm
	add.s64 	%rd132, %rd134, 4611686293372404608;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11217,%f11216,%f11215,%f11214,%f11213,%f11212,%f11211,%f11210,%f11209,%f11208,%f11207,%f11206,%f11205,%f11204,%f11203,%f11202,%f11201,%f11200,%f11199,%f11198,%f11197,%f11196,%f11195,%f11194,%f11193,%f11192,%f11191,%f11190,%f11189,%f11188,%f11187,%f11186,%f11185,%f11184,%f11183,%f11182,%f11181,%f11180,%f11179,%f11178,%f11177,%f11176,%f11175,%f11174,%f11173,%f11172,%f11171,%f11170,%f11169,%f11168,%f11167,%f11166,%f11165,%f11164,%f11163,%f11162,%f11161,%f11160,%f11159,%f11158,%f11157,%f11156,%f11155,%f11154}, {%r379,%r380,%r381,%r382}, %rd132, %p72, 1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	.loc	1 190 43                        // hopper-fa-ws-pipelined-pingpong.py:190:43
	// begin inline asm
	// wait for regs: %f7609,%f7610,%f7611,%f7612,%f7613,%f7614,%f7615,%f7616,%f7617,%f7618,%f7619,%f7620,%f7621,%f7622,%f7623,%f7624,%f7625,%f7626,%f7627,%f7628,%f7629,%f7630,%f7631,%f7632,%f7633,%f7634,%f7635,%f7636,%f7637,%f7638,%f7639,%f7640,%f7641,%f7642,%f7643,%f7644,%f7645,%f7646,%f7647,%f7648,%f7649,%f7650,%f7651,%f7652,%f7653,%f7654,%f7655,%f7656,%f7657,%f7658,%f7659,%f7660,%f7661,%f7662,%f7663,%f7664,%f7665,%f7666,%f7667,%f7668,%f7669,%f7670,%f7671,%f7672
	wgmma.wait_group.sync.aligned 1;
	// end inline asm
	.loc	1 192 45                        // hopper-fa-ws-pipelined-pingpong.py:192:45
	add.s32 	%r383, %r391, 196624;
	.loc	1 192 56                        // hopper-fa-ws-pipelined-pingpong.py:192:56
	// begin inline asm
	barrier.sync.aligned 2, 128 ;
	// end inline asm
	// begin inline asm
	@%p89 mbarrier.arrive.shared::cta.b64 _, [%r383], 1;
	// end inline asm
$L__tmp13:
	.loc	2 167 27                        // standard.py:167:27 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	max.f32 	%f9657, %f7609, %f7610;
	max.f32 	%f9658, %f7611, %f7612;
	max.f32 	%f9659, %f9657, %f7613;
	max.f32 	%f9660, %f9659, %f7614;
	max.f32 	%f9661, %f9658, %f7615;
	max.f32 	%f9662, %f9661, %f7616;
	max.f32 	%f9663, %f9660, %f7617;
	max.f32 	%f9664, %f9663, %f7618;
	max.f32 	%f9665, %f9662, %f7619;
	max.f32 	%f9666, %f9665, %f7620;
	max.f32 	%f9667, %f9664, %f7621;
	max.f32 	%f9668, %f9667, %f7622;
	max.f32 	%f9669, %f9666, %f7623;
	max.f32 	%f9670, %f9669, %f7624;
	max.f32 	%f9671, %f9668, %f7625;
	max.f32 	%f9672, %f9671, %f7626;
	max.f32 	%f9673, %f9670, %f7627;
	max.f32 	%f9674, %f9673, %f7628;
	max.f32 	%f9675, %f9672, %f7629;
	max.f32 	%f9676, %f9675, %f7630;
	max.f32 	%f9677, %f9674, %f7631;
	max.f32 	%f9678, %f9677, %f7632;
	max.f32 	%f9679, %f9676, %f7633;
	max.f32 	%f9680, %f9679, %f7634;
	max.f32 	%f9681, %f9678, %f7635;
	max.f32 	%f9682, %f9681, %f7636;
	max.f32 	%f9683, %f9680, %f7637;
	max.f32 	%f9684, %f9683, %f7638;
	max.f32 	%f9685, %f9682, %f7639;
	max.f32 	%f9686, %f9685, %f7640;
	max.f32 	%f9687, %f9684, %f7641;
	max.f32 	%f9688, %f9687, %f7642;
	max.f32 	%f9689, %f9686, %f7643;
	max.f32 	%f9690, %f9689, %f7644;
	max.f32 	%f9691, %f9688, %f7645;
	max.f32 	%f9692, %f9691, %f7646;
	max.f32 	%f9693, %f9690, %f7647;
	max.f32 	%f9694, %f9693, %f7648;
	max.f32 	%f9695, %f9692, %f7649;
	max.f32 	%f9696, %f9695, %f7650;
	max.f32 	%f9697, %f9694, %f7651;
	max.f32 	%f9698, %f9697, %f7652;
	max.f32 	%f9699, %f9696, %f7653;
	max.f32 	%f9700, %f9699, %f7654;
	max.f32 	%f9701, %f9698, %f7655;
	max.f32 	%f9702, %f9701, %f7656;
	max.f32 	%f9703, %f9700, %f7657;
	max.f32 	%f9704, %f9703, %f7658;
	max.f32 	%f9705, %f9702, %f7659;
	max.f32 	%f9706, %f9705, %f7660;
	max.f32 	%f9707, %f9704, %f7661;
	max.f32 	%f9708, %f9707, %f7662;
	max.f32 	%f9709, %f9706, %f7663;
	max.f32 	%f9710, %f9709, %f7664;
	max.f32 	%f9711, %f9708, %f7665;
	max.f32 	%f9712, %f9711, %f7666;
	max.f32 	%f9713, %f9710, %f7667;
	max.f32 	%f9714, %f9713, %f7668;
	max.f32 	%f9715, %f9712, %f7669;
	max.f32 	%f9716, %f9715, %f7670;
	max.f32 	%f9717, %f9714, %f7671;
	max.f32 	%f9718, %f9717, %f7672;
	.loc	2 188 40                        // standard.py:188:40 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	mov.b32 	%r407, %f9716;
	shfl.sync.bfly.b32	%r408, %r407, 2, 31, -1;
	mov.b32 	%f9719, %r408;
	.loc	2 167 27                        // standard.py:167:27 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	max.f32 	%f9720, %f9716, %f9719;
	.loc	2 188 40                        // standard.py:188:40 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	mov.b32 	%r409, %f9720;
	shfl.sync.bfly.b32	%r410, %r409, 1, 31, -1;
	mov.b32 	%f9721, %r410;
	.loc	2 167 27                        // standard.py:167:27 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	max.f32 	%f9722, %f9720, %f9721;
	.loc	2 188 40                        // standard.py:188:40 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	mov.b32 	%r411, %f9718;
	shfl.sync.bfly.b32	%r412, %r411, 2, 31, -1;
	mov.b32 	%f9723, %r412;
	.loc	2 167 27                        // standard.py:167:27 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	max.f32 	%f9724, %f9718, %f9723;
	.loc	2 188 40                        // standard.py:188:40 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	mov.b32 	%r413, %f9724;
	shfl.sync.bfly.b32	%r414, %r413, 1, 31, -1;
	mov.b32 	%f9725, %r414;
	.loc	2 167 27                        // standard.py:167:27 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	max.f32 	%f9726, %f9724, %f9725;
$L__tmp14:
	.loc	1 195 55                        // hopper-fa-ws-pipelined-pingpong.py:195:55
	mul.f32 	%f9727, %f1, %f9722;
	mul.f32 	%f9728, %f1, %f9726;
	.loc	1 195 39                        // hopper-fa-ws-pipelined-pingpong.py:195:39
	max.f32 	%f11348, %f11151, %f9727;
	max.f32 	%f11349, %f11150, %f9728;
	.loc	1 196 37                        // hopper-fa-ws-pipelined-pingpong.py:196:37
	neg.f32 	%f9729, %f11348;
	fma.rn.f32 	%f9730, %f1, %f7609, %f9729;
	fma.rn.f32 	%f9731, %f1, %f7610, %f9729;
	neg.f32 	%f9732, %f11349;
	fma.rn.f32 	%f9733, %f1, %f7611, %f9732;
	fma.rn.f32 	%f9734, %f1, %f7612, %f9732;
	fma.rn.f32 	%f9735, %f1, %f7613, %f9729;
	fma.rn.f32 	%f9736, %f1, %f7614, %f9729;
	fma.rn.f32 	%f9737, %f1, %f7615, %f9732;
	fma.rn.f32 	%f9738, %f1, %f7616, %f9732;
	fma.rn.f32 	%f9739, %f1, %f7617, %f9729;
	fma.rn.f32 	%f9740, %f1, %f7618, %f9729;
	fma.rn.f32 	%f9741, %f1, %f7619, %f9732;
	fma.rn.f32 	%f9742, %f1, %f7620, %f9732;
	fma.rn.f32 	%f9743, %f1, %f7621, %f9729;
	fma.rn.f32 	%f9744, %f1, %f7622, %f9729;
	fma.rn.f32 	%f9745, %f1, %f7623, %f9732;
	fma.rn.f32 	%f9746, %f1, %f7624, %f9732;
	fma.rn.f32 	%f9747, %f1, %f7625, %f9729;
	fma.rn.f32 	%f9748, %f1, %f7626, %f9729;
	fma.rn.f32 	%f9749, %f1, %f7627, %f9732;
	fma.rn.f32 	%f9750, %f1, %f7628, %f9732;
	fma.rn.f32 	%f9751, %f1, %f7629, %f9729;
	fma.rn.f32 	%f9752, %f1, %f7630, %f9729;
	fma.rn.f32 	%f9753, %f1, %f7631, %f9732;
	fma.rn.f32 	%f9754, %f1, %f7632, %f9732;
	fma.rn.f32 	%f9755, %f1, %f7633, %f9729;
	fma.rn.f32 	%f9756, %f1, %f7634, %f9729;
	fma.rn.f32 	%f9757, %f1, %f7635, %f9732;
	fma.rn.f32 	%f9758, %f1, %f7636, %f9732;
	fma.rn.f32 	%f9759, %f1, %f7637, %f9729;
	fma.rn.f32 	%f9760, %f1, %f7638, %f9729;
	fma.rn.f32 	%f9761, %f1, %f7639, %f9732;
	fma.rn.f32 	%f9762, %f1, %f7640, %f9732;
	fma.rn.f32 	%f9763, %f1, %f7641, %f9729;
	fma.rn.f32 	%f9764, %f1, %f7642, %f9729;
	fma.rn.f32 	%f9765, %f1, %f7643, %f9732;
	fma.rn.f32 	%f9766, %f1, %f7644, %f9732;
	fma.rn.f32 	%f9767, %f1, %f7645, %f9729;
	fma.rn.f32 	%f9768, %f1, %f7646, %f9729;
	fma.rn.f32 	%f9769, %f1, %f7647, %f9732;
	fma.rn.f32 	%f9770, %f1, %f7648, %f9732;
	fma.rn.f32 	%f9771, %f1, %f7649, %f9729;
	fma.rn.f32 	%f9772, %f1, %f7650, %f9729;
	fma.rn.f32 	%f9773, %f1, %f7651, %f9732;
	fma.rn.f32 	%f9774, %f1, %f7652, %f9732;
	fma.rn.f32 	%f9775, %f1, %f7653, %f9729;
	fma.rn.f32 	%f9776, %f1, %f7654, %f9729;
	fma.rn.f32 	%f9777, %f1, %f7655, %f9732;
	fma.rn.f32 	%f9778, %f1, %f7656, %f9732;
	fma.rn.f32 	%f9779, %f1, %f7657, %f9729;
	fma.rn.f32 	%f9780, %f1, %f7658, %f9729;
	fma.rn.f32 	%f9781, %f1, %f7659, %f9732;
	fma.rn.f32 	%f9782, %f1, %f7660, %f9732;
	fma.rn.f32 	%f9783, %f1, %f7661, %f9729;
	fma.rn.f32 	%f9784, %f1, %f7662, %f9729;
	fma.rn.f32 	%f9785, %f1, %f7663, %f9732;
	fma.rn.f32 	%f9786, %f1, %f7664, %f9732;
	fma.rn.f32 	%f9787, %f1, %f7665, %f9729;
	fma.rn.f32 	%f9788, %f1, %f7666, %f9729;
	fma.rn.f32 	%f9789, %f1, %f7667, %f9732;
	fma.rn.f32 	%f9790, %f1, %f7668, %f9732;
	fma.rn.f32 	%f9791, %f1, %f7669, %f9729;
	fma.rn.f32 	%f9792, %f1, %f7670, %f9729;
	fma.rn.f32 	%f9793, %f1, %f7671, %f9732;
	fma.rn.f32 	%f9794, %f1, %f7672, %f9732;
	.loc	1 197 33                        // hopper-fa-ws-pipelined-pingpong.py:197:33
	ex2.approx.ftz.f32 	%f11412, %f9730;
	ex2.approx.ftz.f32 	%f11413, %f9731;
	ex2.approx.ftz.f32 	%f11410, %f9733;
	ex2.approx.ftz.f32 	%f11411, %f9734;
	ex2.approx.ftz.f32 	%f11408, %f9735;
	ex2.approx.ftz.f32 	%f11409, %f9736;
	ex2.approx.ftz.f32 	%f11406, %f9737;
	ex2.approx.ftz.f32 	%f11407, %f9738;
	ex2.approx.ftz.f32 	%f11404, %f9739;
	ex2.approx.ftz.f32 	%f11405, %f9740;
	ex2.approx.ftz.f32 	%f11402, %f9741;
	ex2.approx.ftz.f32 	%f11403, %f9742;
	ex2.approx.ftz.f32 	%f11400, %f9743;
	ex2.approx.ftz.f32 	%f11401, %f9744;
	ex2.approx.ftz.f32 	%f11398, %f9745;
	ex2.approx.ftz.f32 	%f11399, %f9746;
	ex2.approx.ftz.f32 	%f11396, %f9747;
	ex2.approx.ftz.f32 	%f11397, %f9748;
	ex2.approx.ftz.f32 	%f11394, %f9749;
	ex2.approx.ftz.f32 	%f11395, %f9750;
	ex2.approx.ftz.f32 	%f11392, %f9751;
	ex2.approx.ftz.f32 	%f11393, %f9752;
	ex2.approx.ftz.f32 	%f11390, %f9753;
	ex2.approx.ftz.f32 	%f11391, %f9754;
	ex2.approx.ftz.f32 	%f11388, %f9755;
	ex2.approx.ftz.f32 	%f11389, %f9756;
	ex2.approx.ftz.f32 	%f11386, %f9757;
	ex2.approx.ftz.f32 	%f11387, %f9758;
	ex2.approx.ftz.f32 	%f11384, %f9759;
	ex2.approx.ftz.f32 	%f11385, %f9760;
	ex2.approx.ftz.f32 	%f11382, %f9761;
	ex2.approx.ftz.f32 	%f11383, %f9762;
	ex2.approx.ftz.f32 	%f11380, %f9763;
	ex2.approx.ftz.f32 	%f11381, %f9764;
	ex2.approx.ftz.f32 	%f11378, %f9765;
	ex2.approx.ftz.f32 	%f11379, %f9766;
	ex2.approx.ftz.f32 	%f11376, %f9767;
	ex2.approx.ftz.f32 	%f11377, %f9768;
	ex2.approx.ftz.f32 	%f11374, %f9769;
	ex2.approx.ftz.f32 	%f11375, %f9770;
	ex2.approx.ftz.f32 	%f11372, %f9771;
	ex2.approx.ftz.f32 	%f11373, %f9772;
	ex2.approx.ftz.f32 	%f11370, %f9773;
	ex2.approx.ftz.f32 	%f11371, %f9774;
	ex2.approx.ftz.f32 	%f11368, %f9775;
	ex2.approx.ftz.f32 	%f11369, %f9776;
	ex2.approx.ftz.f32 	%f11366, %f9777;
	ex2.approx.ftz.f32 	%f11367, %f9778;
	ex2.approx.ftz.f32 	%f11364, %f9779;
	ex2.approx.ftz.f32 	%f11365, %f9780;
	ex2.approx.ftz.f32 	%f11362, %f9781;
	ex2.approx.ftz.f32 	%f11363, %f9782;
	ex2.approx.ftz.f32 	%f11360, %f9783;
	ex2.approx.ftz.f32 	%f11361, %f9784;
	ex2.approx.ftz.f32 	%f11358, %f9785;
	ex2.approx.ftz.f32 	%f11359, %f9786;
	ex2.approx.ftz.f32 	%f11356, %f9787;
	ex2.approx.ftz.f32 	%f11357, %f9788;
	ex2.approx.ftz.f32 	%f11354, %f9789;
	ex2.approx.ftz.f32 	%f11355, %f9790;
	ex2.approx.ftz.f32 	%f11352, %f9791;
	ex2.approx.ftz.f32 	%f11353, %f9792;
	ex2.approx.ftz.f32 	%f11350, %f9793;
	ex2.approx.ftz.f32 	%f11351, %f9794;
	.loc	1 199 43                        // hopper-fa-ws-pipelined-pingpong.py:199:43
	sub.f32 	%f9795, %f11151, %f11348;
	sub.f32 	%f9796, %f11150, %f11349;
	.loc	1 199 37                        // hopper-fa-ws-pipelined-pingpong.py:199:37
	ex2.approx.ftz.f32 	%f9797, %f9795;
	ex2.approx.ftz.f32 	%f9798, %f9796;
$L__tmp15:
	.loc	2 260 15                        // standard.py:260:15 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	add.f32 	%f9799, %f11412, %f11413;
	add.f32 	%f9800, %f11410, %f11411;
	add.f32 	%f9801, %f9799, %f11408;
	add.f32 	%f9802, %f9801, %f11409;
	add.f32 	%f9803, %f9800, %f11406;
	add.f32 	%f9804, %f9803, %f11407;
	add.f32 	%f9805, %f9802, %f11404;
	add.f32 	%f9806, %f9805, %f11405;
	add.f32 	%f9807, %f9804, %f11402;
	add.f32 	%f9808, %f9807, %f11403;
	add.f32 	%f9809, %f9806, %f11400;
	add.f32 	%f9810, %f9809, %f11401;
	add.f32 	%f9811, %f9808, %f11398;
	add.f32 	%f9812, %f9811, %f11399;
	add.f32 	%f9813, %f9810, %f11396;
	add.f32 	%f9814, %f9813, %f11397;
	add.f32 	%f9815, %f9812, %f11394;
	add.f32 	%f9816, %f9815, %f11395;
	add.f32 	%f9817, %f9814, %f11392;
	add.f32 	%f9818, %f9817, %f11393;
	add.f32 	%f9819, %f9816, %f11390;
	add.f32 	%f9820, %f9819, %f11391;
	add.f32 	%f9821, %f9818, %f11388;
	add.f32 	%f9822, %f9821, %f11389;
	add.f32 	%f9823, %f9820, %f11386;
	add.f32 	%f9824, %f9823, %f11387;
	add.f32 	%f9825, %f9822, %f11384;
	add.f32 	%f9826, %f9825, %f11385;
	add.f32 	%f9827, %f9824, %f11382;
	add.f32 	%f9828, %f9827, %f11383;
	add.f32 	%f9829, %f9826, %f11380;
	add.f32 	%f9830, %f9829, %f11381;
	add.f32 	%f9831, %f9828, %f11378;
	add.f32 	%f9832, %f9831, %f11379;
	add.f32 	%f9833, %f9830, %f11376;
	add.f32 	%f9834, %f9833, %f11377;
	add.f32 	%f9835, %f9832, %f11374;
	add.f32 	%f9836, %f9835, %f11375;
	add.f32 	%f9837, %f9834, %f11372;
	add.f32 	%f9838, %f9837, %f11373;
	add.f32 	%f9839, %f9836, %f11370;
	add.f32 	%f9840, %f9839, %f11371;
	add.f32 	%f9841, %f9838, %f11368;
	add.f32 	%f9842, %f9841, %f11369;
	add.f32 	%f9843, %f9840, %f11366;
	add.f32 	%f9844, %f9843, %f11367;
	add.f32 	%f9845, %f9842, %f11364;
	add.f32 	%f9846, %f9845, %f11365;
	add.f32 	%f9847, %f9844, %f11362;
	add.f32 	%f9848, %f9847, %f11363;
	add.f32 	%f9849, %f9846, %f11360;
	add.f32 	%f9850, %f9849, %f11361;
	add.f32 	%f9851, %f9848, %f11358;
	add.f32 	%f9852, %f9851, %f11359;
	add.f32 	%f9853, %f9850, %f11356;
	add.f32 	%f9854, %f9853, %f11357;
	add.f32 	%f9855, %f9852, %f11354;
	add.f32 	%f9856, %f9855, %f11355;
	add.f32 	%f9857, %f9854, %f11352;
	add.f32 	%f9858, %f9857, %f11353;
	add.f32 	%f9859, %f9856, %f11350;
	add.f32 	%f9860, %f9859, %f11351;
	.loc	2 290 36                        // standard.py:290:36 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	mov.b32 	%r415, %f9858;
	shfl.sync.bfly.b32	%r416, %r415, 2, 31, -1;
	mov.b32 	%f9861, %r416;
	.loc	2 260 15                        // standard.py:260:15 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	add.f32 	%f9862, %f9858, %f9861;
	.loc	2 290 36                        // standard.py:290:36 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	mov.b32 	%r417, %f9862;
	shfl.sync.bfly.b32	%r418, %r417, 1, 31, -1;
	mov.b32 	%f9863, %r418;
	.loc	2 260 15                        // standard.py:260:15 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	add.f32 	%f9864, %f9862, %f9863;
	.loc	2 290 36                        // standard.py:290:36 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	mov.b32 	%r419, %f9860;
	shfl.sync.bfly.b32	%r420, %r419, 2, 31, -1;
	mov.b32 	%f9865, %r420;
	.loc	2 260 15                        // standard.py:260:15 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	add.f32 	%f9866, %f9860, %f9865;
	.loc	2 290 36                        // standard.py:290:36 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	mov.b32 	%r421, %f9866;
	shfl.sync.bfly.b32	%r422, %r421, 1, 31, -1;
	mov.b32 	%f9867, %r422;
	.loc	2 260 15                        // standard.py:260:15 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	add.f32 	%f9868, %f9866, %f9867;
$L__tmp16:
	.loc	1 202 36                        // hopper-fa-ws-pipelined-pingpong.py:202:36
	fma.rn.f32 	%f11346, %f11346, %f9797, %f9864;
	fma.rn.f32 	%f11347, %f11347, %f9798, %f9868;
	.loc	1 207 44                        // hopper-fa-ws-pipelined-pingpong.py:207:44
	// begin inline asm
	// wait for regs: %f11217,%f11216,%f11215,%f11214,%f11213,%f11212,%f11211,%f11210,%f11209,%f11208,%f11207,%f11206,%f11205,%f11204,%f11203,%f11202,%f11201,%f11200,%f11199,%f11198,%f11197,%f11196,%f11195,%f11194,%f11193,%f11192,%f11191,%f11190,%f11189,%f11188,%f11187,%f11186,%f11185,%f11184,%f11183,%f11182,%f11181,%f11180,%f11179,%f11178,%f11177,%f11176,%f11175,%f11174,%f11173,%f11172,%f11171,%f11170,%f11169,%f11168,%f11167,%f11166,%f11165,%f11164,%f11163,%f11162,%f11161,%f11160,%f11159,%f11158,%f11157,%f11156,%f11155,%f11154
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 209 45                        // hopper-fa-ws-pipelined-pingpong.py:209:45
	add.s32 	%r384, %r402, 196656;
	.loc	1 209 56                        // hopper-fa-ws-pipelined-pingpong.py:209:56
	// begin inline asm
	barrier.sync.aligned 2, 128 ;
	// end inline asm
	// begin inline asm
	@%p89 mbarrier.arrive.shared::cta.b64 _, [%r384], 1;
	// end inline asm
	.loc	1 210 28                        // hopper-fa-ws-pipelined-pingpong.py:210:28
	mul.f32 	%f11217, %f9797, %f11217;
	mul.f32 	%f11216, %f9797, %f11216;
	mul.f32 	%f11215, %f9798, %f11215;
	mul.f32 	%f11214, %f9798, %f11214;
	mul.f32 	%f11213, %f9797, %f11213;
	mul.f32 	%f11212, %f9797, %f11212;
	mul.f32 	%f11211, %f9798, %f11211;
	mul.f32 	%f11210, %f9798, %f11210;
	mul.f32 	%f11209, %f9797, %f11209;
	mul.f32 	%f11208, %f9797, %f11208;
	mul.f32 	%f11207, %f9798, %f11207;
	mul.f32 	%f11206, %f9798, %f11206;
	mul.f32 	%f11205, %f9797, %f11205;
	mul.f32 	%f11204, %f9797, %f11204;
	mul.f32 	%f11203, %f9798, %f11203;
	mul.f32 	%f11202, %f9798, %f11202;
	mul.f32 	%f11201, %f9797, %f11201;
	mul.f32 	%f11200, %f9797, %f11200;
	mul.f32 	%f11199, %f9798, %f11199;
	mul.f32 	%f11198, %f9798, %f11198;
	mul.f32 	%f11197, %f9797, %f11197;
	mul.f32 	%f11196, %f9797, %f11196;
	mul.f32 	%f11195, %f9798, %f11195;
	mul.f32 	%f11194, %f9798, %f11194;
	mul.f32 	%f11193, %f9797, %f11193;
	mul.f32 	%f11192, %f9797, %f11192;
	mul.f32 	%f11191, %f9798, %f11191;
	mul.f32 	%f11190, %f9798, %f11190;
	mul.f32 	%f11189, %f9797, %f11189;
	mul.f32 	%f11188, %f9797, %f11188;
	mul.f32 	%f11187, %f9798, %f11187;
	mul.f32 	%f11186, %f9798, %f11186;
	mul.f32 	%f11185, %f9797, %f11185;
	mul.f32 	%f11184, %f9797, %f11184;
	mul.f32 	%f11183, %f9798, %f11183;
	mul.f32 	%f11182, %f9798, %f11182;
	mul.f32 	%f11181, %f9797, %f11181;
	mul.f32 	%f11180, %f9797, %f11180;
	mul.f32 	%f11179, %f9798, %f11179;
	mul.f32 	%f11178, %f9798, %f11178;
	mul.f32 	%f11177, %f9797, %f11177;
	mul.f32 	%f11176, %f9797, %f11176;
	mul.f32 	%f11175, %f9798, %f11175;
	mul.f32 	%f11174, %f9798, %f11174;
	mul.f32 	%f11173, %f9797, %f11173;
	mul.f32 	%f11172, %f9797, %f11172;
	mul.f32 	%f11171, %f9798, %f11171;
	mul.f32 	%f11170, %f9798, %f11170;
	mul.f32 	%f11169, %f9797, %f11169;
	mul.f32 	%f11168, %f9797, %f11168;
	mul.f32 	%f11167, %f9798, %f11167;
	mul.f32 	%f11166, %f9798, %f11166;
	mul.f32 	%f11165, %f9797, %f11165;
	mul.f32 	%f11164, %f9797, %f11164;
	mul.f32 	%f11163, %f9798, %f11163;
	mul.f32 	%f11162, %f9798, %f11162;
	mul.f32 	%f11161, %f9797, %f11161;
	mul.f32 	%f11160, %f9797, %f11160;
	mul.f32 	%f11159, %f9798, %f11159;
	mul.f32 	%f11158, %f9798, %f11158;
	mul.f32 	%f11157, %f9797, %f11157;
	mul.f32 	%f11156, %f9797, %f11156;
	mul.f32 	%f11155, %f9798, %f11155;
	mul.f32 	%f11154, %f9798, %f11154;
	.loc	1 168 48                        // hopper-fa-ws-pipelined-pingpong.py:168:48
	add.s32 	%r635, %r635, 128;
	setp.lt.s32 	%p93, %r635, %r47;
	add.s32 	%r632, %r632, 1;
	mov.b32 	%f11150, %f11349;
	mov.b32 	%f11151, %f11348;
	@%p93 bra 	$L__BB0_8;
$L__BB0_9:                              // %._crit_edge1828
                                        //   in Loop: Header=BB0_2 Depth=1
	.loc	1 216 45                        // hopper-fa-ws-pipelined-pingpong.py:216:45
	setp.eq.s32 	%p104, %r637, 0;
	.loc	1 216 33                        // hopper-fa-ws-pipelined-pingpong.py:216:33
	selp.b32 	%r458, 1, 0, %p104;
	xor.b32 	%r424, %r636, %r458;
	.loc	1 217 37                        // hopper-fa-ws-pipelined-pingpong.py:217:37
	shl.b32 	%r459, %r637, 3;
	add.s32 	%r461, %r48, %r459;
	add.s32 	%r423, %r461, 196672;
	.loc	1 217 48                        // hopper-fa-ws-pipelined-pingpong.py:217:48
	// begin inline asm
	barrier.sync.aligned 2, 128 ;
	// end inline asm
	// begin inline asm
	{                                                           
	@!%p61 bra.uni skipWait;                                      
	.reg .pred P1;                                              
	waitLoop:                                                   
	mbarrier.try_wait.parity.shared.b64 P1, [%r423], %r424;           
	@!P1 bra.uni waitLoop;                                      
	skipWait:                                                   
	}                                                           
	
	// end inline asm
	.loc	1 219 21                        // hopper-fa-ws-pipelined-pingpong.py:219:21
	cvt.rn.f16x2.f32 	%r425, %f11413, %f11412;
	cvt.rn.f16x2.f32 	%r426, %f11411, %f11410;
	cvt.rn.f16x2.f32 	%r427, %f11409, %f11408;
	cvt.rn.f16x2.f32 	%r428, %f11407, %f11406;
	cvt.rn.f16x2.f32 	%r429, %f11405, %f11404;
	cvt.rn.f16x2.f32 	%r430, %f11403, %f11402;
	cvt.rn.f16x2.f32 	%r431, %f11401, %f11400;
	cvt.rn.f16x2.f32 	%r432, %f11399, %f11398;
	cvt.rn.f16x2.f32 	%r433, %f11397, %f11396;
	cvt.rn.f16x2.f32 	%r434, %f11395, %f11394;
	cvt.rn.f16x2.f32 	%r435, %f11393, %f11392;
	cvt.rn.f16x2.f32 	%r436, %f11391, %f11390;
	cvt.rn.f16x2.f32 	%r437, %f11389, %f11388;
	cvt.rn.f16x2.f32 	%r438, %f11387, %f11386;
	cvt.rn.f16x2.f32 	%r439, %f11385, %f11384;
	cvt.rn.f16x2.f32 	%r440, %f11383, %f11382;
	cvt.rn.f16x2.f32 	%r441, %f11381, %f11380;
	cvt.rn.f16x2.f32 	%r442, %f11379, %f11378;
	cvt.rn.f16x2.f32 	%r443, %f11377, %f11376;
	cvt.rn.f16x2.f32 	%r444, %f11375, %f11374;
	cvt.rn.f16x2.f32 	%r445, %f11373, %f11372;
	cvt.rn.f16x2.f32 	%r446, %f11371, %f11370;
	cvt.rn.f16x2.f32 	%r447, %f11369, %f11368;
	cvt.rn.f16x2.f32 	%r448, %f11367, %f11366;
	cvt.rn.f16x2.f32 	%r449, %f11365, %f11364;
	cvt.rn.f16x2.f32 	%r450, %f11363, %f11362;
	cvt.rn.f16x2.f32 	%r451, %f11361, %f11360;
	cvt.rn.f16x2.f32 	%r452, %f11359, %f11358;
	cvt.rn.f16x2.f32 	%r453, %f11357, %f11356;
	cvt.rn.f16x2.f32 	%r454, %f11355, %f11354;
	cvt.rn.f16x2.f32 	%r455, %f11353, %f11352;
	cvt.rn.f16x2.f32 	%r456, %f11351, %f11350;
	.loc	1 220 43                        // hopper-fa-ws-pipelined-pingpong.py:220:43
	shl.b32 	%r462, %r637, 15;
	add.s32 	%r463, %r48, %r462;
	add.s32 	%r464, %r463, 65536;
	.loc	1 220 54                        // hopper-fa-ws-pipelined-pingpong.py:220:54
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	bfe.u32 	%r465, %r464, 4, 14;
	cvt.u64.u32 	%rd143, %r465;
	or.b64 	%rd135, %rd143, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11217,%f11216,%f11215,%f11214,%f11213,%f11212,%f11211,%f11210,%f11209,%f11208,%f11207,%f11206,%f11205,%f11204,%f11203,%f11202,%f11201,%f11200,%f11199,%f11198,%f11197,%f11196,%f11195,%f11194,%f11193,%f11192,%f11191,%f11190,%f11189,%f11188,%f11187,%f11186,%f11185,%f11184,%f11183,%f11182,%f11181,%f11180,%f11179,%f11178,%f11177,%f11176,%f11175,%f11174,%f11173,%f11172,%f11171,%f11170,%f11169,%f11168,%f11167,%f11166,%f11165,%f11164,%f11163,%f11162,%f11161,%f11160,%f11159,%f11158,%f11157,%f11156,%f11155,%f11154}, {%r425,%r426,%r427,%r428}, %rd135, %p61, 1, 1, 1;
	// end inline asm
	add.s64 	%rd136, %rd143, 4611686293372403840;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11217,%f11216,%f11215,%f11214,%f11213,%f11212,%f11211,%f11210,%f11209,%f11208,%f11207,%f11206,%f11205,%f11204,%f11203,%f11202,%f11201,%f11200,%f11199,%f11198,%f11197,%f11196,%f11195,%f11194,%f11193,%f11192,%f11191,%f11190,%f11189,%f11188,%f11187,%f11186,%f11185,%f11184,%f11183,%f11182,%f11181,%f11180,%f11179,%f11178,%f11177,%f11176,%f11175,%f11174,%f11173,%f11172,%f11171,%f11170,%f11169,%f11168,%f11167,%f11166,%f11165,%f11164,%f11163,%f11162,%f11161,%f11160,%f11159,%f11158,%f11157,%f11156,%f11155,%f11154}, {%r429,%r430,%r431,%r432}, %rd136, %p61, 1, 1, 1;
	// end inline asm
	add.s64 	%rd137, %rd143, 4611686293372403968;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11217,%f11216,%f11215,%f11214,%f11213,%f11212,%f11211,%f11210,%f11209,%f11208,%f11207,%f11206,%f11205,%f11204,%f11203,%f11202,%f11201,%f11200,%f11199,%f11198,%f11197,%f11196,%f11195,%f11194,%f11193,%f11192,%f11191,%f11190,%f11189,%f11188,%f11187,%f11186,%f11185,%f11184,%f11183,%f11182,%f11181,%f11180,%f11179,%f11178,%f11177,%f11176,%f11175,%f11174,%f11173,%f11172,%f11171,%f11170,%f11169,%f11168,%f11167,%f11166,%f11165,%f11164,%f11163,%f11162,%f11161,%f11160,%f11159,%f11158,%f11157,%f11156,%f11155,%f11154}, {%r433,%r434,%r435,%r436}, %rd137, %p61, 1, 1, 1;
	// end inline asm
	add.s64 	%rd138, %rd143, 4611686293372404096;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11217,%f11216,%f11215,%f11214,%f11213,%f11212,%f11211,%f11210,%f11209,%f11208,%f11207,%f11206,%f11205,%f11204,%f11203,%f11202,%f11201,%f11200,%f11199,%f11198,%f11197,%f11196,%f11195,%f11194,%f11193,%f11192,%f11191,%f11190,%f11189,%f11188,%f11187,%f11186,%f11185,%f11184,%f11183,%f11182,%f11181,%f11180,%f11179,%f11178,%f11177,%f11176,%f11175,%f11174,%f11173,%f11172,%f11171,%f11170,%f11169,%f11168,%f11167,%f11166,%f11165,%f11164,%f11163,%f11162,%f11161,%f11160,%f11159,%f11158,%f11157,%f11156,%f11155,%f11154}, {%r437,%r438,%r439,%r440}, %rd138, %p61, 1, 1, 1;
	// end inline asm
	add.s64 	%rd139, %rd143, 4611686293372404224;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11217,%f11216,%f11215,%f11214,%f11213,%f11212,%f11211,%f11210,%f11209,%f11208,%f11207,%f11206,%f11205,%f11204,%f11203,%f11202,%f11201,%f11200,%f11199,%f11198,%f11197,%f11196,%f11195,%f11194,%f11193,%f11192,%f11191,%f11190,%f11189,%f11188,%f11187,%f11186,%f11185,%f11184,%f11183,%f11182,%f11181,%f11180,%f11179,%f11178,%f11177,%f11176,%f11175,%f11174,%f11173,%f11172,%f11171,%f11170,%f11169,%f11168,%f11167,%f11166,%f11165,%f11164,%f11163,%f11162,%f11161,%f11160,%f11159,%f11158,%f11157,%f11156,%f11155,%f11154}, {%r441,%r442,%r443,%r444}, %rd139, %p61, 1, 1, 1;
	// end inline asm
	add.s64 	%rd140, %rd143, 4611686293372404352;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11217,%f11216,%f11215,%f11214,%f11213,%f11212,%f11211,%f11210,%f11209,%f11208,%f11207,%f11206,%f11205,%f11204,%f11203,%f11202,%f11201,%f11200,%f11199,%f11198,%f11197,%f11196,%f11195,%f11194,%f11193,%f11192,%f11191,%f11190,%f11189,%f11188,%f11187,%f11186,%f11185,%f11184,%f11183,%f11182,%f11181,%f11180,%f11179,%f11178,%f11177,%f11176,%f11175,%f11174,%f11173,%f11172,%f11171,%f11170,%f11169,%f11168,%f11167,%f11166,%f11165,%f11164,%f11163,%f11162,%f11161,%f11160,%f11159,%f11158,%f11157,%f11156,%f11155,%f11154}, {%r445,%r446,%r447,%r448}, %rd140, %p61, 1, 1, 1;
	// end inline asm
	add.s64 	%rd141, %rd143, 4611686293372404480;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11217,%f11216,%f11215,%f11214,%f11213,%f11212,%f11211,%f11210,%f11209,%f11208,%f11207,%f11206,%f11205,%f11204,%f11203,%f11202,%f11201,%f11200,%f11199,%f11198,%f11197,%f11196,%f11195,%f11194,%f11193,%f11192,%f11191,%f11190,%f11189,%f11188,%f11187,%f11186,%f11185,%f11184,%f11183,%f11182,%f11181,%f11180,%f11179,%f11178,%f11177,%f11176,%f11175,%f11174,%f11173,%f11172,%f11171,%f11170,%f11169,%f11168,%f11167,%f11166,%f11165,%f11164,%f11163,%f11162,%f11161,%f11160,%f11159,%f11158,%f11157,%f11156,%f11155,%f11154}, {%r449,%r450,%r451,%r452}, %rd141, %p61, 1, 1, 1;
	// end inline asm
	add.s64 	%rd142, %rd143, 4611686293372404608;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%f11217,%f11216,%f11215,%f11214,%f11213,%f11212,%f11211,%f11210,%f11209,%f11208,%f11207,%f11206,%f11205,%f11204,%f11203,%f11202,%f11201,%f11200,%f11199,%f11198,%f11197,%f11196,%f11195,%f11194,%f11193,%f11192,%f11191,%f11190,%f11189,%f11188,%f11187,%f11186,%f11185,%f11184,%f11183,%f11182,%f11181,%f11180,%f11179,%f11178,%f11177,%f11176,%f11175,%f11174,%f11173,%f11172,%f11171,%f11170,%f11169,%f11168,%f11167,%f11166,%f11165,%f11164,%f11163,%f11162,%f11161,%f11160,%f11159,%f11158,%f11157,%f11156,%f11155,%f11154}, {%r453,%r454,%r455,%r456}, %rd142, %p61, 1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	.loc	1 222 40                        // hopper-fa-ws-pipelined-pingpong.py:222:40
	// begin inline asm
	// wait for regs: %f11217,%f11216,%f11215,%f11214,%f11213,%f11212,%f11211,%f11210,%f11209,%f11208,%f11207,%f11206,%f11205,%f11204,%f11203,%f11202,%f11201,%f11200,%f11199,%f11198,%f11197,%f11196,%f11195,%f11194,%f11193,%f11192,%f11191,%f11190,%f11189,%f11188,%f11187,%f11186,%f11185,%f11184,%f11183,%f11182,%f11181,%f11180,%f11179,%f11178,%f11177,%f11176,%f11175,%f11174,%f11173,%f11172,%f11171,%f11170,%f11169,%f11168,%f11167,%f11166,%f11165,%f11164,%f11163,%f11162,%f11161,%f11160,%f11159,%f11158,%f11157,%f11156,%f11155,%f11154
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 224 41                        // hopper-fa-ws-pipelined-pingpong.py:224:41
	add.s32 	%r457, %r461, 196656;
	.loc	1 224 52                        // hopper-fa-ws-pipelined-pingpong.py:224:52
	// begin inline asm
	barrier.sync.aligned 2, 128 ;
	// end inline asm
	// begin inline asm
	@%p89 mbarrier.arrive.shared::cta.b64 _, [%r457], 1;
	// end inline asm
	.loc	1 227 36                        // hopper-fa-ws-pipelined-pingpong.py:227:36
	mov.u32 	%r466, %ctaid.x;
	.loc	1 228 35                        // hopper-fa-ws-pipelined-pingpong.py:228:35
	mov.u32 	%r467, %ctaid.y;
	.loc	1 232 47                        // hopper-fa-ws-pipelined-pingpong.py:232:47
	shl.b32 	%r17, %r466, 7;
	.loc	1 232 37                        // hopper-fa-ws-pipelined-pingpong.py:232:37
	mul.lo.s32 	%r18, %r467, %r47;
	.loc	1 234 32                        // hopper-fa-ws-pipelined-pingpong.py:234:32
	setp.lt.f32 	%p105, %f11346, 0f00800000;
	mul.f32 	%f11021, %f11346, 0f4B000000;
	selp.f32 	%f532, %f11021, %f11346, %p105;
	selp.f32 	%f11022, 0fC1B80000, 0f00000000, %p105;
	mov.b32 	%r468, %f532;
	add.s32 	%r469, %r468, -1060439283;
	and.b32 	%r470, %r469, -8388608;
	sub.s32 	%r471, %r468, %r470;
	mov.b32 	%f11023, %r471;
	cvt.rn.f32.s32 	%f11024, %r470;
	mov.b32 	%f11025, 0f34000000;
	fma.rn.ftz.f32 	%f11026, %f11024, %f11025, %f11022;
	add.f32 	%f11027, %f11023, 0fBF800000;
	mov.b32 	%f11028, 0fBE2C7F30;
	mov.b32 	%f11029, 0f3DC6B27F;
	fma.rn.ftz.f32 	%f11030, %f11029, %f11027, %f11028;
	mov.b32 	%f11031, 0f3E2FCF2A;
	fma.rn.ftz.f32 	%f11032, %f11030, %f11027, %f11031;
	mov.b32 	%f11033, 0fBE374E43;
	fma.rn.ftz.f32 	%f11034, %f11032, %f11027, %f11033;
	mov.b32 	%f11035, 0f3E520BF4;
	fma.rn.ftz.f32 	%f11036, %f11034, %f11027, %f11035;
	mov.b32 	%f11037, 0fBE763C8B;
	fma.rn.ftz.f32 	%f11038, %f11036, %f11027, %f11037;
	mov.b32 	%f11039, 0f3E93BF99;
	fma.rn.ftz.f32 	%f11040, %f11038, %f11027, %f11039;
	mov.b32 	%f11041, 0fBEB8AA49;
	fma.rn.ftz.f32 	%f11042, %f11040, %f11027, %f11041;
	mov.b32 	%f11043, 0f3EF6384A;
	fma.rn.ftz.f32 	%f11044, %f11042, %f11027, %f11043;
	mov.b32 	%f11045, 0fBF38AA3B;
	fma.rn.ftz.f32 	%f11046, %f11044, %f11027, %f11045;
	mul.f32 	%f11047, %f11027, %f11046;
	mul.f32 	%f11048, %f11027, %f11047;
	mov.b32 	%f11049, 0f3FB8AA3B;
	fma.rn.ftz.f32 	%f11050, %f11027, %f11049, %f11048;
	add.f32 	%f11414, %f11026, %f11050;
	setp.lt.u32 	%p106, %r468, 2139095040;
	mov.b32 	%f11051, 0f7F800000;
	@%p106 bra 	$L__BB0_11;
// %bb.10:                              // %__nv_fmaf_rn.exit.i.i1389
                                        //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 32                          // hopper-fa-ws-pipelined-pingpong.py:0:32
	fma.rn.ftz.f32 	%f11414, %f532, %f11051, %f11051;
$L__BB0_11:                             // %__nv_log2f.exit1392
                                        //   in Loop: Header=BB0_2 Depth=1
	add.s32 	%r522, %r18, %r17;
	.loc	1 234 32                        // hopper-fa-ws-pipelined-pingpong.py:234:32
	setp.eq.f32 	%p107, %f532, 0f00000000;
	selp.f32 	%f536, 0fFF800000, %f11414, %p107;
	setp.lt.f32 	%p108, %f11347, 0f00800000;
	mul.f32 	%f11052, %f11347, 0f4B000000;
	selp.f32 	%f537, %f11052, %f11347, %p108;
	selp.f32 	%f11053, 0fC1B80000, 0f00000000, %p108;
	mov.b32 	%r472, %f537;
	add.s32 	%r473, %r472, -1060439283;
	and.b32 	%r474, %r473, -8388608;
	sub.s32 	%r475, %r472, %r474;
	mov.b32 	%f11054, %r475;
	cvt.rn.f32.s32 	%f11055, %r474;
	fma.rn.ftz.f32 	%f11057, %f11055, %f11025, %f11053;
	add.f32 	%f11058, %f11054, 0fBF800000;
	fma.rn.ftz.f32 	%f11061, %f11029, %f11058, %f11028;
	fma.rn.ftz.f32 	%f11063, %f11061, %f11058, %f11031;
	fma.rn.ftz.f32 	%f11065, %f11063, %f11058, %f11033;
	fma.rn.ftz.f32 	%f11067, %f11065, %f11058, %f11035;
	fma.rn.ftz.f32 	%f11069, %f11067, %f11058, %f11037;
	fma.rn.ftz.f32 	%f11071, %f11069, %f11058, %f11039;
	fma.rn.ftz.f32 	%f11073, %f11071, %f11058, %f11041;
	fma.rn.ftz.f32 	%f11075, %f11073, %f11058, %f11043;
	fma.rn.ftz.f32 	%f11077, %f11075, %f11058, %f11045;
	mul.f32 	%f11078, %f11058, %f11077;
	mul.f32 	%f11079, %f11058, %f11078;
	fma.rn.ftz.f32 	%f11081, %f11058, %f11049, %f11079;
	add.f32 	%f11415, %f11057, %f11081;
	setp.lt.u32 	%p109, %r472, 2139095040;
	@%p109 bra 	$L__BB0_13;
// %bb.12:                              // %__nv_fmaf_rn.exit.i.i1419
                                        //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 32                          // hopper-fa-ws-pipelined-pingpong.py:0:32
	fma.rn.ftz.f32 	%f11415, %f537, %f11051, %f11051;
$L__BB0_13:                             // %__nv_log2f.exit1422
                                        //   in Loop: Header=BB0_2 Depth=1
	.loc	1 234 32                        // hopper-fa-ws-pipelined-pingpong.py:234:32
	setp.eq.f32 	%p114, %f537, 0f00000000;
	selp.f32 	%f11083, 0fFF800000, %f11415, %p114;
	.loc	1 234 19                        // hopper-fa-ws-pipelined-pingpong.py:234:19
	add.f32 	%f11084, %f11348, %f536;
	add.f32 	%f11085, %f11349, %f11083;
	.loc	1 235 24                        // hopper-fa-ws-pipelined-pingpong.py:235:24
	div.full.f32 	%f11086, %f11217, %f11346;
	div.full.f32 	%f11087, %f11216, %f11346;
	div.full.f32 	%f11088, %f11215, %f11347;
	div.full.f32 	%f11089, %f11214, %f11347;
	div.full.f32 	%f11090, %f11213, %f11346;
	div.full.f32 	%f11091, %f11212, %f11346;
	div.full.f32 	%f11092, %f11211, %f11347;
	div.full.f32 	%f11093, %f11210, %f11347;
	div.full.f32 	%f11094, %f11209, %f11346;
	div.full.f32 	%f11095, %f11208, %f11346;
	div.full.f32 	%f11096, %f11207, %f11347;
	div.full.f32 	%f11097, %f11206, %f11347;
	div.full.f32 	%f11098, %f11205, %f11346;
	div.full.f32 	%f11099, %f11204, %f11346;
	div.full.f32 	%f11100, %f11203, %f11347;
	div.full.f32 	%f11101, %f11202, %f11347;
	div.full.f32 	%f11102, %f11201, %f11346;
	div.full.f32 	%f11103, %f11200, %f11346;
	div.full.f32 	%f11104, %f11199, %f11347;
	div.full.f32 	%f11105, %f11198, %f11347;
	div.full.f32 	%f11106, %f11197, %f11346;
	div.full.f32 	%f11107, %f11196, %f11346;
	div.full.f32 	%f11108, %f11195, %f11347;
	div.full.f32 	%f11109, %f11194, %f11347;
	div.full.f32 	%f11110, %f11193, %f11346;
	div.full.f32 	%f11111, %f11192, %f11346;
	div.full.f32 	%f11112, %f11191, %f11347;
	div.full.f32 	%f11113, %f11190, %f11347;
	div.full.f32 	%f11114, %f11189, %f11346;
	div.full.f32 	%f11115, %f11188, %f11346;
	div.full.f32 	%f11116, %f11187, %f11347;
	div.full.f32 	%f11117, %f11186, %f11347;
	div.full.f32 	%f11118, %f11185, %f11346;
	div.full.f32 	%f11119, %f11184, %f11346;
	div.full.f32 	%f11120, %f11183, %f11347;
	div.full.f32 	%f11121, %f11182, %f11347;
	div.full.f32 	%f11122, %f11181, %f11346;
	div.full.f32 	%f11123, %f11180, %f11346;
	div.full.f32 	%f11124, %f11179, %f11347;
	div.full.f32 	%f11125, %f11178, %f11347;
	div.full.f32 	%f11126, %f11177, %f11346;
	div.full.f32 	%f11127, %f11176, %f11346;
	div.full.f32 	%f11128, %f11175, %f11347;
	div.full.f32 	%f11129, %f11174, %f11347;
	div.full.f32 	%f11130, %f11173, %f11346;
	div.full.f32 	%f11131, %f11172, %f11346;
	div.full.f32 	%f11132, %f11171, %f11347;
	div.full.f32 	%f11133, %f11170, %f11347;
	div.full.f32 	%f11134, %f11169, %f11346;
	div.full.f32 	%f11135, %f11168, %f11346;
	div.full.f32 	%f11136, %f11167, %f11347;
	div.full.f32 	%f11137, %f11166, %f11347;
	div.full.f32 	%f11138, %f11165, %f11346;
	div.full.f32 	%f11139, %f11164, %f11346;
	div.full.f32 	%f11140, %f11163, %f11347;
	div.full.f32 	%f11141, %f11162, %f11347;
	div.full.f32 	%f11142, %f11161, %f11346;
	div.full.f32 	%f11143, %f11160, %f11346;
	div.full.f32 	%f11144, %f11159, %f11347;
	div.full.f32 	%f11145, %f11158, %f11347;
	div.full.f32 	%f11146, %f11157, %f11346;
	div.full.f32 	%f11147, %f11156, %f11346;
	div.full.f32 	%f11148, %f11155, %f11347;
	div.full.f32 	%f11149, %f11154, %f11347;
	.loc	1 236 76                        // hopper-fa-ws-pipelined-pingpong.py:236:76
	and.b32 	%r524, %r1, 1;
	neg.s32 	%r525, %r524;
	bfe.s32 	%r526, %r1, 1, 1;
	bfe.s32 	%r527, %r1, 2, 1;
	and.b32 	%r528, %r1, 63;
	.loc	1 236 63                        // hopper-fa-ws-pipelined-pingpong.py:236:63
	or.b32 	%r529, %r17, %r528;
	.loc	1 237 25                        // hopper-fa-ws-pipelined-pingpong.py:237:25
	mul.wide.s32 	%rd146, %r18, 4;
	add.s64 	%rd147, %rd23, %rd146;
	.loc	1 237 42                        // hopper-fa-ws-pipelined-pingpong.py:237:42
	mul.wide.s32 	%rd148, %r529, 4;
	add.s64 	%rd144, %rd147, %rd148;
	.loc	1 238 29                        // hopper-fa-ws-pipelined-pingpong.py:238:29
	// begin inline asm
	barrier.sync.aligned 2, 128 ;
	// end inline asm
	and.b32 	%r530, %r1, 64;
	setp.eq.s32 	%p112, %r530, 0;
	shr.u32 	%r531, %r1, 1;
	add.s32 	%r533, %r48, 163840;
	shl.b32 	%r534, %r1, 1;
	and.b32 	%r535, %r534, 192;
	add.s32 	%r536, %r533, %r535;
	and.b32 	%r537, %r1, 28;
	add.s32 	%r476, %r536, %r537;
	mov.b32 	%r477, %f11084;
	mov.pred 	%p110, -1;
	// begin inline asm
	@%p110 st.shared.b32 [ %r476 + 0 ], %r477;
	// end inline asm
	add.s32 	%r478, %r476, 32;
	mov.b32 	%r479, %f11085;
	// begin inline asm
	@%p110 st.shared.b32 [ %r478 + 0 ], %r479;
	// end inline asm
	// begin inline asm
	barrier.sync.aligned 2, 128 ;
	// end inline asm
	shl.b32 	%r538, %r528, 2;
	add.s32 	%r539, %r533, %r538;
	ld.shared.b32 	%r480, [%r539];
	// begin inline asm
	@%p112 st.global.b32 [ %rd144 + 0 ], { %r480 };
	// end inline asm
	.loc	1 239 56                        // hopper-fa-ws-pipelined-pingpong.py:239:56
	cvt.rn.f16x2.f32 	%r482, %f11087, %f11086;
	cvt.rn.f16x2.f32 	%r483, %f11089, %f11088;
	cvt.rn.f16x2.f32 	%r484, %f11091, %f11090;
	cvt.rn.f16x2.f32 	%r485, %f11093, %f11092;
	cvt.rn.f16x2.f32 	%r487, %f11095, %f11094;
	cvt.rn.f16x2.f32 	%r488, %f11097, %f11096;
	cvt.rn.f16x2.f32 	%r489, %f11099, %f11098;
	cvt.rn.f16x2.f32 	%r490, %f11101, %f11100;
	cvt.rn.f16x2.f32 	%r492, %f11103, %f11102;
	cvt.rn.f16x2.f32 	%r493, %f11105, %f11104;
	cvt.rn.f16x2.f32 	%r494, %f11107, %f11106;
	cvt.rn.f16x2.f32 	%r495, %f11109, %f11108;
	cvt.rn.f16x2.f32 	%r497, %f11111, %f11110;
	cvt.rn.f16x2.f32 	%r498, %f11113, %f11112;
	cvt.rn.f16x2.f32 	%r499, %f11115, %f11114;
	cvt.rn.f16x2.f32 	%r500, %f11117, %f11116;
	cvt.rn.f16x2.f32 	%r502, %f11119, %f11118;
	cvt.rn.f16x2.f32 	%r503, %f11121, %f11120;
	cvt.rn.f16x2.f32 	%r504, %f11123, %f11122;
	cvt.rn.f16x2.f32 	%r505, %f11125, %f11124;
	cvt.rn.f16x2.f32 	%r507, %f11127, %f11126;
	cvt.rn.f16x2.f32 	%r508, %f11129, %f11128;
	cvt.rn.f16x2.f32 	%r509, %f11131, %f11130;
	cvt.rn.f16x2.f32 	%r510, %f11133, %f11132;
	cvt.rn.f16x2.f32 	%r512, %f11135, %f11134;
	cvt.rn.f16x2.f32 	%r513, %f11137, %f11136;
	cvt.rn.f16x2.f32 	%r514, %f11139, %f11138;
	cvt.rn.f16x2.f32 	%r515, %f11141, %f11140;
	cvt.rn.f16x2.f32 	%r517, %f11143, %f11142;
	cvt.rn.f16x2.f32 	%r518, %f11145, %f11144;
	cvt.rn.f16x2.f32 	%r519, %f11147, %f11146;
	cvt.rn.f16x2.f32 	%r520, %f11149, %f11148;
	.loc	1 239 49                        // hopper-fa-ws-pipelined-pingpong.py:239:49
	// begin inline asm
	barrier.sync.aligned 2, 128 ;
	// end inline asm
	and.b32 	%r540, %r525, 72;
	and.b32 	%r541, %r526, 144;
	and.b32 	%r542, %r527, 288;
	shl.b32 	%r543, %r1, 6;
	and.b32 	%r544, %r543, 512;
	or.b32 	%r545, %r541, %r544;
	or.b32 	%r546, %r545, %r540;
	or.b32 	%r547, %r546, %r542;
	and.b32 	%r548, %r531, 8;
	xor.b32 	%r549, %r547, %r548;
	shl.b32 	%r550, %r1, 5;
	and.b32 	%r551, %r550, 1024;
	or.b32 	%r552, %r549, %r551;
	shl.b32 	%r553, %r530, 5;
	or.b32 	%r554, %r552, %r553;
	shl.b32 	%r555, %r554, 1;
	add.s32 	%r481, %r533, %r555;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r481], {%r482, %r483, %r484, %r485};
	// end inline asm
	xor.b32 	%r556, %r554, 16;
	shl.b32 	%r557, %r556, 1;
	add.s32 	%r486, %r533, %r557;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r486], {%r487, %r488, %r489, %r490};
	// end inline asm
	xor.b32 	%r558, %r554, 32;
	shl.b32 	%r559, %r558, 1;
	add.s32 	%r491, %r533, %r559;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r491], {%r492, %r493, %r494, %r495};
	// end inline asm
	xor.b32 	%r560, %r554, 48;
	shl.b32 	%r561, %r560, 1;
	add.s32 	%r496, %r533, %r561;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r496], {%r497, %r498, %r499, %r500};
	// end inline asm
	xor.b32 	%r562, %r554, 4096;
	shl.b32 	%r563, %r562, 1;
	add.s32 	%r501, %r533, %r563;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r501], {%r502, %r503, %r504, %r505};
	// end inline asm
	xor.b32 	%r564, %r554, 4112;
	shl.b32 	%r565, %r564, 1;
	add.s32 	%r506, %r533, %r565;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r506], {%r507, %r508, %r509, %r510};
	// end inline asm
	xor.b32 	%r566, %r554, 4128;
	shl.b32 	%r567, %r566, 1;
	add.s32 	%r511, %r533, %r567;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r511], {%r512, %r513, %r514, %r515};
	// end inline asm
	xor.b32 	%r568, %r554, 4144;
	shl.b32 	%r569, %r568, 1;
	add.s32 	%r516, %r533, %r569;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r516], {%r517, %r518, %r519, %r520};
	// end inline asm
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	cvta.to.global.u64 	%rd145, %rd1;
	// begin inline asm
	barrier.sync.aligned 2, 128 ;
	// end inline asm
	elect.sync 	%r570|%p115, -1;
	setp.lt.u32 	%p116, %r4, 64;
	and.pred 	%p113, %p116, %p115;
	and.b32 	%r571, %r5, 1;
	shl.b32 	%r572, %r571, 13;
	add.s32 	%r523, %r533, %r572;
	shl.b32 	%r521, %r571, 6;
	// begin inline asm
	@%p113 cp.async.bulk.tensor.2d.global.shared::cta.bulk_group [%rd145, {%r521, %r522}], [%r523];
	// end inline asm
	cp.async.bulk.commit_group;
	cp.async.bulk.wait_group.read 0;
	// begin inline asm
	barrier.sync.aligned 2, 128 ;
	// end inline asm
	// begin inline asm
	barrier.sync 1 ;
	// end inline asm
	setmaxnreg.dec.sync.aligned.u32 120;
	bra.uni 	$L__BB0_2;
$L__tmp17:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/root/triton-runner/examples/runner/TLX/v3.4.0/python/hopper-fa-ws-pipelined-pingpong.py"
	.file	2 "/root/triton/python/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 263                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x100 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 104                                 // DW_AT_name
.b8 111
.b8 112
.b8 112
.b8 101
.b8 114
.b8 45
.b8 102
.b8 97
.b8 45
.b8 119
.b8 115
.b8 45
.b8 112
.b8 105
.b8 112
.b8 101
.b8 108
.b8 105
.b8 110
.b8 101
.b8 100
.b8 45
.b8 112
.b8 105
.b8 110
.b8 103
.b8 112
.b8 111
.b8 110
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 45
.b8 114
.b8 117
.b8 110
.b8 110
.b8 101
.b8 114
.b8 47
.b8 101
.b8 120
.b8 97
.b8 109
.b8 112
.b8 108
.b8 101
.b8 115
.b8 47
.b8 114
.b8 117
.b8 110
.b8 110
.b8 101
.b8 114
.b8 47
.b8 84
.b8 76
.b8 88
.b8 47
.b8 118
.b8 51
.b8 46
.b8 52
.b8 46
.b8 48
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 0
.b8 2                                   // Abbrev [2] 0x72:0x22 DW_TAG_subprogram
.b8 95                                  // DW_AT_name
.b8 97
.b8 116
.b8 116
.b8 110
.b8 95
.b8 102
.b8 119
.b8 100
.b8 95
.b8 119
.b8 115
.b8 95
.b8 112
.b8 105
.b8 112
.b8 101
.b8 108
.b8 105
.b8 110
.b8 101
.b8 100
.b8 95
.b8 112
.b8 105
.b8 110
.b8 103
.b8 112
.b8 111
.b8 110
.b8 103
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x94:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 114                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa9:0x18 DW_TAG_inlined_subroutine
.b32 114                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 155                                 // DW_AT_call_line
.b8 46                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc1:0x18 DW_TAG_inlined_subroutine
.b32 114                                // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp12                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 162                                 // DW_AT_call_line
.b8 29                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd9:0x18 DW_TAG_inlined_subroutine
.b32 114                                // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp14                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 195                                 // DW_AT_call_line
.b8 50                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf1:0x18 DW_TAG_inlined_subroutine
.b32 114                                // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp16                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 200                                 // DW_AT_call_line
.b8 33                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
