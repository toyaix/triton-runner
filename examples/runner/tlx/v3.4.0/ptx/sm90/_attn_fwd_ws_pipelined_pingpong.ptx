//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_90a
.address_size 64

	// .globl	_attn_fwd_ws_pipelined_pingpong // -- Begin function _attn_fwd_ws_pipelined_pingpong
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @_attn_fwd_ws_pipelined_pingpong
.visible .entry _attn_fwd_ws_pipelined_pingpong(
	.param .f32 _attn_fwd_ws_pipelined_pingpong_param_0,
	.param .u64 .ptr .global .align 1 _attn_fwd_ws_pipelined_pingpong_param_1,
	.param .u32 _attn_fwd_ws_pipelined_pingpong_param_2,
	.param .u32 _attn_fwd_ws_pipelined_pingpong_param_3,
	.param .align 64 .b8 _attn_fwd_ws_pipelined_pingpong_param_4[128],
	.param .u32 _attn_fwd_ws_pipelined_pingpong_param_5,
	.param .u32 _attn_fwd_ws_pipelined_pingpong_param_6,
	.param .u64 _attn_fwd_ws_pipelined_pingpong_param_7,
	.param .u64 _attn_fwd_ws_pipelined_pingpong_param_8,
	.param .align 64 .b8 _attn_fwd_ws_pipelined_pingpong_param_9[128],
	.param .u32 _attn_fwd_ws_pipelined_pingpong_param_10,
	.param .u32 _attn_fwd_ws_pipelined_pingpong_param_11,
	.param .u64 _attn_fwd_ws_pipelined_pingpong_param_12,
	.param .u64 _attn_fwd_ws_pipelined_pingpong_param_13,
	.param .align 64 .b8 _attn_fwd_ws_pipelined_pingpong_param_14[128],
	.param .u32 _attn_fwd_ws_pipelined_pingpong_param_15,
	.param .u32 _attn_fwd_ws_pipelined_pingpong_param_16,
	.param .u64 _attn_fwd_ws_pipelined_pingpong_param_17,
	.param .u64 _attn_fwd_ws_pipelined_pingpong_param_18,
	.param .align 64 .b8 _attn_fwd_ws_pipelined_pingpong_param_19[128],
	.param .u32 _attn_fwd_ws_pipelined_pingpong_param_20,
	.param .u32 _attn_fwd_ws_pipelined_pingpong_param_21,
	.param .u64 _attn_fwd_ws_pipelined_pingpong_param_22,
	.param .u64 _attn_fwd_ws_pipelined_pingpong_param_23,
	.param .u32 _attn_fwd_ws_pipelined_pingpong_param_24,
	.param .u64 .ptr .global .align 1 _attn_fwd_ws_pipelined_pingpong_param_25,
	.param .u64 .ptr .global .align 1 _attn_fwd_ws_pipelined_pingpong_param_26
)
.reqntid 384
.maxnreg 168
{
	.reg .pred 	%p<140>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<12106>;
	.reg .b64 	%rd<627>;
	.loc	1 40 0                          // hopper-fa-ws-pipelined-pingpong.py:40:0
$L__func_begin0:
	.loc	1 40 0                          // hopper-fa-ws-pipelined-pingpong.py:40:0

// %bb.0:
	ld.param.b32 	%r601, [_attn_fwd_ws_pipelined_pingpong_param_24];
	mov.b64 	%rd288, _attn_fwd_ws_pipelined_pingpong_param_19;
$L__tmp0:
	.loc	1 40 0                          // hopper-fa-ws-pipelined-pingpong.py:40
	cvta.param.u64 	%rd1, %rd288;
	mov.b64 	%rd289, _attn_fwd_ws_pipelined_pingpong_param_14;
	cvta.param.u64 	%rd2, %rd289;
	mov.b64 	%rd290, _attn_fwd_ws_pipelined_pingpong_param_4;
	mov.b64 	%rd291, _attn_fwd_ws_pipelined_pingpong_param_9;
	cvta.param.u64 	%rd3, %rd291;
	cvta.param.u64 	%rd4, %rd290;
	mov.u32 	%r1, %tid.x;
	shr.u32 	%r2, %r1, 5;
	shfl.sync.idx.b32 	%r3, %r2, 0, 31, -1;
	setp.lt.u32 	%p1, %r3, 4;
	@%p1 bra 	$L__BB0_22;
	bra.uni 	$L__BB0_1;
$L__BB0_22:
	setmaxnreg.inc.sync.aligned.u32 	256;
	.loc	1 59 62                         // hopper-fa-ws-pipelined-pingpong.py:59:62
	and.b32 	%r588, %r1, 127;
	setp.eq.b32 	%p130, %r588, 0;
	mov.b32 	%r11775, global_smem;
	add.s32 	%r11755, %r11775, 196608;
	// begin inline asm
	@%p130 mbarrier.init.shared::cta.b64 [%r11755], 1;
	// end inline asm
	bar.sync 	0, 128;
	add.s32 	%r11756, %r11775, 196616;
	// begin inline asm
	@%p130 mbarrier.init.shared::cta.b64 [%r11756], 1;
	// end inline asm
	.loc	1 60 61                         // hopper-fa-ws-pipelined-pingpong.py:60:61
	add.s32 	%r11757, %r11775, 196624;
	// begin inline asm
	@%p130 mbarrier.init.shared::cta.b64 [%r11757], 2;
	// end inline asm
	bar.sync 	0, 128;
	add.s32 	%r11758, %r11775, 196632;
	// begin inline asm
	@%p130 mbarrier.init.shared::cta.b64 [%r11758], 2;
	// end inline asm
	.loc	1 61 59                         // hopper-fa-ws-pipelined-pingpong.py:61:59
	add.s32 	%r11759, %r11775, 196640;
	// begin inline asm
	@%p130 mbarrier.init.shared::cta.b64 [%r11759], 1;
	// end inline asm
	bar.sync 	0, 128;
	add.s32 	%r11760, %r11775, 196648;
	// begin inline asm
	@%p130 mbarrier.init.shared::cta.b64 [%r11760], 1;
	// end inline asm
	.loc	1 62 61                         // hopper-fa-ws-pipelined-pingpong.py:62:61
	add.s32 	%r11761, %r11775, 196656;
	// begin inline asm
	@%p130 mbarrier.init.shared::cta.b64 [%r11761], 2;
	// end inline asm
	bar.sync 	0, 128;
	add.s32 	%r11762, %r11775, 196664;
	// begin inline asm
	@%p130 mbarrier.init.shared::cta.b64 [%r11762], 2;
	// end inline asm
	.loc	1 63 59                         // hopper-fa-ws-pipelined-pingpong.py:63:59
	add.s32 	%r11763, %r11775, 196672;
	// begin inline asm
	@%p130 mbarrier.init.shared::cta.b64 [%r11763], 1;
	// end inline asm
	bar.sync 	0, 128;
	add.s32 	%r11764, %r11775, 196680;
	// begin inline asm
	@%p130 mbarrier.init.shared::cta.b64 [%r11764], 1;
	// end inline asm
	.loc	1 65 9                          // hopper-fa-ws-pipelined-pingpong.py:65:9
	st.shared.v2.b32 	[global_smem+196688], {0, 16843009};
	barrier.sync 	1;
	setmaxnreg.dec.sync.aligned.u32 	40;
	barrier.sync 	1;
	.loc	1 69 36                         // hopper-fa-ws-pipelined-pingpong.py:69:36
	mov.u32 	%r11776, %ctaid.x;
	.loc	1 70 35                         // hopper-fa-ws-pipelined-pingpong.py:70:35
	mov.u32 	%r11777, %ctaid.y;
	.loc	1 73 45                         // hopper-fa-ws-pipelined-pingpong.py:73:45
	mul.lo.s32 	%r589, %r11777, %r601;
	.loc	1 74 47                         // hopper-fa-ws-pipelined-pingpong.py:74:47
	shl.b32 	%r11778, %r11776, 7;
	.loc	1 74 37                         // hopper-fa-ws-pipelined-pingpong.py:74:37
	add.s32 	%r11768, %r589, %r11778;
	.loc	1 80 55                         // hopper-fa-ws-pipelined-pingpong.py:80:55
	// begin inline asm
	@%p130 mbarrier.arrive.expect_tx.shared.b64 _, [%r11755], 16384;
	// end inline asm
	.loc	1 82 88                         // hopper-fa-ws-pipelined-pingpong.py:82:88
	bar.sync 	0, 128;
	shfl.sync.idx.b32 	%r11779, %r2, 0, 31, -1;
	elect.sync 	%r11780|%p117, -1;
	setp.lt.u32 	%p118, %r588, 64;
	and.pred 	%p114, %p118, %p117;
	and.b32 	%r590, %r11779, 1;
	shl.b32 	%r11781, %r590, 13;
	add.s32 	%r11782, %r11775, %r11781;
	add.s32 	%r11766, %r11782, 131072;
	shl.b32 	%r11767, %r590, 6;
	// begin inline asm
	@%p114 cp.async.bulk.tensor.2d.shared::cluster.global.mbarrier::complete_tx::bytes [%r11766], [%rd4, {%r11767, %r11768}], [%r11755];
	// end inline asm
	.loc	1 80 55                         // hopper-fa-ws-pipelined-pingpong.py:80:55
	bar.sync 	0, 128;
	// begin inline asm
	@%p130 mbarrier.arrive.expect_tx.shared.b64 _, [%r11756], 16384;
	// end inline asm
	.loc	1 81 50                         // hopper-fa-ws-pipelined-pingpong.py:81:50
	add.s32 	%r11773, %r11768, 64;
	.loc	1 82 88                         // hopper-fa-ws-pipelined-pingpong.py:82:88
	bar.sync 	0, 128;
	elect.sync 	%r11783|%p119, -1;
	and.pred 	%p116, %p118, %p119;
	add.s32 	%r11771, %r11782, 147456;
	// begin inline asm
	@%p116 cp.async.bulk.tensor.2d.shared::cluster.global.mbarrier::complete_tx::bytes [%r11771], [%rd4, {%r11767, %r11773}], [%r11756];
	// end inline asm
	.loc	1 87 38                         // hopper-fa-ws-pipelined-pingpong.py:87:38
	setp.lt.s32 	%p120, %r601, 1;
	@%p120 bra 	$L__BB0_25;
// %bb.23:                              // %.lr.ph1959
	shl.b32 	%r11785, %r590, 14;
	add.s32 	%r592, %r11775, %r11785;
	add.s32 	%r593, %r592, 65536;
	mov.b32 	%r12103, 0;
	mov.b32 	%r12104, %r12103;
	mov.b32 	%r12105, %r12103;
$L__BB0_24:                             // =>This Inner Loop Header: Depth=1
	.loc	1 88 35                         // hopper-fa-ws-pipelined-pingpong.py:88:35
	add.s32 	%r11792, %r589, %r12105;
	shr.u32 	%r11801, %r12103, 31;
	add.s32 	%r11802, %r12103, %r11801;
	and.b32 	%r11803, %r11802, -2;
	sub.s32 	%r11804, %r12103, %r11803;
	.loc	1 90 49                         // hopper-fa-ws-pipelined-pingpong.py:90:49
	setp.eq.b32 	%p126, %r11804, 0;
	.loc	1 90 39                         // hopper-fa-ws-pipelined-pingpong.py:90:39
	selp.b32 	%r11805, 1, 0, %p126;
	xor.b32 	%r12104, %r12104, %r11805;
	.loc	1 93 43                         // hopper-fa-ws-pipelined-pingpong.py:93:43
	shl.b32 	%r11806, %r11804, 3;
	add.s32 	%r11808, %r11775, %r11806;
	add.s32 	%r11787, %r11808, 196624;
	.loc	1 93 52                         // hopper-fa-ws-pipelined-pingpong.py:93:52
	// begin inline asm
	
{
	.reg .pred complete;
	waitLoop:
	mbarrier.try_wait.parity.shared.b64 complete, [%r11787], %r12104;
	@!complete bra.uni waitLoop;
}

	// end inline asm
	.loc	1 95 49                         // hopper-fa-ws-pipelined-pingpong.py:95:49
	add.s32 	%r11793, %r11808, 196640;
	.loc	1 95 58                         // hopper-fa-ws-pipelined-pingpong.py:95:58
	// begin inline asm
	@%p130 mbarrier.arrive.expect_tx.shared.b64 _, [%r11793], 32768;
	// end inline asm
	.loc	1 96 85                         // hopper-fa-ws-pipelined-pingpong.py:96:85
	bar.sync 	0, 128;
	elect.sync 	%r11809|%p127, -1;
	and.pred 	%p122, %p118, %p127;
	shl.b32 	%r11810, %r11804, 15;
	add.s32 	%r11790, %r592, %r11810;
	// begin inline asm
	@%p122 cp.async.bulk.tensor.2d.shared::cluster.global.mbarrier::complete_tx::bytes [%r11790], [%rd3, {%r11767, %r11792}], [%r11793];
	// end inline asm
	.loc	1 99 43                         // hopper-fa-ws-pipelined-pingpong.py:99:43
	add.s32 	%r11794, %r11808, 196656;
	.loc	1 99 52                         // hopper-fa-ws-pipelined-pingpong.py:99:52
	// begin inline asm
	
{
	.reg .pred complete;
	waitLoop:
	mbarrier.try_wait.parity.shared.b64 complete, [%r11794], %r12104;
	@!complete bra.uni waitLoop;
}

	// end inline asm
	.loc	1 101 49                        // hopper-fa-ws-pipelined-pingpong.py:101:49
	add.s32 	%r11800, %r11808, 196672;
	.loc	1 101 58                        // hopper-fa-ws-pipelined-pingpong.py:101:58
	// begin inline asm
	@%p130 mbarrier.arrive.expect_tx.shared.b64 _, [%r11800], 32768;
	// end inline asm
	.loc	1 102 85                        // hopper-fa-ws-pipelined-pingpong.py:102:85
	bar.sync 	0, 128;
	elect.sync 	%r11811|%p128, -1;
	and.pred 	%p124, %p118, %p128;
	add.s32 	%r11797, %r593, %r11810;
	// begin inline asm
	@%p124 cp.async.bulk.tensor.2d.shared::cluster.global.mbarrier::complete_tx::bytes [%r11797], [%rd2, {%r11767, %r11792}], [%r11800];
	// end inline asm
	.loc	1 105 27                        // hopper-fa-ws-pipelined-pingpong.py:105:27
	add.s32 	%r12103, %r12103, 1;
	.loc	1 87 38                         // hopper-fa-ws-pipelined-pingpong.py:87:38
	add.s32 	%r12105, %r12105, 128;
	setp.lt.s32 	%p129, %r12105, %r601;
	@%p129 bra 	$L__BB0_24;
$L__BB0_25:                             // %._crit_edge1960
	.loc	1 0 38                          // hopper-fa-ws-pipelined-pingpong.py:0:38
	barrier.sync 	1;
	setmaxnreg.inc.sync.aligned.u32 	256;
	.loc	1 65 4                          // hopper-fa-ws-pipelined-pingpong.py:65:4
	bar.sync 	0, 128;
	// begin inline asm
	@%p130 mbarrier.inval.shared::cta.b64 [%r11755];
	// end inline asm
	bar.sync 	0, 128;
	// begin inline asm
	@%p130 mbarrier.inval.shared::cta.b64 [%r11756];
	// end inline asm
	// begin inline asm
	@%p130 mbarrier.inval.shared::cta.b64 [%r11757];
	// end inline asm
	bar.sync 	0, 128;
	// begin inline asm
	@%p130 mbarrier.inval.shared::cta.b64 [%r11758];
	// end inline asm
	// begin inline asm
	@%p130 mbarrier.inval.shared::cta.b64 [%r11759];
	// end inline asm
	bar.sync 	0, 128;
	// begin inline asm
	@%p130 mbarrier.inval.shared::cta.b64 [%r11760];
	// end inline asm
	// begin inline asm
	@%p130 mbarrier.inval.shared::cta.b64 [%r11761];
	// end inline asm
	bar.sync 	0, 128;
	// begin inline asm
	@%p130 mbarrier.inval.shared::cta.b64 [%r11762];
	// end inline asm
	// begin inline asm
	@%p130 mbarrier.inval.shared::cta.b64 [%r11763];
	// end inline asm
	bar.sync 	0, 128;
	// begin inline asm
	@%p130 mbarrier.inval.shared::cta.b64 [%r11764];
	// end inline asm
	st.shared.v2.b32 	[global_smem+196688], {33686018, 33686018};
	barrier.sync 	1;
$L__BB0_26:                             // %common.ret
	.loc	1 0 0                           // hopper-fa-ws-pipelined-pingpong.py:0
	ret;
$L__BB0_1:                              // %.preheader.preheader
	ld.param.b64 	%rd287, [_attn_fwd_ws_pipelined_pingpong_param_1];
	ld.param.b32 	%r600, [_attn_fwd_ws_pipelined_pingpong_param_0];
	mov.b32 	%r602, global_smem;
	add.s32 	%r603, %r602, %r3;
	setp.lt.s32 	%p62, %r601, 129;
	bra.uni 	$L__BB0_2;
$L__BB0_21:                             // %__nv_log2f.exit1357
                                        //   in Loop: Header=BB0_2 Depth=1
	.loc	1 234 32                        // hopper-fa-ws-pipelined-pingpong.py:234:32
	setp.eq.f32 	%p51, %r584, 0f00000000;
	selp.f32 	%r6043, 0fFF800000, %r12102, %p51;
	.loc	1 234 19                        // hopper-fa-ws-pipelined-pingpong.py:234:19
	mov.b64 	{%r6044, %r6045}, %rd594;
	add.f32 	%r6046, %r6044, %r583;
	add.f32 	%r6047, %r6045, %r6043;
	.loc	1 235 24                        // hopper-fa-ws-pipelined-pingpong.py:235:24
	div.full.f32 	%r6048, %r12029, %r12033;
	div.full.f32 	%r6049, %r12028, %r12033;
	div.full.f32 	%r6050, %r12027, %r12034;
	div.full.f32 	%r6051, %r12026, %r12034;
	div.full.f32 	%r6052, %r12025, %r12033;
	div.full.f32 	%r6053, %r12024, %r12033;
	div.full.f32 	%r6054, %r12023, %r12034;
	div.full.f32 	%r6055, %r12022, %r12034;
	div.full.f32 	%r6056, %r12021, %r12033;
	div.full.f32 	%r6057, %r12020, %r12033;
	div.full.f32 	%r6058, %r12019, %r12034;
	div.full.f32 	%r6059, %r12018, %r12034;
	div.full.f32 	%r6060, %r12017, %r12033;
	div.full.f32 	%r6061, %r12016, %r12033;
	div.full.f32 	%r6062, %r12015, %r12034;
	div.full.f32 	%r6063, %r12014, %r12034;
	div.full.f32 	%r6064, %r12013, %r12033;
	div.full.f32 	%r6065, %r12012, %r12033;
	div.full.f32 	%r6066, %r12011, %r12034;
	div.full.f32 	%r6067, %r12010, %r12034;
	div.full.f32 	%r6068, %r12009, %r12033;
	div.full.f32 	%r6069, %r12008, %r12033;
	div.full.f32 	%r6070, %r12007, %r12034;
	div.full.f32 	%r6071, %r12006, %r12034;
	div.full.f32 	%r6072, %r12005, %r12033;
	div.full.f32 	%r6073, %r12004, %r12033;
	div.full.f32 	%r6074, %r12003, %r12034;
	div.full.f32 	%r6075, %r12002, %r12034;
	div.full.f32 	%r6076, %r12001, %r12033;
	div.full.f32 	%r6077, %r12000, %r12033;
	div.full.f32 	%r6078, %r11999, %r12034;
	div.full.f32 	%r6079, %r11998, %r12034;
	div.full.f32 	%r6080, %r11997, %r12033;
	div.full.f32 	%r6081, %r11996, %r12033;
	div.full.f32 	%r6082, %r11995, %r12034;
	div.full.f32 	%r6083, %r11994, %r12034;
	div.full.f32 	%r6084, %r11993, %r12033;
	div.full.f32 	%r6085, %r11992, %r12033;
	div.full.f32 	%r6086, %r11991, %r12034;
	div.full.f32 	%r6087, %r11990, %r12034;
	div.full.f32 	%r6088, %r11989, %r12033;
	div.full.f32 	%r6089, %r11988, %r12033;
	div.full.f32 	%r6090, %r11987, %r12034;
	div.full.f32 	%r6091, %r11986, %r12034;
	div.full.f32 	%r6092, %r11985, %r12033;
	div.full.f32 	%r6093, %r11984, %r12033;
	div.full.f32 	%r6094, %r11983, %r12034;
	div.full.f32 	%r6095, %r11982, %r12034;
	div.full.f32 	%r6096, %r11981, %r12033;
	div.full.f32 	%r6097, %r11980, %r12033;
	div.full.f32 	%r6098, %r11979, %r12034;
	div.full.f32 	%r6099, %r11978, %r12034;
	div.full.f32 	%r6100, %r11977, %r12033;
	div.full.f32 	%r6101, %r11976, %r12033;
	div.full.f32 	%r6102, %r11975, %r12034;
	div.full.f32 	%r6103, %r11974, %r12034;
	div.full.f32 	%r6104, %r11973, %r12033;
	div.full.f32 	%r6105, %r11972, %r12033;
	div.full.f32 	%r6106, %r11971, %r12034;
	div.full.f32 	%r6107, %r11970, %r12034;
	div.full.f32 	%r6108, %r11969, %r12033;
	div.full.f32 	%r6109, %r11968, %r12033;
	div.full.f32 	%r6110, %r11967, %r12034;
	div.full.f32 	%r6111, %r11966, %r12034;
	.loc	1 236 76                        // hopper-fa-ws-pipelined-pingpong.py:236:76
	and.b32 	%r6112, %r1, 63;
	.loc	1 236 63                        // hopper-fa-ws-pipelined-pingpong.py:236:63
	or.b32 	%r6113, %r576, %r6112;
	.loc	1 237 25                        // hopper-fa-ws-pipelined-pingpong.py:237:25
	mad.wide.s32 	%rd390, %r577, 4, %rd287;
	.loc	1 237 42                        // hopper-fa-ws-pipelined-pingpong.py:237:42
	mad.wide.s32 	%rd391, %r6113, 4, %rd390;
	add.s64 	%rd388, %rd391, 256;
	.loc	1 238 29                        // hopper-fa-ws-pipelined-pingpong.py:238:29
	bar.sync 	3, 128;
	shl.b32 	%r6114, %r1, 1;
	and.b32 	%r6115, %r6114, 248;
	add.s32 	%r6117, %r602, 180224;
	add.s32 	%r6118, %r6117, %r6115;
	st.shared.v2.b32 	[%r6118], {%r6046, %r6047};
	bar.sync 	3, 128;
	and.b32 	%r6119, %r1, 7;
	shl.b32 	%r6120, %r6119, 3;
	shl.b32 	%r6121, %r1, 2;
	and.b32 	%r6122, %r6121, 192;
	shr.u32 	%r6123, %r1, 1;
	and.b32 	%r6124, %r6123, 4;
	add.s32 	%r6125, %r6117, %r6120;
	add.s32 	%r6126, %r6125, %r6122;
	add.s32 	%r6127, %r6126, %r6124;
	ld.shared.b32 	%r6039, [%r6127];
	and.b32 	%r6128, %r1, 64;
	setp.eq.b32 	%p49, %r6128, 0;
	// begin inline asm
	@%p49 st.global.b32 [ %rd388 + 0 ], { %r6039 };
	// end inline asm
	.loc	1 239 56                        // hopper-fa-ws-pipelined-pingpong.py:239:56
	cvt.rn.f16x2.f32 	%r6129, %r6049, %r6048;
	cvt.rn.f16x2.f32 	%r6130, %r6051, %r6050;
	cvt.rn.f16x2.f32 	%r6131, %r6053, %r6052;
	cvt.rn.f16x2.f32 	%r6132, %r6055, %r6054;
	cvt.rn.f16x2.f32 	%r6133, %r6057, %r6056;
	cvt.rn.f16x2.f32 	%r6134, %r6059, %r6058;
	cvt.rn.f16x2.f32 	%r6135, %r6061, %r6060;
	cvt.rn.f16x2.f32 	%r6136, %r6063, %r6062;
	cvt.rn.f16x2.f32 	%r6137, %r6065, %r6064;
	cvt.rn.f16x2.f32 	%r6138, %r6067, %r6066;
	cvt.rn.f16x2.f32 	%r6139, %r6069, %r6068;
	cvt.rn.f16x2.f32 	%r6140, %r6071, %r6070;
	cvt.rn.f16x2.f32 	%r6141, %r6073, %r6072;
	cvt.rn.f16x2.f32 	%r6142, %r6075, %r6074;
	cvt.rn.f16x2.f32 	%r6143, %r6077, %r6076;
	cvt.rn.f16x2.f32 	%r6144, %r6079, %r6078;
	cvt.rn.f16x2.f32 	%r6145, %r6081, %r6080;
	cvt.rn.f16x2.f32 	%r6146, %r6083, %r6082;
	cvt.rn.f16x2.f32 	%r6147, %r6085, %r6084;
	cvt.rn.f16x2.f32 	%r6148, %r6087, %r6086;
	cvt.rn.f16x2.f32 	%r6149, %r6089, %r6088;
	cvt.rn.f16x2.f32 	%r6150, %r6091, %r6090;
	cvt.rn.f16x2.f32 	%r6151, %r6093, %r6092;
	cvt.rn.f16x2.f32 	%r6152, %r6095, %r6094;
	cvt.rn.f16x2.f32 	%r6153, %r6097, %r6096;
	cvt.rn.f16x2.f32 	%r6154, %r6099, %r6098;
	cvt.rn.f16x2.f32 	%r6155, %r6101, %r6100;
	cvt.rn.f16x2.f32 	%r6156, %r6103, %r6102;
	cvt.rn.f16x2.f32 	%r6157, %r6105, %r6104;
	cvt.rn.f16x2.f32 	%r6158, %r6107, %r6106;
	cvt.rn.f16x2.f32 	%r6159, %r6109, %r6108;
	cvt.rn.f16x2.f32 	%r6160, %r6111, %r6110;
	.loc	1 239 49                        // hopper-fa-ws-pipelined-pingpong.py:239:49
	bar.sync 	3, 128;
	shl.b32 	%r6161, %r1, 7;
	and.b32 	%r6162, %r6161, 1920;
	shl.b32 	%r6163, %r1, 6;
	and.b32 	%r6164, %r6163, 6144;
	shl.b32 	%r6165, %r6119, 4;
	and.b32 	%r6166, %r1, 16;
	or.b32 	%r6167, %r6162, %r6165;
	xor.b32 	%r6168, %r6167, %r6166;
	or.b32 	%r6169, %r6168, %r6164;
	add.s32 	%r6170, %r6117, %r6169;
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r6170], {%r6129, %r6130, %r6131, %r6132};
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r6170+8192], {%r6145, %r6146, %r6147, %r6148};
	xor.b32 	%r6171, %r6169, 32;
	add.s32 	%r6172, %r6117, %r6171;
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r6172], {%r6133, %r6134, %r6135, %r6136};
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r6172+8192], {%r6149, %r6150, %r6151, %r6152};
	xor.b32 	%r6173, %r6169, 64;
	add.s32 	%r6174, %r6117, %r6173;
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r6174], {%r6137, %r6138, %r6139, %r6140};
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r6174+8192], {%r6153, %r6154, %r6155, %r6156};
	xor.b32 	%r6175, %r6169, 96;
	add.s32 	%r6176, %r6117, %r6175;
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r6176], {%r6141, %r6142, %r6143, %r6144};
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r6176+8192], {%r6157, %r6158, %r6159, %r6160};
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	3, 128;
	elect.sync 	%r6177|%p52, -1;
	setp.lt.u32 	%p53, %r298, 64;
	and.pred 	%p50, %p53, %p52;
	and.b32 	%r6178, %r297, 1;
	shl.b32 	%r6179, %r6178, 13;
	add.s32 	%r6042, %r6117, %r6179;
	shl.b32 	%r6040, %r6178, 6;
	// begin inline asm
	@%p50 cp.async.bulk.tensor.2d.global.shared::cta.bulk_group [%rd1, {%r6040, %r6041}], [%r6042];
	// end inline asm
	cp.async.bulk.commit_group;
	cp.async.bulk.wait_group.read 	0;
	bar.sync 	3, 128;
	barrier.sync 	1;
	setmaxnreg.dec.sync.aligned.u32 	120;
$L__BB0_2:                              // %.preheader
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_16 Depth 2
                                        //     Child Loop BB0_8 Depth 2
	.loc	1 40 0                          // hopper-fa-ws-pipelined-pingpong.py:40
	setmaxnreg.dec.sync.aligned.u32 	120;
	barrier.sync 	1;
	ld.shared.b8 	%rs1, [%r603+196684];
	setp.eq.b16 	%p2, %rs1, 0;
	@%p2 bra 	$L__BB0_6;
// %bb.3:                               // %.preheader
                                        //   in Loop: Header=BB0_2 Depth=1
	setp.eq.b16 	%p3, %rs1, 1;
	@%p3 bra 	$L__BB0_14;
// %bb.4:                               // %.preheader
                                        //   in Loop: Header=BB0_2 Depth=1
	setp.eq.b16 	%p4, %rs1, 2;
	@%p4 bra 	$L__BB0_26;
// %bb.5:                               //   in Loop: Header=BB0_2 Depth=1
	barrier.sync 	1;
	barrier.sync 	1;
	bra.uni 	$L__BB0_2;
$L__BB0_14:                             // %__nv_exp2f.exit
                                        //   in Loop: Header=BB0_2 Depth=1
	.loc	1 65 9                          // hopper-fa-ws-pipelined-pingpong.py:65:9
	setmaxnreg.inc.sync.aligned.u32 	232;
	barrier.sync 	1;
	.loc	1 116 24                        // hopper-fa-ws-pipelined-pingpong.py:116:24
	mul.f32 	%r296, %r600, 0f3FB8AA3B;
	.loc	1 120 43                        // hopper-fa-ws-pipelined-pingpong.py:120:43
	add.s32 	%r604, %r602, 196616;
	mov.b32 	%r12100, 0;
	// begin inline asm
	
{
	.reg .pred complete;
	waitLoop:
	mbarrier.try_wait.parity.shared.b64 complete, [%r604], %r12100;
	@!complete bra.uni waitLoop;
}

	// end inline asm
	.loc	1 129 48                        // hopper-fa-ws-pipelined-pingpong.py:129:48
	add.s32 	%r606, %r602, 196640;
	// begin inline asm
	
{
	.reg .pred complete;
	waitLoop:
	mbarrier.try_wait.parity.shared.b64 complete, [%r606], %r12100;
	@!complete bra.uni waitLoop;
}

	// end inline asm
	mov.b32 	%r608, 9;
	mov.b32 	%r609, 256;
	.loc	1 139 44                        // hopper-fa-ws-pipelined-pingpong.py:139:44
	// begin inline asm
	bar.arrive %r608, %r609;
	// end inline asm
	mov.b32 	%r610, 10;
	.loc	1 141 43                        // hopper-fa-ws-pipelined-pingpong.py:141:43
	// begin inline asm
	bar.sync %r610, %r609;
	// end inline asm
	.loc	1 143 45                        // hopper-fa-ws-pipelined-pingpong.py:143:45
	add.s32 	%r1704, %r1, -256;
	shr.u32 	%r1705, %r1704, 5;
	shfl.sync.idx.b32 	%r297, %r1705, 0, 31, -1;
	wgmma.fence.sync.aligned;
	add.s32 	%r1706, %r602, 147456;
	bfe.u32 	%r1707, %r1706, 4, 14;
	cvt.u64.u32 	%rd308, %r1707;
	or.b64 	%rd328, %rd308, 4611686293338849280;
	bfe.u32 	%r1708, %r602, 4, 14;
	cvt.u64.u32 	%rd309, %r1708;
	or.b64 	%rd293, %rd309, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r804,%r805,%r806,%r807,%r808,%r809,%r810,%r811,%r812,%r813,%r814,%r815,%r816,%r817,%r818,%r819,%r820,%r821,%r822,%r823,%r824,%r825,%r826,%r827,%r828,%r829,%r830,%r831,%r832,%r833,%r834,%r835,%r836,%r837,%r838,%r839,%r840,%r841,%r842,%r843,%r844,%r845,%r846,%r847,%r848,%r849,%r850,%r851,%r852,%r853,%r854,%r855,%r856,%r857,%r858,%r859,%r860,%r861,%r862,%r863,%r864,%r865,%r866,%r867}, %rd328, %rd293, 0, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r1709, %r602, 147488;
	bfe.u32 	%r1710, %r1709, 4, 14;
	cvt.u64.u32 	%rd310, %r1710;
	or.b64 	%rd330, %rd310, 4611686293338849280;
	add.s32 	%r1711, %r602, 32;
	bfe.u32 	%r1712, %r1711, 4, 14;
	cvt.u64.u32 	%rd311, %r1712;
	or.b64 	%rd295, %rd311, 4611686293372403712;
	mov.pred 	%p5, -1;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r804,%r805,%r806,%r807,%r808,%r809,%r810,%r811,%r812,%r813,%r814,%r815,%r816,%r817,%r818,%r819,%r820,%r821,%r822,%r823,%r824,%r825,%r826,%r827,%r828,%r829,%r830,%r831,%r832,%r833,%r834,%r835,%r836,%r837,%r838,%r839,%r840,%r841,%r842,%r843,%r844,%r845,%r846,%r847,%r848,%r849,%r850,%r851,%r852,%r853,%r854,%r855,%r856,%r857,%r858,%r859,%r860,%r861,%r862,%r863,%r864,%r865,%r866,%r867}, %rd330, %rd295, %p5, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r1713, %r602, 147520;
	bfe.u32 	%r1714, %r1713, 4, 14;
	cvt.u64.u32 	%rd312, %r1714;
	or.b64 	%rd332, %rd312, 4611686293338849280;
	add.s32 	%r1715, %r602, 64;
	bfe.u32 	%r1716, %r1715, 4, 14;
	cvt.u64.u32 	%rd313, %r1716;
	or.b64 	%rd297, %rd313, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r804,%r805,%r806,%r807,%r808,%r809,%r810,%r811,%r812,%r813,%r814,%r815,%r816,%r817,%r818,%r819,%r820,%r821,%r822,%r823,%r824,%r825,%r826,%r827,%r828,%r829,%r830,%r831,%r832,%r833,%r834,%r835,%r836,%r837,%r838,%r839,%r840,%r841,%r842,%r843,%r844,%r845,%r846,%r847,%r848,%r849,%r850,%r851,%r852,%r853,%r854,%r855,%r856,%r857,%r858,%r859,%r860,%r861,%r862,%r863,%r864,%r865,%r866,%r867}, %rd332, %rd297, %p5, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r1717, %r602, 147552;
	bfe.u32 	%r1718, %r1717, 4, 14;
	cvt.u64.u32 	%rd314, %r1718;
	or.b64 	%rd334, %rd314, 4611686293338849280;
	add.s32 	%r1719, %r602, 96;
	bfe.u32 	%r1720, %r1719, 4, 14;
	cvt.u64.u32 	%rd315, %r1720;
	or.b64 	%rd299, %rd315, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r804,%r805,%r806,%r807,%r808,%r809,%r810,%r811,%r812,%r813,%r814,%r815,%r816,%r817,%r818,%r819,%r820,%r821,%r822,%r823,%r824,%r825,%r826,%r827,%r828,%r829,%r830,%r831,%r832,%r833,%r834,%r835,%r836,%r837,%r838,%r839,%r840,%r841,%r842,%r843,%r844,%r845,%r846,%r847,%r848,%r849,%r850,%r851,%r852,%r853,%r854,%r855,%r856,%r857,%r858,%r859,%r860,%r861,%r862,%r863,%r864,%r865,%r866,%r867}, %rd334, %rd299, %p5, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r1721, %r602, 155648;
	bfe.u32 	%r1722, %r1721, 4, 14;
	cvt.u64.u32 	%rd316, %r1722;
	or.b64 	%rd336, %rd316, 4611686293338849280;
	add.s32 	%r1723, %r602, 16384;
	bfe.u32 	%r1724, %r1723, 4, 14;
	cvt.u64.u32 	%rd317, %r1724;
	or.b64 	%rd301, %rd317, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r804,%r805,%r806,%r807,%r808,%r809,%r810,%r811,%r812,%r813,%r814,%r815,%r816,%r817,%r818,%r819,%r820,%r821,%r822,%r823,%r824,%r825,%r826,%r827,%r828,%r829,%r830,%r831,%r832,%r833,%r834,%r835,%r836,%r837,%r838,%r839,%r840,%r841,%r842,%r843,%r844,%r845,%r846,%r847,%r848,%r849,%r850,%r851,%r852,%r853,%r854,%r855,%r856,%r857,%r858,%r859,%r860,%r861,%r862,%r863,%r864,%r865,%r866,%r867}, %rd336, %rd301, %p5, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r1725, %r602, 155680;
	bfe.u32 	%r1726, %r1725, 4, 14;
	cvt.u64.u32 	%rd318, %r1726;
	or.b64 	%rd338, %rd318, 4611686293338849280;
	add.s32 	%r1727, %r602, 16416;
	bfe.u32 	%r1728, %r1727, 4, 14;
	cvt.u64.u32 	%rd319, %r1728;
	or.b64 	%rd303, %rd319, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r804,%r805,%r806,%r807,%r808,%r809,%r810,%r811,%r812,%r813,%r814,%r815,%r816,%r817,%r818,%r819,%r820,%r821,%r822,%r823,%r824,%r825,%r826,%r827,%r828,%r829,%r830,%r831,%r832,%r833,%r834,%r835,%r836,%r837,%r838,%r839,%r840,%r841,%r842,%r843,%r844,%r845,%r846,%r847,%r848,%r849,%r850,%r851,%r852,%r853,%r854,%r855,%r856,%r857,%r858,%r859,%r860,%r861,%r862,%r863,%r864,%r865,%r866,%r867}, %rd338, %rd303, %p5, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r1729, %r602, 155712;
	bfe.u32 	%r1730, %r1729, 4, 14;
	cvt.u64.u32 	%rd320, %r1730;
	or.b64 	%rd340, %rd320, 4611686293338849280;
	add.s32 	%r1731, %r602, 16448;
	bfe.u32 	%r1732, %r1731, 4, 14;
	cvt.u64.u32 	%rd321, %r1732;
	or.b64 	%rd305, %rd321, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r804,%r805,%r806,%r807,%r808,%r809,%r810,%r811,%r812,%r813,%r814,%r815,%r816,%r817,%r818,%r819,%r820,%r821,%r822,%r823,%r824,%r825,%r826,%r827,%r828,%r829,%r830,%r831,%r832,%r833,%r834,%r835,%r836,%r837,%r838,%r839,%r840,%r841,%r842,%r843,%r844,%r845,%r846,%r847,%r848,%r849,%r850,%r851,%r852,%r853,%r854,%r855,%r856,%r857,%r858,%r859,%r860,%r861,%r862,%r863,%r864,%r865,%r866,%r867}, %rd340, %rd305, %p5, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r1733, %r602, 155744;
	bfe.u32 	%r1734, %r1733, 4, 14;
	cvt.u64.u32 	%rd322, %r1734;
	or.b64 	%rd342, %rd322, 4611686293338849280;
	add.s32 	%r1735, %r602, 16480;
	bfe.u32 	%r1736, %r1735, 4, 14;
	cvt.u64.u32 	%rd323, %r1736;
	or.b64 	%rd307, %rd323, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r804,%r805,%r806,%r807,%r808,%r809,%r810,%r811,%r812,%r813,%r814,%r815,%r816,%r817,%r818,%r819,%r820,%r821,%r822,%r823,%r824,%r825,%r826,%r827,%r828,%r829,%r830,%r831,%r832,%r833,%r834,%r835,%r836,%r837,%r838,%r839,%r840,%r841,%r842,%r843,%r844,%r845,%r846,%r847,%r848,%r849,%r850,%r851,%r852,%r853,%r854,%r855,%r856,%r857,%r858,%r859,%r860,%r861,%r862,%r863,%r864,%r865,%r866,%r867}, %rd342, %rd307, %p5, 1, 1, 0, 0;
	// end inline asm
	wgmma.commit_group.sync.aligned;
	.loc	1 150 39                        // hopper-fa-ws-pipelined-pingpong.py:150:39
	// begin inline asm
	// wait for regs: %r804,%r805,%r806,%r807,%r808,%r809,%r810,%r811,%r812,%r813,%r814,%r815,%r816,%r817,%r818,%r819,%r820,%r821,%r822,%r823,%r824,%r825,%r826,%r827,%r828,%r829,%r830,%r831,%r832,%r833,%r834,%r835,%r836,%r837,%r838,%r839,%r840,%r841,%r842,%r843,%r844,%r845,%r846,%r847,%r848,%r849,%r850,%r851,%r852,%r853,%r854,%r855,%r856,%r857,%r858,%r859,%r860,%r861,%r862,%r863,%r864,%r865,%r866,%r867
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 152 52                        // hopper-fa-ws-pipelined-pingpong.py:152:52
	bar.sync 	3, 128;
	and.b32 	%r298, %r1, 127;
	setp.eq.b32 	%p29, %r298, 0;
	add.s32 	%r1700, %r602, 196624;
	// begin inline asm
	@%p29 mbarrier.arrive.shared::cta.b64 _, [%r1700];
	// end inline asm
$L__tmp1:
	.loc	2 168 27                        // standard.py:168:27 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	max.f32 	%r1737, %r804, %r805;
	max.f32 	%r1738, %r806, %r807;
	max.f32 	%r1739, %r1737, %r808;
	max.f32 	%r1740, %r1739, %r809;
	max.f32 	%r1741, %r1738, %r810;
	max.f32 	%r1742, %r1741, %r811;
	max.f32 	%r1743, %r1740, %r812;
	max.f32 	%r1744, %r1743, %r813;
	max.f32 	%r1745, %r1742, %r814;
	max.f32 	%r1746, %r1745, %r815;
	max.f32 	%r1747, %r1744, %r816;
	max.f32 	%r1748, %r1747, %r817;
	max.f32 	%r1749, %r1746, %r818;
	max.f32 	%r1750, %r1749, %r819;
	max.f32 	%r1751, %r1748, %r820;
	max.f32 	%r1752, %r1751, %r821;
	max.f32 	%r1753, %r1750, %r822;
	max.f32 	%r1754, %r1753, %r823;
	max.f32 	%r1755, %r1752, %r824;
	max.f32 	%r1756, %r1755, %r825;
	max.f32 	%r1757, %r1754, %r826;
	max.f32 	%r1758, %r1757, %r827;
	max.f32 	%r1759, %r1756, %r828;
	max.f32 	%r1760, %r1759, %r829;
	max.f32 	%r1761, %r1758, %r830;
	max.f32 	%r1762, %r1761, %r831;
	max.f32 	%r1763, %r1760, %r832;
	max.f32 	%r1764, %r1763, %r833;
	max.f32 	%r1765, %r1762, %r834;
	max.f32 	%r1766, %r1765, %r835;
	max.f32 	%r1767, %r1764, %r836;
	max.f32 	%r1768, %r1767, %r837;
	max.f32 	%r1769, %r1766, %r838;
	max.f32 	%r1770, %r1769, %r839;
	max.f32 	%r1771, %r1768, %r840;
	max.f32 	%r1772, %r1771, %r841;
	max.f32 	%r1773, %r1770, %r842;
	max.f32 	%r1774, %r1773, %r843;
	max.f32 	%r1775, %r1772, %r844;
	max.f32 	%r1776, %r1775, %r845;
	max.f32 	%r1777, %r1774, %r846;
	max.f32 	%r1778, %r1777, %r847;
	max.f32 	%r1779, %r1776, %r848;
	max.f32 	%r1780, %r1779, %r849;
	max.f32 	%r1781, %r1778, %r850;
	max.f32 	%r1782, %r1781, %r851;
	max.f32 	%r1783, %r1780, %r852;
	max.f32 	%r1784, %r1783, %r853;
	max.f32 	%r1785, %r1782, %r854;
	max.f32 	%r1786, %r1785, %r855;
	max.f32 	%r1787, %r1784, %r856;
	max.f32 	%r1788, %r1787, %r857;
	max.f32 	%r1789, %r1786, %r858;
	max.f32 	%r1790, %r1789, %r859;
	max.f32 	%r1791, %r1788, %r860;
	max.f32 	%r1792, %r1791, %r861;
	max.f32 	%r1793, %r1790, %r862;
	max.f32 	%r1794, %r1793, %r863;
	max.f32 	%r1795, %r1792, %r864;
	max.f32 	%r1796, %r1795, %r865;
	max.f32 	%r1797, %r1794, %r866;
	max.f32 	%r1798, %r1797, %r867;
	.loc	2 189 40                        // standard.py:189:40 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	shfl.sync.bfly.b32 	%r1799, %r1796, 2, 31, -1;
	.loc	2 168 27                        // standard.py:168:27 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	max.f32 	%r1800, %r1796, %r1799;
	.loc	2 189 40                        // standard.py:189:40 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	shfl.sync.bfly.b32 	%r1801, %r1800, 1, 31, -1;
	shfl.sync.bfly.b32 	%r1802, %r1798, 2, 31, -1;
	.loc	2 168 27                        // standard.py:168:27 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	max.f32 	%r1803, %r1798, %r1802;
	.loc	2 189 40                        // standard.py:189:40 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	shfl.sync.bfly.b32 	%r1804, %r1803, 1, 31, -1;
	cvt.u64.u32 	%rd324, %r1801;
	cvt.u64.u32 	%rd325, %r1804;
	shl.b64 	%rd326, %rd325, 32;
	or.b64 	%rd327, %rd324, %rd326;
	.loc	2 168 27                        // standard.py:168:27 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	mov.b64 	{%r1805, %r1806}, %rd327;
	max.f32 	%r1807, %r1803, %r1806;
	max.f32 	%r1808, %r1800, %r1805;
$L__tmp2:
	.loc	1 155 51                        // hopper-fa-ws-pipelined-pingpong.py:155:51
	mul.f32 	%r1809, %r296, %r1808;
	mul.f32 	%r1810, %r296, %r1807;
	.loc	1 155 35                        // hopper-fa-ws-pipelined-pingpong.py:155:35
	max.f32 	%r1811, %r1810, 0fFF800000;
	max.f32 	%r1812, %r1809, 0fFF800000;
	mov.b64 	%rd594, {%r1812, %r1811};
	.loc	1 156 33                        // hopper-fa-ws-pipelined-pingpong.py:156:33
	neg.f32 	%r1813, %r1812;
	fma.rn.f32 	%r1814, %r296, %r804, %r1813;
	fma.rn.f32 	%r1815, %r296, %r805, %r1813;
	neg.f32 	%r1816, %r1811;
	fma.rn.f32 	%r1817, %r296, %r806, %r1816;
	fma.rn.f32 	%r1818, %r296, %r807, %r1816;
	fma.rn.f32 	%r1819, %r296, %r808, %r1813;
	fma.rn.f32 	%r1820, %r296, %r809, %r1813;
	fma.rn.f32 	%r1821, %r296, %r810, %r1816;
	fma.rn.f32 	%r1822, %r296, %r811, %r1816;
	fma.rn.f32 	%r1823, %r296, %r812, %r1813;
	fma.rn.f32 	%r1824, %r296, %r813, %r1813;
	fma.rn.f32 	%r1825, %r296, %r814, %r1816;
	fma.rn.f32 	%r1826, %r296, %r815, %r1816;
	fma.rn.f32 	%r1827, %r296, %r816, %r1813;
	fma.rn.f32 	%r1828, %r296, %r817, %r1813;
	fma.rn.f32 	%r1829, %r296, %r818, %r1816;
	fma.rn.f32 	%r1830, %r296, %r819, %r1816;
	fma.rn.f32 	%r1831, %r296, %r820, %r1813;
	fma.rn.f32 	%r1832, %r296, %r821, %r1813;
	fma.rn.f32 	%r1833, %r296, %r822, %r1816;
	fma.rn.f32 	%r1834, %r296, %r823, %r1816;
	fma.rn.f32 	%r1835, %r296, %r824, %r1813;
	fma.rn.f32 	%r1836, %r296, %r825, %r1813;
	fma.rn.f32 	%r1837, %r296, %r826, %r1816;
	fma.rn.f32 	%r1838, %r296, %r827, %r1816;
	fma.rn.f32 	%r1839, %r296, %r828, %r1813;
	fma.rn.f32 	%r1840, %r296, %r829, %r1813;
	fma.rn.f32 	%r1841, %r296, %r830, %r1816;
	fma.rn.f32 	%r1842, %r296, %r831, %r1816;
	fma.rn.f32 	%r1843, %r296, %r832, %r1813;
	fma.rn.f32 	%r1844, %r296, %r833, %r1813;
	fma.rn.f32 	%r1845, %r296, %r834, %r1816;
	fma.rn.f32 	%r1846, %r296, %r835, %r1816;
	fma.rn.f32 	%r1847, %r296, %r836, %r1813;
	fma.rn.f32 	%r1848, %r296, %r837, %r1813;
	fma.rn.f32 	%r1849, %r296, %r838, %r1816;
	fma.rn.f32 	%r1850, %r296, %r839, %r1816;
	fma.rn.f32 	%r1851, %r296, %r840, %r1813;
	fma.rn.f32 	%r1852, %r296, %r841, %r1813;
	fma.rn.f32 	%r1853, %r296, %r842, %r1816;
	fma.rn.f32 	%r1854, %r296, %r843, %r1816;
	fma.rn.f32 	%r1855, %r296, %r844, %r1813;
	fma.rn.f32 	%r1856, %r296, %r845, %r1813;
	fma.rn.f32 	%r1857, %r296, %r846, %r1816;
	fma.rn.f32 	%r1858, %r296, %r847, %r1816;
	fma.rn.f32 	%r1859, %r296, %r848, %r1813;
	fma.rn.f32 	%r1860, %r296, %r849, %r1813;
	fma.rn.f32 	%r1861, %r296, %r850, %r1816;
	fma.rn.f32 	%r1862, %r296, %r851, %r1816;
	fma.rn.f32 	%r1863, %r296, %r852, %r1813;
	fma.rn.f32 	%r1864, %r296, %r853, %r1813;
	fma.rn.f32 	%r1865, %r296, %r854, %r1816;
	fma.rn.f32 	%r1866, %r296, %r855, %r1816;
	fma.rn.f32 	%r1867, %r296, %r856, %r1813;
	fma.rn.f32 	%r1868, %r296, %r857, %r1813;
	fma.rn.f32 	%r1869, %r296, %r858, %r1816;
	fma.rn.f32 	%r1870, %r296, %r859, %r1816;
	fma.rn.f32 	%r1871, %r296, %r860, %r1813;
	fma.rn.f32 	%r1872, %r296, %r861, %r1813;
	fma.rn.f32 	%r1873, %r296, %r862, %r1816;
	fma.rn.f32 	%r1874, %r296, %r863, %r1816;
	fma.rn.f32 	%r1875, %r296, %r864, %r1813;
	fma.rn.f32 	%r1876, %r296, %r865, %r1813;
	fma.rn.f32 	%r1877, %r296, %r866, %r1816;
	fma.rn.f32 	%r1878, %r296, %r867, %r1816;
	.loc	1 157 29                        // hopper-fa-ws-pipelined-pingpong.py:157:29
	ex2.approx.ftz.f32 	%r1879, %r1814;
	ex2.approx.ftz.f32 	%r1880, %r1815;
	ex2.approx.ftz.f32 	%r1881, %r1817;
	ex2.approx.ftz.f32 	%r1882, %r1818;
	ex2.approx.ftz.f32 	%r1883, %r1819;
	ex2.approx.ftz.f32 	%r1884, %r1820;
	ex2.approx.ftz.f32 	%r1885, %r1821;
	ex2.approx.ftz.f32 	%r1886, %r1822;
	ex2.approx.ftz.f32 	%r1887, %r1823;
	ex2.approx.ftz.f32 	%r1888, %r1824;
	ex2.approx.ftz.f32 	%r1889, %r1825;
	ex2.approx.ftz.f32 	%r1890, %r1826;
	ex2.approx.ftz.f32 	%r1891, %r1827;
	ex2.approx.ftz.f32 	%r1892, %r1828;
	ex2.approx.ftz.f32 	%r1893, %r1829;
	ex2.approx.ftz.f32 	%r1894, %r1830;
	ex2.approx.ftz.f32 	%r1895, %r1831;
	ex2.approx.ftz.f32 	%r1896, %r1832;
	ex2.approx.ftz.f32 	%r1897, %r1833;
	ex2.approx.ftz.f32 	%r1898, %r1834;
	ex2.approx.ftz.f32 	%r1899, %r1835;
	ex2.approx.ftz.f32 	%r1900, %r1836;
	ex2.approx.ftz.f32 	%r1901, %r1837;
	ex2.approx.ftz.f32 	%r1902, %r1838;
	ex2.approx.ftz.f32 	%r1903, %r1839;
	ex2.approx.ftz.f32 	%r1904, %r1840;
	ex2.approx.ftz.f32 	%r1905, %r1841;
	ex2.approx.ftz.f32 	%r1906, %r1842;
	ex2.approx.ftz.f32 	%r1907, %r1843;
	ex2.approx.ftz.f32 	%r1908, %r1844;
	ex2.approx.ftz.f32 	%r1909, %r1845;
	ex2.approx.ftz.f32 	%r1910, %r1846;
	ex2.approx.ftz.f32 	%r1911, %r1847;
	ex2.approx.ftz.f32 	%r1912, %r1848;
	ex2.approx.ftz.f32 	%r1913, %r1849;
	ex2.approx.ftz.f32 	%r1914, %r1850;
	ex2.approx.ftz.f32 	%r1915, %r1851;
	ex2.approx.ftz.f32 	%r1916, %r1852;
	ex2.approx.ftz.f32 	%r1917, %r1853;
	ex2.approx.ftz.f32 	%r1918, %r1854;
	ex2.approx.ftz.f32 	%r1919, %r1855;
	ex2.approx.ftz.f32 	%r1920, %r1856;
	ex2.approx.ftz.f32 	%r1921, %r1857;
	ex2.approx.ftz.f32 	%r1922, %r1858;
	ex2.approx.ftz.f32 	%r1923, %r1859;
	ex2.approx.ftz.f32 	%r1924, %r1860;
	ex2.approx.ftz.f32 	%r1925, %r1861;
	ex2.approx.ftz.f32 	%r1926, %r1862;
	ex2.approx.ftz.f32 	%r1927, %r1863;
	ex2.approx.ftz.f32 	%r1928, %r1864;
	ex2.approx.ftz.f32 	%r1929, %r1865;
	ex2.approx.ftz.f32 	%r1930, %r1866;
	ex2.approx.ftz.f32 	%r1931, %r1867;
	ex2.approx.ftz.f32 	%r1932, %r1868;
	ex2.approx.ftz.f32 	%r1933, %r1869;
	ex2.approx.ftz.f32 	%r1934, %r1870;
	ex2.approx.ftz.f32 	%r1935, %r1871;
	ex2.approx.ftz.f32 	%r1936, %r1872;
	ex2.approx.ftz.f32 	%r1937, %r1873;
	ex2.approx.ftz.f32 	%r1938, %r1874;
	ex2.approx.ftz.f32 	%r1939, %r1875;
	ex2.approx.ftz.f32 	%r1940, %r1876;
	ex2.approx.ftz.f32 	%r1941, %r1877;
	ex2.approx.ftz.f32 	%r1942, %r1878;
	mov.b32 	%r1943, 0fFF800000;
	.loc	1 159 39                        // hopper-fa-ws-pipelined-pingpong.py:159:39
	sub.f32 	%r1944, %r1943, %r1812;
	sub.f32 	%r1945, %r1943, %r1811;
	.loc	1 159 33                        // hopper-fa-ws-pipelined-pingpong.py:159:33
	ex2.approx.ftz.f32 	%r1946, %r1944;
	ex2.approx.ftz.f32 	%r1947, %r1945;
	.loc	1 161 24                        // hopper-fa-ws-pipelined-pingpong.py:161:24
	mul.f32 	%r12029, %r1946, 0f00000000;
	mul.f32 	%r12027, %r1947, 0f00000000;
$L__tmp3:
	.loc	2 261 15                        // standard.py:261:15 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	add.f32 	%r1948, %r1879, %r1880;
	add.f32 	%r1949, %r1881, %r1882;
	add.f32 	%r1950, %r1948, %r1883;
	add.f32 	%r1951, %r1950, %r1884;
	add.f32 	%r1952, %r1949, %r1885;
	add.f32 	%r1953, %r1952, %r1886;
	add.f32 	%r1954, %r1951, %r1887;
	add.f32 	%r1955, %r1954, %r1888;
	add.f32 	%r1956, %r1953, %r1889;
	add.f32 	%r1957, %r1956, %r1890;
	add.f32 	%r1958, %r1955, %r1891;
	add.f32 	%r1959, %r1958, %r1892;
	add.f32 	%r1960, %r1957, %r1893;
	add.f32 	%r1961, %r1960, %r1894;
	add.f32 	%r1962, %r1959, %r1895;
	add.f32 	%r1963, %r1962, %r1896;
	add.f32 	%r1964, %r1961, %r1897;
	add.f32 	%r1965, %r1964, %r1898;
	add.f32 	%r1966, %r1963, %r1899;
	add.f32 	%r1967, %r1966, %r1900;
	add.f32 	%r1968, %r1965, %r1901;
	add.f32 	%r1969, %r1968, %r1902;
	add.f32 	%r1970, %r1967, %r1903;
	add.f32 	%r1971, %r1970, %r1904;
	add.f32 	%r1972, %r1969, %r1905;
	add.f32 	%r1973, %r1972, %r1906;
	add.f32 	%r1974, %r1971, %r1907;
	add.f32 	%r1975, %r1974, %r1908;
	add.f32 	%r1976, %r1973, %r1909;
	add.f32 	%r1977, %r1976, %r1910;
	add.f32 	%r1978, %r1975, %r1911;
	add.f32 	%r1979, %r1978, %r1912;
	add.f32 	%r1980, %r1977, %r1913;
	add.f32 	%r1981, %r1980, %r1914;
	add.f32 	%r1982, %r1979, %r1915;
	add.f32 	%r1983, %r1982, %r1916;
	add.f32 	%r1984, %r1981, %r1917;
	add.f32 	%r1985, %r1984, %r1918;
	add.f32 	%r1986, %r1983, %r1919;
	add.f32 	%r1987, %r1986, %r1920;
	add.f32 	%r1988, %r1985, %r1921;
	add.f32 	%r1989, %r1988, %r1922;
	add.f32 	%r1990, %r1987, %r1923;
	add.f32 	%r1991, %r1990, %r1924;
	add.f32 	%r1992, %r1989, %r1925;
	add.f32 	%r1993, %r1992, %r1926;
	add.f32 	%r1994, %r1991, %r1927;
	add.f32 	%r1995, %r1994, %r1928;
	add.f32 	%r1996, %r1993, %r1929;
	add.f32 	%r1997, %r1996, %r1930;
	add.f32 	%r1998, %r1995, %r1931;
	add.f32 	%r1999, %r1998, %r1932;
	add.f32 	%r2000, %r1997, %r1933;
	add.f32 	%r2001, %r2000, %r1934;
	add.f32 	%r2002, %r1999, %r1935;
	add.f32 	%r2003, %r2002, %r1936;
	add.f32 	%r2004, %r2001, %r1937;
	add.f32 	%r2005, %r2004, %r1938;
	add.f32 	%r2006, %r2003, %r1939;
	add.f32 	%r2007, %r2006, %r1940;
	add.f32 	%r2008, %r2005, %r1941;
	add.f32 	%r2009, %r2008, %r1942;
	.loc	2 301 36                        // standard.py:301:36 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	shfl.sync.bfly.b32 	%r2010, %r2007, 2, 31, -1;
	.loc	2 261 15                        // standard.py:261:15 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	add.f32 	%r2011, %r2007, %r2010;
	.loc	2 301 36                        // standard.py:301:36 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	shfl.sync.bfly.b32 	%r2012, %r2011, 1, 31, -1;
	.loc	2 261 15                        // standard.py:261:15 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	add.f32 	%r2013, %r2011, %r2012;
	.loc	2 301 36                        // standard.py:301:36 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	shfl.sync.bfly.b32 	%r2014, %r2009, 2, 31, -1;
	.loc	2 261 15                        // standard.py:261:15 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	add.f32 	%r2015, %r2009, %r2014;
	.loc	2 301 36                        // standard.py:301:36 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	shfl.sync.bfly.b32 	%r2016, %r2015, 1, 31, -1;
	.loc	2 261 15                        // standard.py:261:15 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	add.f32 	%r2017, %r2015, %r2016;
$L__tmp4:
	.loc	1 163 32                        // hopper-fa-ws-pipelined-pingpong.py:163:32
	add.f32 	%r12033, %r1946, %r2013;
	add.f32 	%r12034, %r1947, %r2017;
	mov.b64 	%rd595, {%r1941, %r1942};
	mov.b64 	%rd596, {%r1939, %r1940};
	mov.b64 	%rd597, {%r1937, %r1938};
	mov.b64 	%rd598, {%r1935, %r1936};
	mov.b64 	%rd599, {%r1933, %r1934};
	mov.b64 	%rd600, {%r1931, %r1932};
	mov.b64 	%rd601, {%r1929, %r1930};
	mov.b64 	%rd602, {%r1927, %r1928};
	mov.b64 	%rd603, {%r1925, %r1926};
	mov.b64 	%rd604, {%r1923, %r1924};
	mov.b64 	%rd605, {%r1921, %r1922};
	mov.b64 	%rd606, {%r1919, %r1920};
	mov.b64 	%rd607, {%r1917, %r1918};
	mov.b64 	%rd608, {%r1915, %r1916};
	mov.b64 	%rd609, {%r1913, %r1914};
	mov.b64 	%rd610, {%r1911, %r1912};
	mov.b64 	%rd611, {%r1909, %r1910};
	mov.b64 	%rd612, {%r1907, %r1908};
	mov.b64 	%rd613, {%r1905, %r1906};
	mov.b64 	%rd614, {%r1903, %r1904};
	mov.b64 	%rd615, {%r1901, %r1902};
	mov.b64 	%rd616, {%r1899, %r1900};
	mov.b64 	%rd617, {%r1897, %r1898};
	mov.b64 	%rd618, {%r1895, %r1896};
	mov.b64 	%rd619, {%r1893, %r1894};
	mov.b64 	%rd620, {%r1891, %r1892};
	mov.b64 	%rd621, {%r1889, %r1890};
	mov.b64 	%rd622, {%r1887, %r1888};
	mov.b64 	%rd623, {%r1885, %r1886};
	mov.b64 	%rd624, {%r1883, %r1884};
	mov.b64 	%rd625, {%r1881, %r1882};
	mov.b64 	%rd626, {%r1879, %r1880};
	mov.b32 	%r12099, 1;
	mov.b32 	%r12028, %r12029;
	mov.b32 	%r12026, %r12027;
	mov.b32 	%r12025, %r12029;
	mov.b32 	%r12024, %r12029;
	mov.b32 	%r12023, %r12027;
	mov.b32 	%r12022, %r12027;
	mov.b32 	%r12021, %r12029;
	mov.b32 	%r12020, %r12029;
	mov.b32 	%r12019, %r12027;
	mov.b32 	%r12018, %r12027;
	mov.b32 	%r12017, %r12029;
	mov.b32 	%r12016, %r12029;
	mov.b32 	%r12015, %r12027;
	mov.b32 	%r12014, %r12027;
	mov.b32 	%r12013, %r12029;
	mov.b32 	%r12012, %r12029;
	mov.b32 	%r12011, %r12027;
	mov.b32 	%r12010, %r12027;
	mov.b32 	%r12009, %r12029;
	mov.b32 	%r12008, %r12029;
	mov.b32 	%r12007, %r12027;
	mov.b32 	%r12006, %r12027;
	mov.b32 	%r12005, %r12029;
	mov.b32 	%r12004, %r12029;
	mov.b32 	%r12003, %r12027;
	mov.b32 	%r12002, %r12027;
	mov.b32 	%r12001, %r12029;
	mov.b32 	%r12000, %r12029;
	mov.b32 	%r11999, %r12027;
	mov.b32 	%r11998, %r12027;
	mov.b32 	%r11997, %r12029;
	mov.b32 	%r11996, %r12029;
	mov.b32 	%r11995, %r12027;
	mov.b32 	%r11994, %r12027;
	mov.b32 	%r11993, %r12029;
	mov.b32 	%r11992, %r12029;
	mov.b32 	%r11991, %r12027;
	mov.b32 	%r11990, %r12027;
	mov.b32 	%r11989, %r12029;
	mov.b32 	%r11988, %r12029;
	mov.b32 	%r11987, %r12027;
	mov.b32 	%r11986, %r12027;
	mov.b32 	%r11985, %r12029;
	mov.b32 	%r11984, %r12029;
	mov.b32 	%r11983, %r12027;
	mov.b32 	%r11982, %r12027;
	mov.b32 	%r11981, %r12029;
	mov.b32 	%r11980, %r12029;
	mov.b32 	%r11979, %r12027;
	mov.b32 	%r11978, %r12027;
	mov.b32 	%r11977, %r12029;
	mov.b32 	%r11976, %r12029;
	mov.b32 	%r11975, %r12027;
	mov.b32 	%r11974, %r12027;
	mov.b32 	%r11973, %r12029;
	mov.b32 	%r11972, %r12029;
	mov.b32 	%r11971, %r12027;
	mov.b32 	%r11970, %r12027;
	mov.b32 	%r11969, %r12029;
	mov.b32 	%r11968, %r12029;
	mov.b32 	%r11967, %r12027;
	mov.b32 	%r11966, %r12027;
	.loc	1 168 48                        // hopper-fa-ws-pipelined-pingpong.py:168:48
	@%p62 bra 	$L__BB0_17;
// %bb.15:                              // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 48                          // hopper-fa-ws-pipelined-pingpong.py:0:48
	mov.b64 	%rd154, {%r296, %r296};
	mov.b32 	%r12032, 128;
	mov.b32 	%r11965, 0;
	mov.b32 	%r11963, 1;
	mov.b32 	%r12099, %r11963;
	mov.b32 	%r11966, %r12027;
	mov.b32 	%r11967, %r12027;
	mov.b32 	%r11968, %r12029;
	mov.b32 	%r11969, %r12029;
	mov.b32 	%r11970, %r12027;
	mov.b32 	%r11971, %r12027;
	mov.b32 	%r11972, %r12029;
	mov.b32 	%r11973, %r12029;
	mov.b32 	%r11974, %r12027;
	mov.b32 	%r11975, %r12027;
	mov.b32 	%r11976, %r12029;
	mov.b32 	%r11977, %r12029;
	mov.b32 	%r11978, %r12027;
	mov.b32 	%r11979, %r12027;
	mov.b32 	%r11980, %r12029;
	mov.b32 	%r11981, %r12029;
	mov.b32 	%r11982, %r12027;
	mov.b32 	%r11983, %r12027;
	mov.b32 	%r11984, %r12029;
	mov.b32 	%r11985, %r12029;
	mov.b32 	%r11986, %r12027;
	mov.b32 	%r11987, %r12027;
	mov.b32 	%r11988, %r12029;
	mov.b32 	%r11989, %r12029;
	mov.b32 	%r11990, %r12027;
	mov.b32 	%r11991, %r12027;
	mov.b32 	%r11992, %r12029;
	mov.b32 	%r11993, %r12029;
	mov.b32 	%r11994, %r12027;
	mov.b32 	%r11995, %r12027;
	mov.b32 	%r11996, %r12029;
	mov.b32 	%r11997, %r12029;
	mov.b32 	%r11998, %r12027;
	mov.b32 	%r11999, %r12027;
	mov.b32 	%r12000, %r12029;
	mov.b32 	%r12001, %r12029;
	mov.b32 	%r12002, %r12027;
	mov.b32 	%r12003, %r12027;
	mov.b32 	%r12004, %r12029;
	mov.b32 	%r12005, %r12029;
	mov.b32 	%r12006, %r12027;
	mov.b32 	%r12007, %r12027;
	mov.b32 	%r12008, %r12029;
	mov.b32 	%r12009, %r12029;
	mov.b32 	%r12010, %r12027;
	mov.b32 	%r12011, %r12027;
	mov.b32 	%r12012, %r12029;
	mov.b32 	%r12013, %r12029;
	mov.b32 	%r12014, %r12027;
	mov.b32 	%r12015, %r12027;
	mov.b32 	%r12016, %r12029;
	mov.b32 	%r12017, %r12029;
	mov.b32 	%r12018, %r12027;
	mov.b32 	%r12019, %r12027;
	mov.b32 	%r12020, %r12029;
	mov.b32 	%r12021, %r12029;
	mov.b32 	%r12022, %r12027;
	mov.b32 	%r12023, %r12027;
	mov.b32 	%r12024, %r12029;
	mov.b32 	%r12025, %r12029;
	mov.b32 	%r12026, %r12027;
	mov.b32 	%r12028, %r12029;
$L__BB0_16:                             // %.lr.ph
                                        //   Parent Loop BB0_2 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.loc	1 169 37                        // hopper-fa-ws-pipelined-pingpong.py:169:37
	shr.u32 	%r4299, %r11963, 31;
	add.s32 	%r4300, %r11963, %r4299;
	and.b32 	%r4301, %r4300, -2;
	sub.s32 	%r12100, %r11963, %r4301;
	.loc	1 171 49                        // hopper-fa-ws-pipelined-pingpong.py:171:49
	setp.eq.b32 	%p31, %r12100, 0;
	.loc	1 171 37                        // hopper-fa-ws-pipelined-pingpong.py:171:37
	selp.b32 	%r4302, 1, 0, %p31;
	xor.b32 	%r11965, %r11965, %r4302;
	.loc	1 174 41                        // hopper-fa-ws-pipelined-pingpong.py:174:41
	shl.b32 	%r4303, %r12100, 3;
	add.s32 	%r4305, %r602, %r4303;
	add.s32 	%r2021, %r4305, 196640;
	.loc	1 174 52                        // hopper-fa-ws-pipelined-pingpong.py:174:52
	bar.sync 	3, 128;
	// begin inline asm
	
{
	.reg .pred complete;
	waitLoop:
	mbarrier.try_wait.parity.shared.b64 complete, [%r2021], %r11965;
	@!complete bra.uni waitLoop;
}

	// end inline asm
	.loc	1 177 49                        // hopper-fa-ws-pipelined-pingpong.py:177:49
	shl.b32 	%r4306, %r12100, 15;
	add.s32 	%r4307, %r602, %r4306;
	.loc	1 178 49                        // hopper-fa-ws-pipelined-pingpong.py:178:49
	wgmma.fence.sync.aligned;
	bfe.u32 	%r4308, %r4307, 4, 14;
	cvt.u64.u32 	%rd352, %r4308;
	or.b64 	%rd329, %rd352, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r2215,%r2216,%r2217,%r2218,%r2219,%r2220,%r2221,%r2222,%r2223,%r2224,%r2225,%r2226,%r2227,%r2228,%r2229,%r2230,%r2231,%r2232,%r2233,%r2234,%r2235,%r2236,%r2237,%r2238,%r2239,%r2240,%r2241,%r2242,%r2243,%r2244,%r2245,%r2246,%r2247,%r2248,%r2249,%r2250,%r2251,%r2252,%r2253,%r2254,%r2255,%r2256,%r2257,%r2258,%r2259,%r2260,%r2261,%r2262,%r2263,%r2264,%r2265,%r2266,%r2267,%r2268,%r2269,%r2270,%r2271,%r2272,%r2273,%r2274,%r2275,%r2276,%r2277,%r2278}, %rd328, %rd329, 0, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r4309, %r4307, 32;
	bfe.u32 	%r4310, %r4309, 4, 14;
	cvt.u64.u32 	%rd353, %r4310;
	or.b64 	%rd331, %rd353, 4611686293372403712;
	mov.pred 	%p14, -1;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r2215,%r2216,%r2217,%r2218,%r2219,%r2220,%r2221,%r2222,%r2223,%r2224,%r2225,%r2226,%r2227,%r2228,%r2229,%r2230,%r2231,%r2232,%r2233,%r2234,%r2235,%r2236,%r2237,%r2238,%r2239,%r2240,%r2241,%r2242,%r2243,%r2244,%r2245,%r2246,%r2247,%r2248,%r2249,%r2250,%r2251,%r2252,%r2253,%r2254,%r2255,%r2256,%r2257,%r2258,%r2259,%r2260,%r2261,%r2262,%r2263,%r2264,%r2265,%r2266,%r2267,%r2268,%r2269,%r2270,%r2271,%r2272,%r2273,%r2274,%r2275,%r2276,%r2277,%r2278}, %rd330, %rd331, %p14, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r4311, %r4307, 64;
	bfe.u32 	%r4312, %r4311, 4, 14;
	cvt.u64.u32 	%rd354, %r4312;
	or.b64 	%rd333, %rd354, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r2215,%r2216,%r2217,%r2218,%r2219,%r2220,%r2221,%r2222,%r2223,%r2224,%r2225,%r2226,%r2227,%r2228,%r2229,%r2230,%r2231,%r2232,%r2233,%r2234,%r2235,%r2236,%r2237,%r2238,%r2239,%r2240,%r2241,%r2242,%r2243,%r2244,%r2245,%r2246,%r2247,%r2248,%r2249,%r2250,%r2251,%r2252,%r2253,%r2254,%r2255,%r2256,%r2257,%r2258,%r2259,%r2260,%r2261,%r2262,%r2263,%r2264,%r2265,%r2266,%r2267,%r2268,%r2269,%r2270,%r2271,%r2272,%r2273,%r2274,%r2275,%r2276,%r2277,%r2278}, %rd332, %rd333, %p14, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r4313, %r4307, 96;
	bfe.u32 	%r4314, %r4313, 4, 14;
	cvt.u64.u32 	%rd355, %r4314;
	or.b64 	%rd335, %rd355, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r2215,%r2216,%r2217,%r2218,%r2219,%r2220,%r2221,%r2222,%r2223,%r2224,%r2225,%r2226,%r2227,%r2228,%r2229,%r2230,%r2231,%r2232,%r2233,%r2234,%r2235,%r2236,%r2237,%r2238,%r2239,%r2240,%r2241,%r2242,%r2243,%r2244,%r2245,%r2246,%r2247,%r2248,%r2249,%r2250,%r2251,%r2252,%r2253,%r2254,%r2255,%r2256,%r2257,%r2258,%r2259,%r2260,%r2261,%r2262,%r2263,%r2264,%r2265,%r2266,%r2267,%r2268,%r2269,%r2270,%r2271,%r2272,%r2273,%r2274,%r2275,%r2276,%r2277,%r2278}, %rd334, %rd335, %p14, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r4315, %r4307, 16384;
	bfe.u32 	%r4316, %r4315, 4, 14;
	cvt.u64.u32 	%rd356, %r4316;
	or.b64 	%rd337, %rd356, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r2215,%r2216,%r2217,%r2218,%r2219,%r2220,%r2221,%r2222,%r2223,%r2224,%r2225,%r2226,%r2227,%r2228,%r2229,%r2230,%r2231,%r2232,%r2233,%r2234,%r2235,%r2236,%r2237,%r2238,%r2239,%r2240,%r2241,%r2242,%r2243,%r2244,%r2245,%r2246,%r2247,%r2248,%r2249,%r2250,%r2251,%r2252,%r2253,%r2254,%r2255,%r2256,%r2257,%r2258,%r2259,%r2260,%r2261,%r2262,%r2263,%r2264,%r2265,%r2266,%r2267,%r2268,%r2269,%r2270,%r2271,%r2272,%r2273,%r2274,%r2275,%r2276,%r2277,%r2278}, %rd336, %rd337, %p14, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r4317, %r4307, 16416;
	bfe.u32 	%r4318, %r4317, 4, 14;
	cvt.u64.u32 	%rd357, %r4318;
	or.b64 	%rd339, %rd357, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r2215,%r2216,%r2217,%r2218,%r2219,%r2220,%r2221,%r2222,%r2223,%r2224,%r2225,%r2226,%r2227,%r2228,%r2229,%r2230,%r2231,%r2232,%r2233,%r2234,%r2235,%r2236,%r2237,%r2238,%r2239,%r2240,%r2241,%r2242,%r2243,%r2244,%r2245,%r2246,%r2247,%r2248,%r2249,%r2250,%r2251,%r2252,%r2253,%r2254,%r2255,%r2256,%r2257,%r2258,%r2259,%r2260,%r2261,%r2262,%r2263,%r2264,%r2265,%r2266,%r2267,%r2268,%r2269,%r2270,%r2271,%r2272,%r2273,%r2274,%r2275,%r2276,%r2277,%r2278}, %rd338, %rd339, %p14, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r4319, %r4307, 16448;
	bfe.u32 	%r4320, %r4319, 4, 14;
	cvt.u64.u32 	%rd358, %r4320;
	or.b64 	%rd341, %rd358, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r2215,%r2216,%r2217,%r2218,%r2219,%r2220,%r2221,%r2222,%r2223,%r2224,%r2225,%r2226,%r2227,%r2228,%r2229,%r2230,%r2231,%r2232,%r2233,%r2234,%r2235,%r2236,%r2237,%r2238,%r2239,%r2240,%r2241,%r2242,%r2243,%r2244,%r2245,%r2246,%r2247,%r2248,%r2249,%r2250,%r2251,%r2252,%r2253,%r2254,%r2255,%r2256,%r2257,%r2258,%r2259,%r2260,%r2261,%r2262,%r2263,%r2264,%r2265,%r2266,%r2267,%r2268,%r2269,%r2270,%r2271,%r2272,%r2273,%r2274,%r2275,%r2276,%r2277,%r2278}, %rd340, %rd341, %p14, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r4321, %r4307, 16480;
	bfe.u32 	%r4322, %r4321, 4, 14;
	cvt.u64.u32 	%rd359, %r4322;
	or.b64 	%rd343, %rd359, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r2215,%r2216,%r2217,%r2218,%r2219,%r2220,%r2221,%r2222,%r2223,%r2224,%r2225,%r2226,%r2227,%r2228,%r2229,%r2230,%r2231,%r2232,%r2233,%r2234,%r2235,%r2236,%r2237,%r2238,%r2239,%r2240,%r2241,%r2242,%r2243,%r2244,%r2245,%r2246,%r2247,%r2248,%r2249,%r2250,%r2251,%r2252,%r2253,%r2254,%r2255,%r2256,%r2257,%r2258,%r2259,%r2260,%r2261,%r2262,%r2263,%r2264,%r2265,%r2266,%r2267,%r2268,%r2269,%r2270,%r2271,%r2272,%r2273,%r2274,%r2275,%r2276,%r2277,%r2278}, %rd342, %rd343, %p14, 1, 1, 0, 0;
	// end inline asm
	wgmma.commit_group.sync.aligned;
	.loc	1 182 38                        // hopper-fa-ws-pipelined-pingpong.py:182:38
	add.s32 	%r4323, %r11963, -1;
	.loc	1 182 43                        // hopper-fa-ws-pipelined-pingpong.py:182:43
	shr.u32 	%r4324, %r4323, 31;
	add.s32 	%r4325, %r4323, %r4324;
	and.b32 	%r4326, %r4325, -2;
	sub.s32 	%r4327, %r4323, %r4326;
	.loc	1 183 49                        // hopper-fa-ws-pipelined-pingpong.py:183:49
	setp.eq.b32 	%p32, %r4327, 0;
	.loc	1 183 37                        // hopper-fa-ws-pipelined-pingpong.py:183:37
	selp.b32 	%r4328, 1, 0, %p32;
	xor.b32 	%r12099, %r12099, %r4328;
	.loc	1 184 41                        // hopper-fa-ws-pipelined-pingpong.py:184:41
	shl.b32 	%r4329, %r4327, 3;
	add.s32 	%r4330, %r602, %r4329;
	add.s32 	%r2983, %r4330, 196672;
	.loc	1 184 52                        // hopper-fa-ws-pipelined-pingpong.py:184:52
	// begin inline asm
	
{
	.reg .pred complete;
	waitLoop:
	mbarrier.try_wait.parity.shared.b64 complete, [%r2983], %r12099;
	@!complete bra.uni waitLoop;
}

	// end inline asm
	.loc	1 186 25                        // hopper-fa-ws-pipelined-pingpong.py:186:25
	mov.b64 	{%r4331, %r4332}, %rd626;
	cvt.rn.f16x2.f32 	%r3113, %r4332, %r4331;
	mov.b64 	{%r4333, %r4334}, %rd625;
	cvt.rn.f16x2.f32 	%r3114, %r4334, %r4333;
	mov.b64 	{%r4335, %r4336}, %rd624;
	cvt.rn.f16x2.f32 	%r3115, %r4336, %r4335;
	mov.b64 	{%r4337, %r4338}, %rd623;
	cvt.rn.f16x2.f32 	%r3116, %r4338, %r4337;
	mov.b64 	{%r4339, %r4340}, %rd622;
	cvt.rn.f16x2.f32 	%r3245, %r4340, %r4339;
	mov.b64 	{%r4341, %r4342}, %rd621;
	cvt.rn.f16x2.f32 	%r3246, %r4342, %r4341;
	mov.b64 	{%r4343, %r4344}, %rd620;
	cvt.rn.f16x2.f32 	%r3247, %r4344, %r4343;
	mov.b64 	{%r4345, %r4346}, %rd619;
	cvt.rn.f16x2.f32 	%r3248, %r4346, %r4345;
	mov.b64 	{%r4347, %r4348}, %rd618;
	cvt.rn.f16x2.f32 	%r3377, %r4348, %r4347;
	mov.b64 	{%r4349, %r4350}, %rd617;
	cvt.rn.f16x2.f32 	%r3378, %r4350, %r4349;
	mov.b64 	{%r4351, %r4352}, %rd616;
	cvt.rn.f16x2.f32 	%r3379, %r4352, %r4351;
	mov.b64 	{%r4353, %r4354}, %rd615;
	cvt.rn.f16x2.f32 	%r3380, %r4354, %r4353;
	mov.b64 	{%r4355, %r4356}, %rd614;
	cvt.rn.f16x2.f32 	%r3509, %r4356, %r4355;
	mov.b64 	{%r4357, %r4358}, %rd613;
	cvt.rn.f16x2.f32 	%r3510, %r4358, %r4357;
	mov.b64 	{%r4359, %r4360}, %rd612;
	cvt.rn.f16x2.f32 	%r3511, %r4360, %r4359;
	mov.b64 	{%r4361, %r4362}, %rd611;
	cvt.rn.f16x2.f32 	%r3512, %r4362, %r4361;
	mov.b64 	{%r4363, %r4364}, %rd610;
	cvt.rn.f16x2.f32 	%r3641, %r4364, %r4363;
	mov.b64 	{%r4365, %r4366}, %rd609;
	cvt.rn.f16x2.f32 	%r3642, %r4366, %r4365;
	mov.b64 	{%r4367, %r4368}, %rd608;
	cvt.rn.f16x2.f32 	%r3643, %r4368, %r4367;
	mov.b64 	{%r4369, %r4370}, %rd607;
	cvt.rn.f16x2.f32 	%r3644, %r4370, %r4369;
	mov.b64 	{%r4371, %r4372}, %rd606;
	cvt.rn.f16x2.f32 	%r3773, %r4372, %r4371;
	mov.b64 	{%r4373, %r4374}, %rd605;
	cvt.rn.f16x2.f32 	%r3774, %r4374, %r4373;
	mov.b64 	{%r4375, %r4376}, %rd604;
	cvt.rn.f16x2.f32 	%r3775, %r4376, %r4375;
	mov.b64 	{%r4377, %r4378}, %rd603;
	cvt.rn.f16x2.f32 	%r3776, %r4378, %r4377;
	mov.b64 	{%r4379, %r4380}, %rd602;
	cvt.rn.f16x2.f32 	%r3905, %r4380, %r4379;
	mov.b64 	{%r4381, %r4382}, %rd601;
	cvt.rn.f16x2.f32 	%r3906, %r4382, %r4381;
	mov.b64 	{%r4383, %r4384}, %rd600;
	cvt.rn.f16x2.f32 	%r3907, %r4384, %r4383;
	mov.b64 	{%r4385, %r4386}, %rd599;
	cvt.rn.f16x2.f32 	%r3908, %r4386, %r4385;
	mov.b64 	{%r4387, %r4388}, %rd598;
	cvt.rn.f16x2.f32 	%r4037, %r4388, %r4387;
	mov.b64 	{%r4389, %r4390}, %rd597;
	cvt.rn.f16x2.f32 	%r4038, %r4390, %r4389;
	mov.b64 	{%r4391, %r4392}, %rd596;
	cvt.rn.f16x2.f32 	%r4039, %r4392, %r4391;
	mov.b64 	{%r4393, %r4394}, %rd595;
	cvt.rn.f16x2.f32 	%r4040, %r4394, %r4393;
	.loc	1 187 47                        // hopper-fa-ws-pipelined-pingpong.py:187:47
	shl.b32 	%r4395, %r4327, 15;
	add.s32 	%r4396, %r602, %r4395;
	add.s32 	%r4397, %r4396, 65536;
	.loc	1 187 58                        // hopper-fa-ws-pipelined-pingpong.py:187:58
	wgmma.fence.sync.aligned;
	bfe.u32 	%r4398, %r4397, 4, 14;
	cvt.u64.u32 	%rd360, %r4398;
	or.b64 	%rd344, %rd360, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r12029,%r12028,%r12027,%r12026,%r12025,%r12024,%r12023,%r12022,%r12021,%r12020,%r12019,%r12018,%r12017,%r12016,%r12015,%r12014,%r12013,%r12012,%r12011,%r12010,%r12009,%r12008,%r12007,%r12006,%r12005,%r12004,%r12003,%r12002,%r12001,%r12000,%r11999,%r11998,%r11997,%r11996,%r11995,%r11994,%r11993,%r11992,%r11991,%r11990,%r11989,%r11988,%r11987,%r11986,%r11985,%r11984,%r11983,%r11982,%r11981,%r11980,%r11979,%r11978,%r11977,%r11976,%r11975,%r11974,%r11973,%r11972,%r11971,%r11970,%r11969,%r11968,%r11967,%r11966}, {%r3113,%r3114,%r3115,%r3116}, %rd344, %p14, 1, 1, 1;
	// end inline asm
	add.s32 	%r4399, %r4396, 67584;
	bfe.u32 	%r4400, %r4399, 4, 14;
	cvt.u64.u32 	%rd361, %r4400;
	or.b64 	%rd345, %rd361, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r12029,%r12028,%r12027,%r12026,%r12025,%r12024,%r12023,%r12022,%r12021,%r12020,%r12019,%r12018,%r12017,%r12016,%r12015,%r12014,%r12013,%r12012,%r12011,%r12010,%r12009,%r12008,%r12007,%r12006,%r12005,%r12004,%r12003,%r12002,%r12001,%r12000,%r11999,%r11998,%r11997,%r11996,%r11995,%r11994,%r11993,%r11992,%r11991,%r11990,%r11989,%r11988,%r11987,%r11986,%r11985,%r11984,%r11983,%r11982,%r11981,%r11980,%r11979,%r11978,%r11977,%r11976,%r11975,%r11974,%r11973,%r11972,%r11971,%r11970,%r11969,%r11968,%r11967,%r11966}, {%r3245,%r3246,%r3247,%r3248}, %rd345, %p14, 1, 1, 1;
	// end inline asm
	add.s32 	%r4401, %r4396, 69632;
	bfe.u32 	%r4402, %r4401, 4, 14;
	cvt.u64.u32 	%rd362, %r4402;
	or.b64 	%rd346, %rd362, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r12029,%r12028,%r12027,%r12026,%r12025,%r12024,%r12023,%r12022,%r12021,%r12020,%r12019,%r12018,%r12017,%r12016,%r12015,%r12014,%r12013,%r12012,%r12011,%r12010,%r12009,%r12008,%r12007,%r12006,%r12005,%r12004,%r12003,%r12002,%r12001,%r12000,%r11999,%r11998,%r11997,%r11996,%r11995,%r11994,%r11993,%r11992,%r11991,%r11990,%r11989,%r11988,%r11987,%r11986,%r11985,%r11984,%r11983,%r11982,%r11981,%r11980,%r11979,%r11978,%r11977,%r11976,%r11975,%r11974,%r11973,%r11972,%r11971,%r11970,%r11969,%r11968,%r11967,%r11966}, {%r3377,%r3378,%r3379,%r3380}, %rd346, %p14, 1, 1, 1;
	// end inline asm
	add.s32 	%r4403, %r4396, 71680;
	bfe.u32 	%r4404, %r4403, 4, 14;
	cvt.u64.u32 	%rd363, %r4404;
	or.b64 	%rd347, %rd363, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r12029,%r12028,%r12027,%r12026,%r12025,%r12024,%r12023,%r12022,%r12021,%r12020,%r12019,%r12018,%r12017,%r12016,%r12015,%r12014,%r12013,%r12012,%r12011,%r12010,%r12009,%r12008,%r12007,%r12006,%r12005,%r12004,%r12003,%r12002,%r12001,%r12000,%r11999,%r11998,%r11997,%r11996,%r11995,%r11994,%r11993,%r11992,%r11991,%r11990,%r11989,%r11988,%r11987,%r11986,%r11985,%r11984,%r11983,%r11982,%r11981,%r11980,%r11979,%r11978,%r11977,%r11976,%r11975,%r11974,%r11973,%r11972,%r11971,%r11970,%r11969,%r11968,%r11967,%r11966}, {%r3509,%r3510,%r3511,%r3512}, %rd347, %p14, 1, 1, 1;
	// end inline asm
	add.s32 	%r4405, %r4396, 73728;
	bfe.u32 	%r4406, %r4405, 4, 14;
	cvt.u64.u32 	%rd364, %r4406;
	or.b64 	%rd348, %rd364, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r12029,%r12028,%r12027,%r12026,%r12025,%r12024,%r12023,%r12022,%r12021,%r12020,%r12019,%r12018,%r12017,%r12016,%r12015,%r12014,%r12013,%r12012,%r12011,%r12010,%r12009,%r12008,%r12007,%r12006,%r12005,%r12004,%r12003,%r12002,%r12001,%r12000,%r11999,%r11998,%r11997,%r11996,%r11995,%r11994,%r11993,%r11992,%r11991,%r11990,%r11989,%r11988,%r11987,%r11986,%r11985,%r11984,%r11983,%r11982,%r11981,%r11980,%r11979,%r11978,%r11977,%r11976,%r11975,%r11974,%r11973,%r11972,%r11971,%r11970,%r11969,%r11968,%r11967,%r11966}, {%r3641,%r3642,%r3643,%r3644}, %rd348, %p14, 1, 1, 1;
	// end inline asm
	add.s32 	%r4407, %r4396, 75776;
	bfe.u32 	%r4408, %r4407, 4, 14;
	cvt.u64.u32 	%rd365, %r4408;
	or.b64 	%rd349, %rd365, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r12029,%r12028,%r12027,%r12026,%r12025,%r12024,%r12023,%r12022,%r12021,%r12020,%r12019,%r12018,%r12017,%r12016,%r12015,%r12014,%r12013,%r12012,%r12011,%r12010,%r12009,%r12008,%r12007,%r12006,%r12005,%r12004,%r12003,%r12002,%r12001,%r12000,%r11999,%r11998,%r11997,%r11996,%r11995,%r11994,%r11993,%r11992,%r11991,%r11990,%r11989,%r11988,%r11987,%r11986,%r11985,%r11984,%r11983,%r11982,%r11981,%r11980,%r11979,%r11978,%r11977,%r11976,%r11975,%r11974,%r11973,%r11972,%r11971,%r11970,%r11969,%r11968,%r11967,%r11966}, {%r3773,%r3774,%r3775,%r3776}, %rd349, %p14, 1, 1, 1;
	// end inline asm
	add.s32 	%r4409, %r4396, 77824;
	bfe.u32 	%r4410, %r4409, 4, 14;
	cvt.u64.u32 	%rd366, %r4410;
	or.b64 	%rd350, %rd366, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r12029,%r12028,%r12027,%r12026,%r12025,%r12024,%r12023,%r12022,%r12021,%r12020,%r12019,%r12018,%r12017,%r12016,%r12015,%r12014,%r12013,%r12012,%r12011,%r12010,%r12009,%r12008,%r12007,%r12006,%r12005,%r12004,%r12003,%r12002,%r12001,%r12000,%r11999,%r11998,%r11997,%r11996,%r11995,%r11994,%r11993,%r11992,%r11991,%r11990,%r11989,%r11988,%r11987,%r11986,%r11985,%r11984,%r11983,%r11982,%r11981,%r11980,%r11979,%r11978,%r11977,%r11976,%r11975,%r11974,%r11973,%r11972,%r11971,%r11970,%r11969,%r11968,%r11967,%r11966}, {%r3905,%r3906,%r3907,%r3908}, %rd350, %p14, 1, 1, 1;
	// end inline asm
	add.s32 	%r4411, %r4396, 79872;
	bfe.u32 	%r4412, %r4411, 4, 14;
	cvt.u64.u32 	%rd367, %r4412;
	or.b64 	%rd351, %rd367, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r12029,%r12028,%r12027,%r12026,%r12025,%r12024,%r12023,%r12022,%r12021,%r12020,%r12019,%r12018,%r12017,%r12016,%r12015,%r12014,%r12013,%r12012,%r12011,%r12010,%r12009,%r12008,%r12007,%r12006,%r12005,%r12004,%r12003,%r12002,%r12001,%r12000,%r11999,%r11998,%r11997,%r11996,%r11995,%r11994,%r11993,%r11992,%r11991,%r11990,%r11989,%r11988,%r11987,%r11986,%r11985,%r11984,%r11983,%r11982,%r11981,%r11980,%r11979,%r11978,%r11977,%r11976,%r11975,%r11974,%r11973,%r11972,%r11971,%r11970,%r11969,%r11968,%r11967,%r11966}, {%r4037,%r4038,%r4039,%r4040}, %rd351, %p14, 1, 1, 1;
	// end inline asm
	wgmma.commit_group.sync.aligned;
	.loc	1 190 43                        // hopper-fa-ws-pipelined-pingpong.py:190:43
	// begin inline asm
	// wait for regs: %r2215,%r2216,%r2217,%r2218,%r2219,%r2220,%r2221,%r2222,%r2223,%r2224,%r2225,%r2226,%r2227,%r2228,%r2229,%r2230,%r2231,%r2232,%r2233,%r2234,%r2235,%r2236,%r2237,%r2238,%r2239,%r2240,%r2241,%r2242,%r2243,%r2244,%r2245,%r2246,%r2247,%r2248,%r2249,%r2250,%r2251,%r2252,%r2253,%r2254,%r2255,%r2256,%r2257,%r2258,%r2259,%r2260,%r2261,%r2262,%r2263,%r2264,%r2265,%r2266,%r2267,%r2268,%r2269,%r2270,%r2271,%r2272,%r2273,%r2274,%r2275,%r2276,%r2277,%r2278
	wgmma.wait_group.sync.aligned 1;
	// end inline asm
	.loc	1 192 45                        // hopper-fa-ws-pipelined-pingpong.py:192:45
	add.s32 	%r4169, %r4305, 196624;
	.loc	1 192 56                        // hopper-fa-ws-pipelined-pingpong.py:192:56
	bar.sync 	3, 128;
	// begin inline asm
	@%p29 mbarrier.arrive.shared::cta.b64 _, [%r4169];
	// end inline asm
$L__tmp5:
	.loc	2 168 27                        // standard.py:168:27 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	max.f32 	%r4413, %r2215, %r2216;
	max.f32 	%r4414, %r2217, %r2218;
	max.f32 	%r4415, %r4413, %r2219;
	max.f32 	%r4416, %r4415, %r2220;
	max.f32 	%r4417, %r4414, %r2221;
	max.f32 	%r4418, %r4417, %r2222;
	max.f32 	%r4419, %r4416, %r2223;
	max.f32 	%r4420, %r4419, %r2224;
	max.f32 	%r4421, %r4418, %r2225;
	max.f32 	%r4422, %r4421, %r2226;
	max.f32 	%r4423, %r4420, %r2227;
	max.f32 	%r4424, %r4423, %r2228;
	max.f32 	%r4425, %r4422, %r2229;
	max.f32 	%r4426, %r4425, %r2230;
	max.f32 	%r4427, %r4424, %r2231;
	max.f32 	%r4428, %r4427, %r2232;
	max.f32 	%r4429, %r4426, %r2233;
	max.f32 	%r4430, %r4429, %r2234;
	max.f32 	%r4431, %r4428, %r2235;
	max.f32 	%r4432, %r4431, %r2236;
	max.f32 	%r4433, %r4430, %r2237;
	max.f32 	%r4434, %r4433, %r2238;
	max.f32 	%r4435, %r4432, %r2239;
	max.f32 	%r4436, %r4435, %r2240;
	max.f32 	%r4437, %r4434, %r2241;
	max.f32 	%r4438, %r4437, %r2242;
	max.f32 	%r4439, %r4436, %r2243;
	max.f32 	%r4440, %r4439, %r2244;
	max.f32 	%r4441, %r4438, %r2245;
	max.f32 	%r4442, %r4441, %r2246;
	max.f32 	%r4443, %r4440, %r2247;
	max.f32 	%r4444, %r4443, %r2248;
	max.f32 	%r4445, %r4442, %r2249;
	max.f32 	%r4446, %r4445, %r2250;
	max.f32 	%r4447, %r4444, %r2251;
	max.f32 	%r4448, %r4447, %r2252;
	max.f32 	%r4449, %r4446, %r2253;
	max.f32 	%r4450, %r4449, %r2254;
	max.f32 	%r4451, %r4448, %r2255;
	max.f32 	%r4452, %r4451, %r2256;
	max.f32 	%r4453, %r4450, %r2257;
	max.f32 	%r4454, %r4453, %r2258;
	max.f32 	%r4455, %r4452, %r2259;
	max.f32 	%r4456, %r4455, %r2260;
	max.f32 	%r4457, %r4454, %r2261;
	max.f32 	%r4458, %r4457, %r2262;
	max.f32 	%r4459, %r4456, %r2263;
	max.f32 	%r4460, %r4459, %r2264;
	max.f32 	%r4461, %r4458, %r2265;
	max.f32 	%r4462, %r4461, %r2266;
	max.f32 	%r4463, %r4460, %r2267;
	max.f32 	%r4464, %r4463, %r2268;
	max.f32 	%r4465, %r4462, %r2269;
	max.f32 	%r4466, %r4465, %r2270;
	max.f32 	%r4467, %r4464, %r2271;
	max.f32 	%r4468, %r4467, %r2272;
	max.f32 	%r4469, %r4466, %r2273;
	max.f32 	%r4470, %r4469, %r2274;
	max.f32 	%r4471, %r4468, %r2275;
	max.f32 	%r4472, %r4471, %r2276;
	max.f32 	%r4473, %r4470, %r2277;
	max.f32 	%r4474, %r4473, %r2278;
	.loc	2 189 40                        // standard.py:189:40 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	shfl.sync.bfly.b32 	%r4475, %r4472, 2, 31, -1;
	.loc	2 168 27                        // standard.py:168:27 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	max.f32 	%r4476, %r4472, %r4475;
	.loc	2 189 40                        // standard.py:189:40 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	shfl.sync.bfly.b32 	%r4477, %r4476, 1, 31, -1;
	shfl.sync.bfly.b32 	%r4478, %r4474, 2, 31, -1;
	.loc	2 168 27                        // standard.py:168:27 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	max.f32 	%r4479, %r4474, %r4478;
	.loc	2 189 40                        // standard.py:189:40 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	shfl.sync.bfly.b32 	%r4480, %r4479, 1, 31, -1;
	cvt.u64.u32 	%rd368, %r4477;
	cvt.u64.u32 	%rd369, %r4480;
	shl.b64 	%rd370, %rd369, 32;
	or.b64 	%rd371, %rd368, %rd370;
	.loc	2 168 27                        // standard.py:168:27 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	mov.b64 	{%r4481, %r4482}, %rd371;
	max.f32 	%r4483, %r4479, %r4482;
	max.f32 	%r4484, %r4476, %r4481;
$L__tmp6:
	.loc	1 195 55                        // hopper-fa-ws-pipelined-pingpong.py:195:55
	mov.b64 	{%r4485, %r4486}, %rd154;
	mul.f32 	%r4487, %r4485, %r4484;
	mul.f32 	%r4488, %r4486, %r4483;
	.loc	1 195 39                        // hopper-fa-ws-pipelined-pingpong.py:195:39
	mov.b64 	{%r4489, %r4490}, %rd594;
	max.f32 	%r4491, %r4490, %r4488;
	max.f32 	%r4492, %r4489, %r4487;
	mov.b64 	%rd594, {%r4492, %r4491};
	.loc	1 196 37                        // hopper-fa-ws-pipelined-pingpong.py:196:37
	neg.f32 	%r4493, %r4492;
	fma.rn.f32 	%r4494, %r296, %r2215, %r4493;
	fma.rn.f32 	%r4495, %r296, %r2216, %r4493;
	neg.f32 	%r4496, %r4491;
	fma.rn.f32 	%r4497, %r296, %r2217, %r4496;
	fma.rn.f32 	%r4498, %r296, %r2218, %r4496;
	fma.rn.f32 	%r4499, %r296, %r2219, %r4493;
	fma.rn.f32 	%r4500, %r296, %r2220, %r4493;
	fma.rn.f32 	%r4501, %r296, %r2221, %r4496;
	fma.rn.f32 	%r4502, %r296, %r2222, %r4496;
	fma.rn.f32 	%r4503, %r296, %r2223, %r4493;
	fma.rn.f32 	%r4504, %r296, %r2224, %r4493;
	fma.rn.f32 	%r4505, %r296, %r2225, %r4496;
	fma.rn.f32 	%r4506, %r296, %r2226, %r4496;
	fma.rn.f32 	%r4507, %r296, %r2227, %r4493;
	fma.rn.f32 	%r4508, %r296, %r2228, %r4493;
	fma.rn.f32 	%r4509, %r296, %r2229, %r4496;
	fma.rn.f32 	%r4510, %r296, %r2230, %r4496;
	fma.rn.f32 	%r4511, %r296, %r2231, %r4493;
	fma.rn.f32 	%r4512, %r296, %r2232, %r4493;
	fma.rn.f32 	%r4513, %r296, %r2233, %r4496;
	fma.rn.f32 	%r4514, %r296, %r2234, %r4496;
	fma.rn.f32 	%r4515, %r296, %r2235, %r4493;
	fma.rn.f32 	%r4516, %r296, %r2236, %r4493;
	fma.rn.f32 	%r4517, %r296, %r2237, %r4496;
	fma.rn.f32 	%r4518, %r296, %r2238, %r4496;
	fma.rn.f32 	%r4519, %r296, %r2239, %r4493;
	fma.rn.f32 	%r4520, %r296, %r2240, %r4493;
	fma.rn.f32 	%r4521, %r296, %r2241, %r4496;
	fma.rn.f32 	%r4522, %r296, %r2242, %r4496;
	fma.rn.f32 	%r4523, %r296, %r2243, %r4493;
	fma.rn.f32 	%r4524, %r296, %r2244, %r4493;
	fma.rn.f32 	%r4525, %r296, %r2245, %r4496;
	fma.rn.f32 	%r4526, %r296, %r2246, %r4496;
	fma.rn.f32 	%r4527, %r296, %r2247, %r4493;
	fma.rn.f32 	%r4528, %r296, %r2248, %r4493;
	fma.rn.f32 	%r4529, %r296, %r2249, %r4496;
	fma.rn.f32 	%r4530, %r296, %r2250, %r4496;
	fma.rn.f32 	%r4531, %r296, %r2251, %r4493;
	fma.rn.f32 	%r4532, %r296, %r2252, %r4493;
	fma.rn.f32 	%r4533, %r296, %r2253, %r4496;
	fma.rn.f32 	%r4534, %r296, %r2254, %r4496;
	fma.rn.f32 	%r4535, %r296, %r2255, %r4493;
	fma.rn.f32 	%r4536, %r296, %r2256, %r4493;
	fma.rn.f32 	%r4537, %r296, %r2257, %r4496;
	fma.rn.f32 	%r4538, %r296, %r2258, %r4496;
	fma.rn.f32 	%r4539, %r296, %r2259, %r4493;
	fma.rn.f32 	%r4540, %r296, %r2260, %r4493;
	fma.rn.f32 	%r4541, %r296, %r2261, %r4496;
	fma.rn.f32 	%r4542, %r296, %r2262, %r4496;
	fma.rn.f32 	%r4543, %r296, %r2263, %r4493;
	fma.rn.f32 	%r4544, %r296, %r2264, %r4493;
	fma.rn.f32 	%r4545, %r296, %r2265, %r4496;
	fma.rn.f32 	%r4546, %r296, %r2266, %r4496;
	fma.rn.f32 	%r4547, %r296, %r2267, %r4493;
	fma.rn.f32 	%r4548, %r296, %r2268, %r4493;
	fma.rn.f32 	%r4549, %r296, %r2269, %r4496;
	fma.rn.f32 	%r4550, %r296, %r2270, %r4496;
	fma.rn.f32 	%r4551, %r296, %r2271, %r4493;
	fma.rn.f32 	%r4552, %r296, %r2272, %r4493;
	fma.rn.f32 	%r4553, %r296, %r2273, %r4496;
	fma.rn.f32 	%r4554, %r296, %r2274, %r4496;
	fma.rn.f32 	%r4555, %r296, %r2275, %r4493;
	fma.rn.f32 	%r4556, %r296, %r2276, %r4493;
	fma.rn.f32 	%r4557, %r296, %r2277, %r4496;
	fma.rn.f32 	%r4558, %r296, %r2278, %r4496;
	.loc	1 197 33                        // hopper-fa-ws-pipelined-pingpong.py:197:33
	ex2.approx.ftz.f32 	%r4559, %r4494;
	ex2.approx.ftz.f32 	%r4560, %r4495;
	ex2.approx.ftz.f32 	%r4561, %r4497;
	ex2.approx.ftz.f32 	%r4562, %r4498;
	ex2.approx.ftz.f32 	%r4563, %r4499;
	ex2.approx.ftz.f32 	%r4564, %r4500;
	ex2.approx.ftz.f32 	%r4565, %r4501;
	ex2.approx.ftz.f32 	%r4566, %r4502;
	ex2.approx.ftz.f32 	%r4567, %r4503;
	ex2.approx.ftz.f32 	%r4568, %r4504;
	ex2.approx.ftz.f32 	%r4569, %r4505;
	ex2.approx.ftz.f32 	%r4570, %r4506;
	ex2.approx.ftz.f32 	%r4571, %r4507;
	ex2.approx.ftz.f32 	%r4572, %r4508;
	ex2.approx.ftz.f32 	%r4573, %r4509;
	ex2.approx.ftz.f32 	%r4574, %r4510;
	ex2.approx.ftz.f32 	%r4575, %r4511;
	ex2.approx.ftz.f32 	%r4576, %r4512;
	ex2.approx.ftz.f32 	%r4577, %r4513;
	ex2.approx.ftz.f32 	%r4578, %r4514;
	ex2.approx.ftz.f32 	%r4579, %r4515;
	ex2.approx.ftz.f32 	%r4580, %r4516;
	ex2.approx.ftz.f32 	%r4581, %r4517;
	ex2.approx.ftz.f32 	%r4582, %r4518;
	ex2.approx.ftz.f32 	%r4583, %r4519;
	ex2.approx.ftz.f32 	%r4584, %r4520;
	ex2.approx.ftz.f32 	%r4585, %r4521;
	ex2.approx.ftz.f32 	%r4586, %r4522;
	ex2.approx.ftz.f32 	%r4587, %r4523;
	ex2.approx.ftz.f32 	%r4588, %r4524;
	ex2.approx.ftz.f32 	%r4589, %r4525;
	ex2.approx.ftz.f32 	%r4590, %r4526;
	ex2.approx.ftz.f32 	%r4591, %r4527;
	ex2.approx.ftz.f32 	%r4592, %r4528;
	ex2.approx.ftz.f32 	%r4593, %r4529;
	ex2.approx.ftz.f32 	%r4594, %r4530;
	ex2.approx.ftz.f32 	%r4595, %r4531;
	ex2.approx.ftz.f32 	%r4596, %r4532;
	ex2.approx.ftz.f32 	%r4597, %r4533;
	ex2.approx.ftz.f32 	%r4598, %r4534;
	ex2.approx.ftz.f32 	%r4599, %r4535;
	ex2.approx.ftz.f32 	%r4600, %r4536;
	ex2.approx.ftz.f32 	%r4601, %r4537;
	ex2.approx.ftz.f32 	%r4602, %r4538;
	ex2.approx.ftz.f32 	%r4603, %r4539;
	ex2.approx.ftz.f32 	%r4604, %r4540;
	ex2.approx.ftz.f32 	%r4605, %r4541;
	ex2.approx.ftz.f32 	%r4606, %r4542;
	ex2.approx.ftz.f32 	%r4607, %r4543;
	ex2.approx.ftz.f32 	%r4608, %r4544;
	ex2.approx.ftz.f32 	%r4609, %r4545;
	ex2.approx.ftz.f32 	%r4610, %r4546;
	ex2.approx.ftz.f32 	%r4611, %r4547;
	ex2.approx.ftz.f32 	%r4612, %r4548;
	ex2.approx.ftz.f32 	%r4613, %r4549;
	ex2.approx.ftz.f32 	%r4614, %r4550;
	ex2.approx.ftz.f32 	%r4615, %r4551;
	ex2.approx.ftz.f32 	%r4616, %r4552;
	ex2.approx.ftz.f32 	%r4617, %r4553;
	ex2.approx.ftz.f32 	%r4618, %r4554;
	ex2.approx.ftz.f32 	%r4619, %r4555;
	ex2.approx.ftz.f32 	%r4620, %r4556;
	ex2.approx.ftz.f32 	%r4621, %r4557;
	ex2.approx.ftz.f32 	%r4622, %r4558;
	.loc	1 199 43                        // hopper-fa-ws-pipelined-pingpong.py:199:43
	sub.f32 	%r4623, %r4490, %r4491;
	sub.f32 	%r4624, %r4489, %r4492;
	.loc	1 199 37                        // hopper-fa-ws-pipelined-pingpong.py:199:37
	ex2.approx.ftz.f32 	%r4625, %r4624;
	ex2.approx.ftz.f32 	%r4626, %r4623;
$L__tmp7:
	.loc	2 261 15                        // standard.py:261:15 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	add.f32 	%r4627, %r4559, %r4560;
	add.f32 	%r4628, %r4561, %r4562;
	add.f32 	%r4629, %r4627, %r4563;
	add.f32 	%r4630, %r4629, %r4564;
	add.f32 	%r4631, %r4628, %r4565;
	add.f32 	%r4632, %r4631, %r4566;
	add.f32 	%r4633, %r4630, %r4567;
	add.f32 	%r4634, %r4633, %r4568;
	add.f32 	%r4635, %r4632, %r4569;
	add.f32 	%r4636, %r4635, %r4570;
	add.f32 	%r4637, %r4634, %r4571;
	add.f32 	%r4638, %r4637, %r4572;
	add.f32 	%r4639, %r4636, %r4573;
	add.f32 	%r4640, %r4639, %r4574;
	add.f32 	%r4641, %r4638, %r4575;
	add.f32 	%r4642, %r4641, %r4576;
	add.f32 	%r4643, %r4640, %r4577;
	add.f32 	%r4644, %r4643, %r4578;
	add.f32 	%r4645, %r4642, %r4579;
	add.f32 	%r4646, %r4645, %r4580;
	add.f32 	%r4647, %r4644, %r4581;
	add.f32 	%r4648, %r4647, %r4582;
	add.f32 	%r4649, %r4646, %r4583;
	add.f32 	%r4650, %r4649, %r4584;
	add.f32 	%r4651, %r4648, %r4585;
	add.f32 	%r4652, %r4651, %r4586;
	add.f32 	%r4653, %r4650, %r4587;
	add.f32 	%r4654, %r4653, %r4588;
	add.f32 	%r4655, %r4652, %r4589;
	add.f32 	%r4656, %r4655, %r4590;
	add.f32 	%r4657, %r4654, %r4591;
	add.f32 	%r4658, %r4657, %r4592;
	add.f32 	%r4659, %r4656, %r4593;
	add.f32 	%r4660, %r4659, %r4594;
	add.f32 	%r4661, %r4658, %r4595;
	add.f32 	%r4662, %r4661, %r4596;
	add.f32 	%r4663, %r4660, %r4597;
	add.f32 	%r4664, %r4663, %r4598;
	add.f32 	%r4665, %r4662, %r4599;
	add.f32 	%r4666, %r4665, %r4600;
	add.f32 	%r4667, %r4664, %r4601;
	add.f32 	%r4668, %r4667, %r4602;
	add.f32 	%r4669, %r4666, %r4603;
	add.f32 	%r4670, %r4669, %r4604;
	add.f32 	%r4671, %r4668, %r4605;
	add.f32 	%r4672, %r4671, %r4606;
	add.f32 	%r4673, %r4670, %r4607;
	add.f32 	%r4674, %r4673, %r4608;
	add.f32 	%r4675, %r4672, %r4609;
	add.f32 	%r4676, %r4675, %r4610;
	add.f32 	%r4677, %r4674, %r4611;
	add.f32 	%r4678, %r4677, %r4612;
	add.f32 	%r4679, %r4676, %r4613;
	add.f32 	%r4680, %r4679, %r4614;
	add.f32 	%r4681, %r4678, %r4615;
	add.f32 	%r4682, %r4681, %r4616;
	add.f32 	%r4683, %r4680, %r4617;
	add.f32 	%r4684, %r4683, %r4618;
	add.f32 	%r4685, %r4682, %r4619;
	add.f32 	%r4686, %r4685, %r4620;
	add.f32 	%r4687, %r4684, %r4621;
	add.f32 	%r4688, %r4687, %r4622;
	.loc	2 301 36                        // standard.py:301:36 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	shfl.sync.bfly.b32 	%r4689, %r4686, 2, 31, -1;
	.loc	2 261 15                        // standard.py:261:15 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	add.f32 	%r4690, %r4686, %r4689;
	.loc	2 301 36                        // standard.py:301:36 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	shfl.sync.bfly.b32 	%r4691, %r4690, 1, 31, -1;
	.loc	2 261 15                        // standard.py:261:15 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	add.f32 	%r4692, %r4690, %r4691;
	.loc	2 301 36                        // standard.py:301:36 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	shfl.sync.bfly.b32 	%r4693, %r4688, 2, 31, -1;
	.loc	2 261 15                        // standard.py:261:15 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	add.f32 	%r4694, %r4688, %r4693;
	.loc	2 301 36                        // standard.py:301:36 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	shfl.sync.bfly.b32 	%r4695, %r4694, 1, 31, -1;
	.loc	2 261 15                        // standard.py:261:15 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	add.f32 	%r4696, %r4694, %r4695;
$L__tmp8:
	.loc	1 202 36                        // hopper-fa-ws-pipelined-pingpong.py:202:36
	fma.rn.f32 	%r12033, %r12033, %r4625, %r4692;
	fma.rn.f32 	%r12034, %r12034, %r4626, %r4696;
	.loc	1 207 44                        // hopper-fa-ws-pipelined-pingpong.py:207:44
	// begin inline asm
	// wait for regs: %r12029,%r12028,%r12027,%r12026,%r12025,%r12024,%r12023,%r12022,%r12021,%r12020,%r12019,%r12018,%r12017,%r12016,%r12015,%r12014,%r12013,%r12012,%r12011,%r12010,%r12009,%r12008,%r12007,%r12006,%r12005,%r12004,%r12003,%r12002,%r12001,%r12000,%r11999,%r11998,%r11997,%r11996,%r11995,%r11994,%r11993,%r11992,%r11991,%r11990,%r11989,%r11988,%r11987,%r11986,%r11985,%r11984,%r11983,%r11982,%r11981,%r11980,%r11979,%r11978,%r11977,%r11976,%r11975,%r11974,%r11973,%r11972,%r11971,%r11970,%r11969,%r11968,%r11967,%r11966
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 209 45                        // hopper-fa-ws-pipelined-pingpong.py:209:45
	add.s32 	%r4298, %r4330, 196656;
	.loc	1 209 56                        // hopper-fa-ws-pipelined-pingpong.py:209:56
	bar.sync 	3, 128;
	// begin inline asm
	@%p29 mbarrier.arrive.shared::cta.b64 _, [%r4298];
	// end inline asm
	.loc	1 210 28                        // hopper-fa-ws-pipelined-pingpong.py:210:28
	mul.f32 	%r12029, %r4625, %r12029;
	mul.f32 	%r12028, %r4625, %r12028;
	mul.f32 	%r12027, %r4626, %r12027;
	mul.f32 	%r12026, %r4626, %r12026;
	mul.f32 	%r12025, %r4625, %r12025;
	mul.f32 	%r12024, %r4625, %r12024;
	mul.f32 	%r12023, %r4626, %r12023;
	mul.f32 	%r12022, %r4626, %r12022;
	mul.f32 	%r12021, %r4625, %r12021;
	mul.f32 	%r12020, %r4625, %r12020;
	mul.f32 	%r12019, %r4626, %r12019;
	mul.f32 	%r12018, %r4626, %r12018;
	mul.f32 	%r12017, %r4625, %r12017;
	mul.f32 	%r12016, %r4625, %r12016;
	mul.f32 	%r12015, %r4626, %r12015;
	mul.f32 	%r12014, %r4626, %r12014;
	mul.f32 	%r12013, %r4625, %r12013;
	mul.f32 	%r12012, %r4625, %r12012;
	mul.f32 	%r12011, %r4626, %r12011;
	mul.f32 	%r12010, %r4626, %r12010;
	mul.f32 	%r12009, %r4625, %r12009;
	mul.f32 	%r12008, %r4625, %r12008;
	mul.f32 	%r12007, %r4626, %r12007;
	mul.f32 	%r12006, %r4626, %r12006;
	mul.f32 	%r12005, %r4625, %r12005;
	mul.f32 	%r12004, %r4625, %r12004;
	mul.f32 	%r12003, %r4626, %r12003;
	mul.f32 	%r12002, %r4626, %r12002;
	mul.f32 	%r12001, %r4625, %r12001;
	mul.f32 	%r12000, %r4625, %r12000;
	mul.f32 	%r11999, %r4626, %r11999;
	mul.f32 	%r11998, %r4626, %r11998;
	mul.f32 	%r11997, %r4625, %r11997;
	mul.f32 	%r11996, %r4625, %r11996;
	mul.f32 	%r11995, %r4626, %r11995;
	mul.f32 	%r11994, %r4626, %r11994;
	mul.f32 	%r11993, %r4625, %r11993;
	mul.f32 	%r11992, %r4625, %r11992;
	mul.f32 	%r11991, %r4626, %r11991;
	mul.f32 	%r11990, %r4626, %r11990;
	mul.f32 	%r11989, %r4625, %r11989;
	mul.f32 	%r11988, %r4625, %r11988;
	mul.f32 	%r11987, %r4626, %r11987;
	mul.f32 	%r11986, %r4626, %r11986;
	mul.f32 	%r11985, %r4625, %r11985;
	mul.f32 	%r11984, %r4625, %r11984;
	mul.f32 	%r11983, %r4626, %r11983;
	mul.f32 	%r11982, %r4626, %r11982;
	mul.f32 	%r11981, %r4625, %r11981;
	mul.f32 	%r11980, %r4625, %r11980;
	mul.f32 	%r11979, %r4626, %r11979;
	mul.f32 	%r11978, %r4626, %r11978;
	mul.f32 	%r11977, %r4625, %r11977;
	mul.f32 	%r11976, %r4625, %r11976;
	mul.f32 	%r11975, %r4626, %r11975;
	mul.f32 	%r11974, %r4626, %r11974;
	mul.f32 	%r11973, %r4625, %r11973;
	mul.f32 	%r11972, %r4625, %r11972;
	mul.f32 	%r11971, %r4626, %r11971;
	mul.f32 	%r11970, %r4626, %r11970;
	mul.f32 	%r11969, %r4625, %r11969;
	mul.f32 	%r11968, %r4625, %r11968;
	mul.f32 	%r11967, %r4626, %r11967;
	mul.f32 	%r11966, %r4626, %r11966;
	.loc	1 168 48                        // hopper-fa-ws-pipelined-pingpong.py:168:48
	add.s32 	%r12032, %r12032, 128;
	mov.b64 	%rd595, {%r4621, %r4622};
	mov.b64 	%rd596, {%r4619, %r4620};
	mov.b64 	%rd597, {%r4617, %r4618};
	mov.b64 	%rd598, {%r4615, %r4616};
	mov.b64 	%rd599, {%r4613, %r4614};
	mov.b64 	%rd600, {%r4611, %r4612};
	mov.b64 	%rd601, {%r4609, %r4610};
	mov.b64 	%rd602, {%r4607, %r4608};
	mov.b64 	%rd603, {%r4605, %r4606};
	mov.b64 	%rd604, {%r4603, %r4604};
	mov.b64 	%rd605, {%r4601, %r4602};
	mov.b64 	%rd606, {%r4599, %r4600};
	mov.b64 	%rd607, {%r4597, %r4598};
	mov.b64 	%rd608, {%r4595, %r4596};
	mov.b64 	%rd609, {%r4593, %r4594};
	mov.b64 	%rd610, {%r4591, %r4592};
	mov.b64 	%rd611, {%r4589, %r4590};
	mov.b64 	%rd612, {%r4587, %r4588};
	mov.b64 	%rd613, {%r4585, %r4586};
	mov.b64 	%rd614, {%r4583, %r4584};
	mov.b64 	%rd615, {%r4581, %r4582};
	mov.b64 	%rd616, {%r4579, %r4580};
	mov.b64 	%rd617, {%r4577, %r4578};
	mov.b64 	%rd618, {%r4575, %r4576};
	mov.b64 	%rd619, {%r4573, %r4574};
	mov.b64 	%rd620, {%r4571, %r4572};
	mov.b64 	%rd621, {%r4569, %r4570};
	mov.b64 	%rd622, {%r4567, %r4568};
	mov.b64 	%rd623, {%r4565, %r4566};
	mov.b64 	%rd624, {%r4563, %r4564};
	mov.b64 	%rd625, {%r4561, %r4562};
	mov.b64 	%rd626, {%r4559, %r4560};
	setp.lt.s32 	%p33, %r12032, %r601;
	add.s32 	%r11963, %r11963, 1;
	@%p33 bra 	$L__BB0_16;
$L__BB0_17:                             // %._crit_edge
                                        //   in Loop: Header=BB0_2 Depth=1
	.loc	1 216 45                        // hopper-fa-ws-pipelined-pingpong.py:216:45
	setp.eq.b32 	%p43, %r12100, 0;
	.loc	1 216 33                        // hopper-fa-ws-pipelined-pingpong.py:216:33
	selp.b32 	%r5884, 1, 0, %p43;
	xor.b32 	%r4698, %r12099, %r5884;
	.loc	1 217 37                        // hopper-fa-ws-pipelined-pingpong.py:217:37
	shl.b32 	%r5885, %r12100, 3;
	add.s32 	%r5887, %r602, %r5885;
	add.s32 	%r4697, %r5887, 196672;
	.loc	1 217 48                        // hopper-fa-ws-pipelined-pingpong.py:217:48
	bar.sync 	3, 128;
	// begin inline asm
	
{
	.reg .pred complete;
	waitLoop:
	mbarrier.try_wait.parity.shared.b64 complete, [%r4697], %r4698;
	@!complete bra.uni waitLoop;
}

	// end inline asm
	.loc	1 219 21                        // hopper-fa-ws-pipelined-pingpong.py:219:21
	mov.b64 	{%r5888, %r5889}, %rd626;
	cvt.rn.f16x2.f32 	%r4827, %r5889, %r5888;
	mov.b64 	{%r5890, %r5891}, %rd625;
	cvt.rn.f16x2.f32 	%r4828, %r5891, %r5890;
	mov.b64 	{%r5892, %r5893}, %rd624;
	cvt.rn.f16x2.f32 	%r4829, %r5893, %r5892;
	mov.b64 	{%r5894, %r5895}, %rd623;
	cvt.rn.f16x2.f32 	%r4830, %r5895, %r5894;
	mov.b64 	{%r5896, %r5897}, %rd622;
	cvt.rn.f16x2.f32 	%r4959, %r5897, %r5896;
	mov.b64 	{%r5898, %r5899}, %rd621;
	cvt.rn.f16x2.f32 	%r4960, %r5899, %r5898;
	mov.b64 	{%r5900, %r5901}, %rd620;
	cvt.rn.f16x2.f32 	%r4961, %r5901, %r5900;
	mov.b64 	{%r5902, %r5903}, %rd619;
	cvt.rn.f16x2.f32 	%r4962, %r5903, %r5902;
	mov.b64 	{%r5904, %r5905}, %rd618;
	cvt.rn.f16x2.f32 	%r5091, %r5905, %r5904;
	mov.b64 	{%r5906, %r5907}, %rd617;
	cvt.rn.f16x2.f32 	%r5092, %r5907, %r5906;
	mov.b64 	{%r5908, %r5909}, %rd616;
	cvt.rn.f16x2.f32 	%r5093, %r5909, %r5908;
	mov.b64 	{%r5910, %r5911}, %rd615;
	cvt.rn.f16x2.f32 	%r5094, %r5911, %r5910;
	mov.b64 	{%r5912, %r5913}, %rd614;
	cvt.rn.f16x2.f32 	%r5223, %r5913, %r5912;
	mov.b64 	{%r5914, %r5915}, %rd613;
	cvt.rn.f16x2.f32 	%r5224, %r5915, %r5914;
	mov.b64 	{%r5916, %r5917}, %rd612;
	cvt.rn.f16x2.f32 	%r5225, %r5917, %r5916;
	mov.b64 	{%r5918, %r5919}, %rd611;
	cvt.rn.f16x2.f32 	%r5226, %r5919, %r5918;
	mov.b64 	{%r5920, %r5921}, %rd610;
	cvt.rn.f16x2.f32 	%r5355, %r5921, %r5920;
	mov.b64 	{%r5922, %r5923}, %rd609;
	cvt.rn.f16x2.f32 	%r5356, %r5923, %r5922;
	mov.b64 	{%r5924, %r5925}, %rd608;
	cvt.rn.f16x2.f32 	%r5357, %r5925, %r5924;
	mov.b64 	{%r5926, %r5927}, %rd607;
	cvt.rn.f16x2.f32 	%r5358, %r5927, %r5926;
	mov.b64 	{%r5928, %r5929}, %rd606;
	cvt.rn.f16x2.f32 	%r5487, %r5929, %r5928;
	mov.b64 	{%r5930, %r5931}, %rd605;
	cvt.rn.f16x2.f32 	%r5488, %r5931, %r5930;
	mov.b64 	{%r5932, %r5933}, %rd604;
	cvt.rn.f16x2.f32 	%r5489, %r5933, %r5932;
	mov.b64 	{%r5934, %r5935}, %rd603;
	cvt.rn.f16x2.f32 	%r5490, %r5935, %r5934;
	mov.b64 	{%r5936, %r5937}, %rd602;
	cvt.rn.f16x2.f32 	%r5619, %r5937, %r5936;
	mov.b64 	{%r5938, %r5939}, %rd601;
	cvt.rn.f16x2.f32 	%r5620, %r5939, %r5938;
	mov.b64 	{%r5940, %r5941}, %rd600;
	cvt.rn.f16x2.f32 	%r5621, %r5941, %r5940;
	mov.b64 	{%r5942, %r5943}, %rd599;
	cvt.rn.f16x2.f32 	%r5622, %r5943, %r5942;
	mov.b64 	{%r5944, %r5945}, %rd598;
	cvt.rn.f16x2.f32 	%r5751, %r5945, %r5944;
	mov.b64 	{%r5946, %r5947}, %rd597;
	cvt.rn.f16x2.f32 	%r5752, %r5947, %r5946;
	mov.b64 	{%r5948, %r5949}, %rd596;
	cvt.rn.f16x2.f32 	%r5753, %r5949, %r5948;
	mov.b64 	{%r5950, %r5951}, %rd595;
	cvt.rn.f16x2.f32 	%r5754, %r5951, %r5950;
	.loc	1 220 43                        // hopper-fa-ws-pipelined-pingpong.py:220:43
	shl.b32 	%r5952, %r12100, 15;
	add.s32 	%r5953, %r602, %r5952;
	add.s32 	%r5954, %r5953, 65536;
	.loc	1 220 54                        // hopper-fa-ws-pipelined-pingpong.py:220:54
	wgmma.fence.sync.aligned;
	bfe.u32 	%r5955, %r5954, 4, 14;
	cvt.u64.u32 	%rd380, %r5955;
	or.b64 	%rd372, %rd380, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r12029,%r12028,%r12027,%r12026,%r12025,%r12024,%r12023,%r12022,%r12021,%r12020,%r12019,%r12018,%r12017,%r12016,%r12015,%r12014,%r12013,%r12012,%r12011,%r12010,%r12009,%r12008,%r12007,%r12006,%r12005,%r12004,%r12003,%r12002,%r12001,%r12000,%r11999,%r11998,%r11997,%r11996,%r11995,%r11994,%r11993,%r11992,%r11991,%r11990,%r11989,%r11988,%r11987,%r11986,%r11985,%r11984,%r11983,%r11982,%r11981,%r11980,%r11979,%r11978,%r11977,%r11976,%r11975,%r11974,%r11973,%r11972,%r11971,%r11970,%r11969,%r11968,%r11967,%r11966}, {%r4827,%r4828,%r4829,%r4830}, %rd372, %p5, 1, 1, 1;
	// end inline asm
	add.s32 	%r5956, %r5953, 67584;
	bfe.u32 	%r5957, %r5956, 4, 14;
	cvt.u64.u32 	%rd381, %r5957;
	or.b64 	%rd373, %rd381, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r12029,%r12028,%r12027,%r12026,%r12025,%r12024,%r12023,%r12022,%r12021,%r12020,%r12019,%r12018,%r12017,%r12016,%r12015,%r12014,%r12013,%r12012,%r12011,%r12010,%r12009,%r12008,%r12007,%r12006,%r12005,%r12004,%r12003,%r12002,%r12001,%r12000,%r11999,%r11998,%r11997,%r11996,%r11995,%r11994,%r11993,%r11992,%r11991,%r11990,%r11989,%r11988,%r11987,%r11986,%r11985,%r11984,%r11983,%r11982,%r11981,%r11980,%r11979,%r11978,%r11977,%r11976,%r11975,%r11974,%r11973,%r11972,%r11971,%r11970,%r11969,%r11968,%r11967,%r11966}, {%r4959,%r4960,%r4961,%r4962}, %rd373, %p5, 1, 1, 1;
	// end inline asm
	add.s32 	%r5958, %r5953, 69632;
	bfe.u32 	%r5959, %r5958, 4, 14;
	cvt.u64.u32 	%rd382, %r5959;
	or.b64 	%rd374, %rd382, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r12029,%r12028,%r12027,%r12026,%r12025,%r12024,%r12023,%r12022,%r12021,%r12020,%r12019,%r12018,%r12017,%r12016,%r12015,%r12014,%r12013,%r12012,%r12011,%r12010,%r12009,%r12008,%r12007,%r12006,%r12005,%r12004,%r12003,%r12002,%r12001,%r12000,%r11999,%r11998,%r11997,%r11996,%r11995,%r11994,%r11993,%r11992,%r11991,%r11990,%r11989,%r11988,%r11987,%r11986,%r11985,%r11984,%r11983,%r11982,%r11981,%r11980,%r11979,%r11978,%r11977,%r11976,%r11975,%r11974,%r11973,%r11972,%r11971,%r11970,%r11969,%r11968,%r11967,%r11966}, {%r5091,%r5092,%r5093,%r5094}, %rd374, %p5, 1, 1, 1;
	// end inline asm
	add.s32 	%r5960, %r5953, 71680;
	bfe.u32 	%r5961, %r5960, 4, 14;
	cvt.u64.u32 	%rd383, %r5961;
	or.b64 	%rd375, %rd383, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r12029,%r12028,%r12027,%r12026,%r12025,%r12024,%r12023,%r12022,%r12021,%r12020,%r12019,%r12018,%r12017,%r12016,%r12015,%r12014,%r12013,%r12012,%r12011,%r12010,%r12009,%r12008,%r12007,%r12006,%r12005,%r12004,%r12003,%r12002,%r12001,%r12000,%r11999,%r11998,%r11997,%r11996,%r11995,%r11994,%r11993,%r11992,%r11991,%r11990,%r11989,%r11988,%r11987,%r11986,%r11985,%r11984,%r11983,%r11982,%r11981,%r11980,%r11979,%r11978,%r11977,%r11976,%r11975,%r11974,%r11973,%r11972,%r11971,%r11970,%r11969,%r11968,%r11967,%r11966}, {%r5223,%r5224,%r5225,%r5226}, %rd375, %p5, 1, 1, 1;
	// end inline asm
	add.s32 	%r5962, %r5953, 73728;
	bfe.u32 	%r5963, %r5962, 4, 14;
	cvt.u64.u32 	%rd384, %r5963;
	or.b64 	%rd376, %rd384, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r12029,%r12028,%r12027,%r12026,%r12025,%r12024,%r12023,%r12022,%r12021,%r12020,%r12019,%r12018,%r12017,%r12016,%r12015,%r12014,%r12013,%r12012,%r12011,%r12010,%r12009,%r12008,%r12007,%r12006,%r12005,%r12004,%r12003,%r12002,%r12001,%r12000,%r11999,%r11998,%r11997,%r11996,%r11995,%r11994,%r11993,%r11992,%r11991,%r11990,%r11989,%r11988,%r11987,%r11986,%r11985,%r11984,%r11983,%r11982,%r11981,%r11980,%r11979,%r11978,%r11977,%r11976,%r11975,%r11974,%r11973,%r11972,%r11971,%r11970,%r11969,%r11968,%r11967,%r11966}, {%r5355,%r5356,%r5357,%r5358}, %rd376, %p5, 1, 1, 1;
	// end inline asm
	add.s32 	%r5964, %r5953, 75776;
	bfe.u32 	%r5965, %r5964, 4, 14;
	cvt.u64.u32 	%rd385, %r5965;
	or.b64 	%rd377, %rd385, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r12029,%r12028,%r12027,%r12026,%r12025,%r12024,%r12023,%r12022,%r12021,%r12020,%r12019,%r12018,%r12017,%r12016,%r12015,%r12014,%r12013,%r12012,%r12011,%r12010,%r12009,%r12008,%r12007,%r12006,%r12005,%r12004,%r12003,%r12002,%r12001,%r12000,%r11999,%r11998,%r11997,%r11996,%r11995,%r11994,%r11993,%r11992,%r11991,%r11990,%r11989,%r11988,%r11987,%r11986,%r11985,%r11984,%r11983,%r11982,%r11981,%r11980,%r11979,%r11978,%r11977,%r11976,%r11975,%r11974,%r11973,%r11972,%r11971,%r11970,%r11969,%r11968,%r11967,%r11966}, {%r5487,%r5488,%r5489,%r5490}, %rd377, %p5, 1, 1, 1;
	// end inline asm
	add.s32 	%r5966, %r5953, 77824;
	bfe.u32 	%r5967, %r5966, 4, 14;
	cvt.u64.u32 	%rd386, %r5967;
	or.b64 	%rd378, %rd386, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r12029,%r12028,%r12027,%r12026,%r12025,%r12024,%r12023,%r12022,%r12021,%r12020,%r12019,%r12018,%r12017,%r12016,%r12015,%r12014,%r12013,%r12012,%r12011,%r12010,%r12009,%r12008,%r12007,%r12006,%r12005,%r12004,%r12003,%r12002,%r12001,%r12000,%r11999,%r11998,%r11997,%r11996,%r11995,%r11994,%r11993,%r11992,%r11991,%r11990,%r11989,%r11988,%r11987,%r11986,%r11985,%r11984,%r11983,%r11982,%r11981,%r11980,%r11979,%r11978,%r11977,%r11976,%r11975,%r11974,%r11973,%r11972,%r11971,%r11970,%r11969,%r11968,%r11967,%r11966}, {%r5619,%r5620,%r5621,%r5622}, %rd378, %p5, 1, 1, 1;
	// end inline asm
	add.s32 	%r5968, %r5953, 79872;
	bfe.u32 	%r5969, %r5968, 4, 14;
	cvt.u64.u32 	%rd387, %r5969;
	or.b64 	%rd379, %rd387, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r12029,%r12028,%r12027,%r12026,%r12025,%r12024,%r12023,%r12022,%r12021,%r12020,%r12019,%r12018,%r12017,%r12016,%r12015,%r12014,%r12013,%r12012,%r12011,%r12010,%r12009,%r12008,%r12007,%r12006,%r12005,%r12004,%r12003,%r12002,%r12001,%r12000,%r11999,%r11998,%r11997,%r11996,%r11995,%r11994,%r11993,%r11992,%r11991,%r11990,%r11989,%r11988,%r11987,%r11986,%r11985,%r11984,%r11983,%r11982,%r11981,%r11980,%r11979,%r11978,%r11977,%r11976,%r11975,%r11974,%r11973,%r11972,%r11971,%r11970,%r11969,%r11968,%r11967,%r11966}, {%r5751,%r5752,%r5753,%r5754}, %rd379, %p5, 1, 1, 1;
	// end inline asm
	wgmma.commit_group.sync.aligned;
	.loc	1 222 40                        // hopper-fa-ws-pipelined-pingpong.py:222:40
	// begin inline asm
	// wait for regs: %r12029,%r12028,%r12027,%r12026,%r12025,%r12024,%r12023,%r12022,%r12021,%r12020,%r12019,%r12018,%r12017,%r12016,%r12015,%r12014,%r12013,%r12012,%r12011,%r12010,%r12009,%r12008,%r12007,%r12006,%r12005,%r12004,%r12003,%r12002,%r12001,%r12000,%r11999,%r11998,%r11997,%r11996,%r11995,%r11994,%r11993,%r11992,%r11991,%r11990,%r11989,%r11988,%r11987,%r11986,%r11985,%r11984,%r11983,%r11982,%r11981,%r11980,%r11979,%r11978,%r11977,%r11976,%r11975,%r11974,%r11973,%r11972,%r11971,%r11970,%r11969,%r11968,%r11967,%r11966
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 224 41                        // hopper-fa-ws-pipelined-pingpong.py:224:41
	add.s32 	%r5883, %r5887, 196656;
	.loc	1 224 52                        // hopper-fa-ws-pipelined-pingpong.py:224:52
	bar.sync 	3, 128;
	// begin inline asm
	@%p29 mbarrier.arrive.shared::cta.b64 _, [%r5883];
	// end inline asm
	.loc	1 227 36                        // hopper-fa-ws-pipelined-pingpong.py:227:36
	mov.u32 	%r5970, %ctaid.x;
	.loc	1 228 35                        // hopper-fa-ws-pipelined-pingpong.py:228:35
	mov.u32 	%r5971, %ctaid.y;
	.loc	1 232 47                        // hopper-fa-ws-pipelined-pingpong.py:232:47
	shl.b32 	%r576, %r5970, 7;
	.loc	1 233 46                        // hopper-fa-ws-pipelined-pingpong.py:233:46
	mul.lo.s32 	%r577, %r5971, %r601;
	add.s32 	%r5972, %r577, %r576;
	.loc	1 234 32                        // hopper-fa-ws-pipelined-pingpong.py:234:32
	setp.lt.f32 	%p44, %r12033, 0f00800000;
	mul.f32 	%r5973, %r12033, 0f4B000000;
	selp.f32 	%r579, %r5973, %r12033, %p44;
	selp.f32 	%r5974, 0fC1B80000, 0f00000000, %p44;
	add.s32 	%r5975, %r579, -1060439283;
	and.b32 	%r5976, %r5975, -8388608;
	sub.s32 	%r5977, %r579, %r5976;
	cvt.rn.f32.s32 	%r5978, %r5976;
	mov.b32 	%r5979, 0f34000000;
	fma.rn.ftz.f32 	%r5980, %r5978, %r5979, %r5974;
	add.f32 	%r5981, %r5977, 0fBF800000;
	mov.b32 	%r5982, 0fBE2C7F30;
	mov.b32 	%r5983, 0f3DC6B27F;
	fma.rn.ftz.f32 	%r5984, %r5983, %r5981, %r5982;
	mov.b32 	%r5985, 0f3E2FCF2A;
	fma.rn.ftz.f32 	%r5986, %r5984, %r5981, %r5985;
	mov.b32 	%r5987, 0fBE374E43;
	fma.rn.ftz.f32 	%r5988, %r5986, %r5981, %r5987;
	mov.b32 	%r5989, 0f3E520BF4;
	fma.rn.ftz.f32 	%r5990, %r5988, %r5981, %r5989;
	mov.b32 	%r5991, 0fBE763C8B;
	fma.rn.ftz.f32 	%r5992, %r5990, %r5981, %r5991;
	mov.b32 	%r5993, 0f3E93BF99;
	fma.rn.ftz.f32 	%r5994, %r5992, %r5981, %r5993;
	mov.b32 	%r5995, 0fBEB8AA49;
	fma.rn.ftz.f32 	%r5996, %r5994, %r5981, %r5995;
	mov.b32 	%r5997, 0f3EF6384A;
	fma.rn.ftz.f32 	%r5998, %r5996, %r5981, %r5997;
	mov.b32 	%r5999, 0fBF38AA3B;
	fma.rn.ftz.f32 	%r6000, %r5998, %r5981, %r5999;
	mul.f32 	%r6001, %r5981, %r6000;
	mul.f32 	%r6002, %r5981, %r6001;
	mov.b32 	%r6003, 0f3FB8AA3B;
	fma.rn.ftz.f32 	%r6004, %r5981, %r6003, %r6002;
	add.f32 	%r12101, %r5980, %r6004;
	setp.lt.u32 	%p45, %r579, 2139095040;
	mov.b32 	%r6005, 0f7F800000;
	@%p45 bra 	$L__BB0_19;
// %bb.18:                              // %__nv_fmaf_rn.exit.i.i
                                        //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 32                          // hopper-fa-ws-pipelined-pingpong.py:0:32
	fma.rn.ftz.f32 	%r12101, %r579, %r6005, %r6005;
$L__BB0_19:                             // %__nv_log2f.exit
                                        //   in Loop: Header=BB0_2 Depth=1
	add.s32 	%r6041, %r5972, 64;
	.loc	1 234 32                        // hopper-fa-ws-pipelined-pingpong.py:234:32
	setp.eq.f32 	%p46, %r579, 0f00000000;
	selp.f32 	%r583, 0fFF800000, %r12101, %p46;
	setp.lt.f32 	%p47, %r12034, 0f00800000;
	mul.f32 	%r6006, %r12034, 0f4B000000;
	selp.f32 	%r584, %r6006, %r12034, %p47;
	selp.f32 	%r6007, 0fC1B80000, 0f00000000, %p47;
	add.s32 	%r6008, %r584, -1060439283;
	and.b32 	%r6009, %r6008, -8388608;
	sub.s32 	%r6010, %r584, %r6009;
	cvt.rn.f32.s32 	%r6011, %r6009;
	fma.rn.ftz.f32 	%r6013, %r6011, %r5979, %r6007;
	add.f32 	%r6014, %r6010, 0fBF800000;
	fma.rn.ftz.f32 	%r6017, %r5983, %r6014, %r5982;
	fma.rn.ftz.f32 	%r6019, %r6017, %r6014, %r5985;
	fma.rn.ftz.f32 	%r6021, %r6019, %r6014, %r5987;
	fma.rn.ftz.f32 	%r6023, %r6021, %r6014, %r5989;
	fma.rn.ftz.f32 	%r6025, %r6023, %r6014, %r5991;
	fma.rn.ftz.f32 	%r6027, %r6025, %r6014, %r5993;
	fma.rn.ftz.f32 	%r6029, %r6027, %r6014, %r5995;
	fma.rn.ftz.f32 	%r6031, %r6029, %r6014, %r5997;
	fma.rn.ftz.f32 	%r6033, %r6031, %r6014, %r5999;
	mul.f32 	%r6034, %r6014, %r6033;
	mul.f32 	%r6035, %r6014, %r6034;
	fma.rn.ftz.f32 	%r6037, %r6014, %r6003, %r6035;
	add.f32 	%r12102, %r6013, %r6037;
	setp.lt.u32 	%p48, %r584, 2139095040;
	@%p48 bra 	$L__BB0_21;
// %bb.20:                              // %__nv_fmaf_rn.exit.i.i1354
                                        //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 32                          // hopper-fa-ws-pipelined-pingpong.py:0:32
	fma.rn.ftz.f32 	%r12102, %r584, %r6005, %r6005;
	bra.uni 	$L__BB0_21;
$L__BB0_6:                              // %__nv_exp2f.exit932
                                        //   in Loop: Header=BB0_2 Depth=1
	.loc	1 65 9                          // hopper-fa-ws-pipelined-pingpong.py:65:9
	setmaxnreg.inc.sync.aligned.u32 	232;
	barrier.sync 	1;
	.loc	1 116 24                        // hopper-fa-ws-pipelined-pingpong.py:116:24
	mul.f32 	%r4, %r600, 0f3FB8AA3B;
	.loc	1 120 43                        // hopper-fa-ws-pipelined-pingpong.py:120:43
	add.s32 	%r6180, %r602, 196608;
	mov.b32 	%r11960, 0;
	// begin inline asm
	
{
	.reg .pred complete;
	waitLoop:
	mbarrier.try_wait.parity.shared.b64 complete, [%r6180], %r11960;
	@!complete bra.uni waitLoop;
}

	// end inline asm
	.loc	1 129 48                        // hopper-fa-ws-pipelined-pingpong.py:129:48
	add.s32 	%r6182, %r602, 196640;
	// begin inline asm
	
{
	.reg .pred complete;
	waitLoop:
	mbarrier.try_wait.parity.shared.b64 complete, [%r6182], %r11960;
	@!complete bra.uni waitLoop;
}

	// end inline asm
	mov.b32 	%r6184, 9;
	mov.b32 	%r6185, 256;
	.loc	1 136 42                        // hopper-fa-ws-pipelined-pingpong.py:136:42
	// begin inline asm
	bar.sync %r6184, %r6185;
	// end inline asm
	.loc	1 143 45                        // hopper-fa-ws-pipelined-pingpong.py:143:45
	add.s32 	%r7280, %r1, -128;
	shr.u32 	%r7281, %r7280, 5;
	shfl.sync.idx.b32 	%r5, %r7281, 0, 31, -1;
	wgmma.fence.sync.aligned;
	add.s32 	%r7282, %r602, 131072;
	bfe.u32 	%r7283, %r7282, 4, 14;
	cvt.u64.u32 	%rd408, %r7283;
	or.b64 	%rd428, %rd408, 4611686293338849280;
	bfe.u32 	%r7284, %r602, 4, 14;
	cvt.u64.u32 	%rd409, %r7284;
	or.b64 	%rd393, %rd409, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r6378,%r6379,%r6380,%r6381,%r6382,%r6383,%r6384,%r6385,%r6386,%r6387,%r6388,%r6389,%r6390,%r6391,%r6392,%r6393,%r6394,%r6395,%r6396,%r6397,%r6398,%r6399,%r6400,%r6401,%r6402,%r6403,%r6404,%r6405,%r6406,%r6407,%r6408,%r6409,%r6410,%r6411,%r6412,%r6413,%r6414,%r6415,%r6416,%r6417,%r6418,%r6419,%r6420,%r6421,%r6422,%r6423,%r6424,%r6425,%r6426,%r6427,%r6428,%r6429,%r6430,%r6431,%r6432,%r6433,%r6434,%r6435,%r6436,%r6437,%r6438,%r6439,%r6440,%r6441}, %rd428, %rd393, 0, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r7285, %r602, 131104;
	bfe.u32 	%r7286, %r7285, 4, 14;
	cvt.u64.u32 	%rd410, %r7286;
	or.b64 	%rd430, %rd410, 4611686293338849280;
	add.s32 	%r7287, %r602, 32;
	bfe.u32 	%r7288, %r7287, 4, 14;
	cvt.u64.u32 	%rd411, %r7288;
	or.b64 	%rd395, %rd411, 4611686293372403712;
	mov.pred 	%p54, -1;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r6378,%r6379,%r6380,%r6381,%r6382,%r6383,%r6384,%r6385,%r6386,%r6387,%r6388,%r6389,%r6390,%r6391,%r6392,%r6393,%r6394,%r6395,%r6396,%r6397,%r6398,%r6399,%r6400,%r6401,%r6402,%r6403,%r6404,%r6405,%r6406,%r6407,%r6408,%r6409,%r6410,%r6411,%r6412,%r6413,%r6414,%r6415,%r6416,%r6417,%r6418,%r6419,%r6420,%r6421,%r6422,%r6423,%r6424,%r6425,%r6426,%r6427,%r6428,%r6429,%r6430,%r6431,%r6432,%r6433,%r6434,%r6435,%r6436,%r6437,%r6438,%r6439,%r6440,%r6441}, %rd430, %rd395, %p54, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r7289, %r602, 131136;
	bfe.u32 	%r7290, %r7289, 4, 14;
	cvt.u64.u32 	%rd412, %r7290;
	or.b64 	%rd432, %rd412, 4611686293338849280;
	add.s32 	%r7291, %r602, 64;
	bfe.u32 	%r7292, %r7291, 4, 14;
	cvt.u64.u32 	%rd413, %r7292;
	or.b64 	%rd397, %rd413, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r6378,%r6379,%r6380,%r6381,%r6382,%r6383,%r6384,%r6385,%r6386,%r6387,%r6388,%r6389,%r6390,%r6391,%r6392,%r6393,%r6394,%r6395,%r6396,%r6397,%r6398,%r6399,%r6400,%r6401,%r6402,%r6403,%r6404,%r6405,%r6406,%r6407,%r6408,%r6409,%r6410,%r6411,%r6412,%r6413,%r6414,%r6415,%r6416,%r6417,%r6418,%r6419,%r6420,%r6421,%r6422,%r6423,%r6424,%r6425,%r6426,%r6427,%r6428,%r6429,%r6430,%r6431,%r6432,%r6433,%r6434,%r6435,%r6436,%r6437,%r6438,%r6439,%r6440,%r6441}, %rd432, %rd397, %p54, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r7293, %r602, 131168;
	bfe.u32 	%r7294, %r7293, 4, 14;
	cvt.u64.u32 	%rd414, %r7294;
	or.b64 	%rd434, %rd414, 4611686293338849280;
	add.s32 	%r7295, %r602, 96;
	bfe.u32 	%r7296, %r7295, 4, 14;
	cvt.u64.u32 	%rd415, %r7296;
	or.b64 	%rd399, %rd415, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r6378,%r6379,%r6380,%r6381,%r6382,%r6383,%r6384,%r6385,%r6386,%r6387,%r6388,%r6389,%r6390,%r6391,%r6392,%r6393,%r6394,%r6395,%r6396,%r6397,%r6398,%r6399,%r6400,%r6401,%r6402,%r6403,%r6404,%r6405,%r6406,%r6407,%r6408,%r6409,%r6410,%r6411,%r6412,%r6413,%r6414,%r6415,%r6416,%r6417,%r6418,%r6419,%r6420,%r6421,%r6422,%r6423,%r6424,%r6425,%r6426,%r6427,%r6428,%r6429,%r6430,%r6431,%r6432,%r6433,%r6434,%r6435,%r6436,%r6437,%r6438,%r6439,%r6440,%r6441}, %rd434, %rd399, %p54, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r7297, %r602, 139264;
	bfe.u32 	%r7298, %r7297, 4, 14;
	cvt.u64.u32 	%rd416, %r7298;
	or.b64 	%rd436, %rd416, 4611686293338849280;
	add.s32 	%r7299, %r602, 16384;
	bfe.u32 	%r7300, %r7299, 4, 14;
	cvt.u64.u32 	%rd417, %r7300;
	or.b64 	%rd401, %rd417, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r6378,%r6379,%r6380,%r6381,%r6382,%r6383,%r6384,%r6385,%r6386,%r6387,%r6388,%r6389,%r6390,%r6391,%r6392,%r6393,%r6394,%r6395,%r6396,%r6397,%r6398,%r6399,%r6400,%r6401,%r6402,%r6403,%r6404,%r6405,%r6406,%r6407,%r6408,%r6409,%r6410,%r6411,%r6412,%r6413,%r6414,%r6415,%r6416,%r6417,%r6418,%r6419,%r6420,%r6421,%r6422,%r6423,%r6424,%r6425,%r6426,%r6427,%r6428,%r6429,%r6430,%r6431,%r6432,%r6433,%r6434,%r6435,%r6436,%r6437,%r6438,%r6439,%r6440,%r6441}, %rd436, %rd401, %p54, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r7301, %r602, 139296;
	bfe.u32 	%r7302, %r7301, 4, 14;
	cvt.u64.u32 	%rd418, %r7302;
	or.b64 	%rd438, %rd418, 4611686293338849280;
	add.s32 	%r7303, %r602, 16416;
	bfe.u32 	%r7304, %r7303, 4, 14;
	cvt.u64.u32 	%rd419, %r7304;
	or.b64 	%rd403, %rd419, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r6378,%r6379,%r6380,%r6381,%r6382,%r6383,%r6384,%r6385,%r6386,%r6387,%r6388,%r6389,%r6390,%r6391,%r6392,%r6393,%r6394,%r6395,%r6396,%r6397,%r6398,%r6399,%r6400,%r6401,%r6402,%r6403,%r6404,%r6405,%r6406,%r6407,%r6408,%r6409,%r6410,%r6411,%r6412,%r6413,%r6414,%r6415,%r6416,%r6417,%r6418,%r6419,%r6420,%r6421,%r6422,%r6423,%r6424,%r6425,%r6426,%r6427,%r6428,%r6429,%r6430,%r6431,%r6432,%r6433,%r6434,%r6435,%r6436,%r6437,%r6438,%r6439,%r6440,%r6441}, %rd438, %rd403, %p54, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r7305, %r602, 139328;
	bfe.u32 	%r7306, %r7305, 4, 14;
	cvt.u64.u32 	%rd420, %r7306;
	or.b64 	%rd440, %rd420, 4611686293338849280;
	add.s32 	%r7307, %r602, 16448;
	bfe.u32 	%r7308, %r7307, 4, 14;
	cvt.u64.u32 	%rd421, %r7308;
	or.b64 	%rd405, %rd421, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r6378,%r6379,%r6380,%r6381,%r6382,%r6383,%r6384,%r6385,%r6386,%r6387,%r6388,%r6389,%r6390,%r6391,%r6392,%r6393,%r6394,%r6395,%r6396,%r6397,%r6398,%r6399,%r6400,%r6401,%r6402,%r6403,%r6404,%r6405,%r6406,%r6407,%r6408,%r6409,%r6410,%r6411,%r6412,%r6413,%r6414,%r6415,%r6416,%r6417,%r6418,%r6419,%r6420,%r6421,%r6422,%r6423,%r6424,%r6425,%r6426,%r6427,%r6428,%r6429,%r6430,%r6431,%r6432,%r6433,%r6434,%r6435,%r6436,%r6437,%r6438,%r6439,%r6440,%r6441}, %rd440, %rd405, %p54, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r7309, %r602, 139360;
	bfe.u32 	%r7310, %r7309, 4, 14;
	cvt.u64.u32 	%rd422, %r7310;
	or.b64 	%rd442, %rd422, 4611686293338849280;
	add.s32 	%r7311, %r602, 16480;
	bfe.u32 	%r7312, %r7311, 4, 14;
	cvt.u64.u32 	%rd423, %r7312;
	or.b64 	%rd407, %rd423, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r6378,%r6379,%r6380,%r6381,%r6382,%r6383,%r6384,%r6385,%r6386,%r6387,%r6388,%r6389,%r6390,%r6391,%r6392,%r6393,%r6394,%r6395,%r6396,%r6397,%r6398,%r6399,%r6400,%r6401,%r6402,%r6403,%r6404,%r6405,%r6406,%r6407,%r6408,%r6409,%r6410,%r6411,%r6412,%r6413,%r6414,%r6415,%r6416,%r6417,%r6418,%r6419,%r6420,%r6421,%r6422,%r6423,%r6424,%r6425,%r6426,%r6427,%r6428,%r6429,%r6430,%r6431,%r6432,%r6433,%r6434,%r6435,%r6436,%r6437,%r6438,%r6439,%r6440,%r6441}, %rd442, %rd407, %p54, 1, 1, 0, 0;
	// end inline asm
	wgmma.commit_group.sync.aligned;
	mov.b32 	%r7146, 10;
	.loc	1 147 45                        // hopper-fa-ws-pipelined-pingpong.py:147:45
	// begin inline asm
	bar.arrive %r7146, %r6185;
	// end inline asm
	.loc	1 150 39                        // hopper-fa-ws-pipelined-pingpong.py:150:39
	// begin inline asm
	// wait for regs: %r6378,%r6379,%r6380,%r6381,%r6382,%r6383,%r6384,%r6385,%r6386,%r6387,%r6388,%r6389,%r6390,%r6391,%r6392,%r6393,%r6394,%r6395,%r6396,%r6397,%r6398,%r6399,%r6400,%r6401,%r6402,%r6403,%r6404,%r6405,%r6406,%r6407,%r6408,%r6409,%r6410,%r6411,%r6412,%r6413,%r6414,%r6415,%r6416,%r6417,%r6418,%r6419,%r6420,%r6421,%r6422,%r6423,%r6424,%r6425,%r6426,%r6427,%r6428,%r6429,%r6430,%r6431,%r6432,%r6433,%r6434,%r6435,%r6436,%r6437,%r6438,%r6439,%r6440,%r6441
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 152 52                        // hopper-fa-ws-pipelined-pingpong.py:152:52
	bar.sync 	2, 128;
	and.b32 	%r6, %r1, 127;
	setp.eq.b32 	%p78, %r6, 0;
	add.s32 	%r7276, %r602, 196624;
	// begin inline asm
	@%p78 mbarrier.arrive.shared::cta.b64 _, [%r7276];
	// end inline asm
$L__tmp9:
	.loc	2 168 27                        // standard.py:168:27 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	max.f32 	%r7313, %r6378, %r6379;
	max.f32 	%r7314, %r6380, %r6381;
	max.f32 	%r7315, %r7313, %r6382;
	max.f32 	%r7316, %r7315, %r6383;
	max.f32 	%r7317, %r7314, %r6384;
	max.f32 	%r7318, %r7317, %r6385;
	max.f32 	%r7319, %r7316, %r6386;
	max.f32 	%r7320, %r7319, %r6387;
	max.f32 	%r7321, %r7318, %r6388;
	max.f32 	%r7322, %r7321, %r6389;
	max.f32 	%r7323, %r7320, %r6390;
	max.f32 	%r7324, %r7323, %r6391;
	max.f32 	%r7325, %r7322, %r6392;
	max.f32 	%r7326, %r7325, %r6393;
	max.f32 	%r7327, %r7324, %r6394;
	max.f32 	%r7328, %r7327, %r6395;
	max.f32 	%r7329, %r7326, %r6396;
	max.f32 	%r7330, %r7329, %r6397;
	max.f32 	%r7331, %r7328, %r6398;
	max.f32 	%r7332, %r7331, %r6399;
	max.f32 	%r7333, %r7330, %r6400;
	max.f32 	%r7334, %r7333, %r6401;
	max.f32 	%r7335, %r7332, %r6402;
	max.f32 	%r7336, %r7335, %r6403;
	max.f32 	%r7337, %r7334, %r6404;
	max.f32 	%r7338, %r7337, %r6405;
	max.f32 	%r7339, %r7336, %r6406;
	max.f32 	%r7340, %r7339, %r6407;
	max.f32 	%r7341, %r7338, %r6408;
	max.f32 	%r7342, %r7341, %r6409;
	max.f32 	%r7343, %r7340, %r6410;
	max.f32 	%r7344, %r7343, %r6411;
	max.f32 	%r7345, %r7342, %r6412;
	max.f32 	%r7346, %r7345, %r6413;
	max.f32 	%r7347, %r7344, %r6414;
	max.f32 	%r7348, %r7347, %r6415;
	max.f32 	%r7349, %r7346, %r6416;
	max.f32 	%r7350, %r7349, %r6417;
	max.f32 	%r7351, %r7348, %r6418;
	max.f32 	%r7352, %r7351, %r6419;
	max.f32 	%r7353, %r7350, %r6420;
	max.f32 	%r7354, %r7353, %r6421;
	max.f32 	%r7355, %r7352, %r6422;
	max.f32 	%r7356, %r7355, %r6423;
	max.f32 	%r7357, %r7354, %r6424;
	max.f32 	%r7358, %r7357, %r6425;
	max.f32 	%r7359, %r7356, %r6426;
	max.f32 	%r7360, %r7359, %r6427;
	max.f32 	%r7361, %r7358, %r6428;
	max.f32 	%r7362, %r7361, %r6429;
	max.f32 	%r7363, %r7360, %r6430;
	max.f32 	%r7364, %r7363, %r6431;
	max.f32 	%r7365, %r7362, %r6432;
	max.f32 	%r7366, %r7365, %r6433;
	max.f32 	%r7367, %r7364, %r6434;
	max.f32 	%r7368, %r7367, %r6435;
	max.f32 	%r7369, %r7366, %r6436;
	max.f32 	%r7370, %r7369, %r6437;
	max.f32 	%r7371, %r7368, %r6438;
	max.f32 	%r7372, %r7371, %r6439;
	max.f32 	%r7373, %r7370, %r6440;
	max.f32 	%r7374, %r7373, %r6441;
	.loc	2 189 40                        // standard.py:189:40 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	shfl.sync.bfly.b32 	%r7375, %r7372, 2, 31, -1;
	.loc	2 168 27                        // standard.py:168:27 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	max.f32 	%r7376, %r7372, %r7375;
	.loc	2 189 40                        // standard.py:189:40 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	shfl.sync.bfly.b32 	%r7377, %r7376, 1, 31, -1;
	shfl.sync.bfly.b32 	%r7378, %r7374, 2, 31, -1;
	.loc	2 168 27                        // standard.py:168:27 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	max.f32 	%r7379, %r7374, %r7378;
	.loc	2 189 40                        // standard.py:189:40 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	shfl.sync.bfly.b32 	%r7380, %r7379, 1, 31, -1;
	cvt.u64.u32 	%rd424, %r7377;
	cvt.u64.u32 	%rd425, %r7380;
	shl.b64 	%rd426, %rd425, 32;
	or.b64 	%rd427, %rd424, %rd426;
	.loc	2 168 27                        // standard.py:168:27 @[ hopper-fa-ws-pipelined-pingpong.py:155:46 ]
	mov.b64 	{%r7381, %r7382}, %rd427;
	max.f32 	%r7383, %r7379, %r7382;
	max.f32 	%r7384, %r7376, %r7381;
$L__tmp10:
	.loc	1 155 51                        // hopper-fa-ws-pipelined-pingpong.py:155:51
	mul.f32 	%r7385, %r4, %r7384;
	mul.f32 	%r7386, %r4, %r7383;
	.loc	1 155 35                        // hopper-fa-ws-pipelined-pingpong.py:155:35
	max.f32 	%r7387, %r7386, 0fFF800000;
	max.f32 	%r7388, %r7385, 0fFF800000;
	mov.b64 	%rd528, {%r7388, %r7387};
	.loc	1 156 33                        // hopper-fa-ws-pipelined-pingpong.py:156:33
	neg.f32 	%r7389, %r7388;
	fma.rn.f32 	%r7390, %r4, %r6378, %r7389;
	fma.rn.f32 	%r7391, %r4, %r6379, %r7389;
	neg.f32 	%r7392, %r7387;
	fma.rn.f32 	%r7393, %r4, %r6380, %r7392;
	fma.rn.f32 	%r7394, %r4, %r6381, %r7392;
	fma.rn.f32 	%r7395, %r4, %r6382, %r7389;
	fma.rn.f32 	%r7396, %r4, %r6383, %r7389;
	fma.rn.f32 	%r7397, %r4, %r6384, %r7392;
	fma.rn.f32 	%r7398, %r4, %r6385, %r7392;
	fma.rn.f32 	%r7399, %r4, %r6386, %r7389;
	fma.rn.f32 	%r7400, %r4, %r6387, %r7389;
	fma.rn.f32 	%r7401, %r4, %r6388, %r7392;
	fma.rn.f32 	%r7402, %r4, %r6389, %r7392;
	fma.rn.f32 	%r7403, %r4, %r6390, %r7389;
	fma.rn.f32 	%r7404, %r4, %r6391, %r7389;
	fma.rn.f32 	%r7405, %r4, %r6392, %r7392;
	fma.rn.f32 	%r7406, %r4, %r6393, %r7392;
	fma.rn.f32 	%r7407, %r4, %r6394, %r7389;
	fma.rn.f32 	%r7408, %r4, %r6395, %r7389;
	fma.rn.f32 	%r7409, %r4, %r6396, %r7392;
	fma.rn.f32 	%r7410, %r4, %r6397, %r7392;
	fma.rn.f32 	%r7411, %r4, %r6398, %r7389;
	fma.rn.f32 	%r7412, %r4, %r6399, %r7389;
	fma.rn.f32 	%r7413, %r4, %r6400, %r7392;
	fma.rn.f32 	%r7414, %r4, %r6401, %r7392;
	fma.rn.f32 	%r7415, %r4, %r6402, %r7389;
	fma.rn.f32 	%r7416, %r4, %r6403, %r7389;
	fma.rn.f32 	%r7417, %r4, %r6404, %r7392;
	fma.rn.f32 	%r7418, %r4, %r6405, %r7392;
	fma.rn.f32 	%r7419, %r4, %r6406, %r7389;
	fma.rn.f32 	%r7420, %r4, %r6407, %r7389;
	fma.rn.f32 	%r7421, %r4, %r6408, %r7392;
	fma.rn.f32 	%r7422, %r4, %r6409, %r7392;
	fma.rn.f32 	%r7423, %r4, %r6410, %r7389;
	fma.rn.f32 	%r7424, %r4, %r6411, %r7389;
	fma.rn.f32 	%r7425, %r4, %r6412, %r7392;
	fma.rn.f32 	%r7426, %r4, %r6413, %r7392;
	fma.rn.f32 	%r7427, %r4, %r6414, %r7389;
	fma.rn.f32 	%r7428, %r4, %r6415, %r7389;
	fma.rn.f32 	%r7429, %r4, %r6416, %r7392;
	fma.rn.f32 	%r7430, %r4, %r6417, %r7392;
	fma.rn.f32 	%r7431, %r4, %r6418, %r7389;
	fma.rn.f32 	%r7432, %r4, %r6419, %r7389;
	fma.rn.f32 	%r7433, %r4, %r6420, %r7392;
	fma.rn.f32 	%r7434, %r4, %r6421, %r7392;
	fma.rn.f32 	%r7435, %r4, %r6422, %r7389;
	fma.rn.f32 	%r7436, %r4, %r6423, %r7389;
	fma.rn.f32 	%r7437, %r4, %r6424, %r7392;
	fma.rn.f32 	%r7438, %r4, %r6425, %r7392;
	fma.rn.f32 	%r7439, %r4, %r6426, %r7389;
	fma.rn.f32 	%r7440, %r4, %r6427, %r7389;
	fma.rn.f32 	%r7441, %r4, %r6428, %r7392;
	fma.rn.f32 	%r7442, %r4, %r6429, %r7392;
	fma.rn.f32 	%r7443, %r4, %r6430, %r7389;
	fma.rn.f32 	%r7444, %r4, %r6431, %r7389;
	fma.rn.f32 	%r7445, %r4, %r6432, %r7392;
	fma.rn.f32 	%r7446, %r4, %r6433, %r7392;
	fma.rn.f32 	%r7447, %r4, %r6434, %r7389;
	fma.rn.f32 	%r7448, %r4, %r6435, %r7389;
	fma.rn.f32 	%r7449, %r4, %r6436, %r7392;
	fma.rn.f32 	%r7450, %r4, %r6437, %r7392;
	fma.rn.f32 	%r7451, %r4, %r6438, %r7389;
	fma.rn.f32 	%r7452, %r4, %r6439, %r7389;
	fma.rn.f32 	%r7453, %r4, %r6440, %r7392;
	fma.rn.f32 	%r7454, %r4, %r6441, %r7392;
	.loc	1 157 29                        // hopper-fa-ws-pipelined-pingpong.py:157:29
	ex2.approx.ftz.f32 	%r7455, %r7390;
	ex2.approx.ftz.f32 	%r7456, %r7391;
	ex2.approx.ftz.f32 	%r7457, %r7393;
	ex2.approx.ftz.f32 	%r7458, %r7394;
	ex2.approx.ftz.f32 	%r7459, %r7395;
	ex2.approx.ftz.f32 	%r7460, %r7396;
	ex2.approx.ftz.f32 	%r7461, %r7397;
	ex2.approx.ftz.f32 	%r7462, %r7398;
	ex2.approx.ftz.f32 	%r7463, %r7399;
	ex2.approx.ftz.f32 	%r7464, %r7400;
	ex2.approx.ftz.f32 	%r7465, %r7401;
	ex2.approx.ftz.f32 	%r7466, %r7402;
	ex2.approx.ftz.f32 	%r7467, %r7403;
	ex2.approx.ftz.f32 	%r7468, %r7404;
	ex2.approx.ftz.f32 	%r7469, %r7405;
	ex2.approx.ftz.f32 	%r7470, %r7406;
	ex2.approx.ftz.f32 	%r7471, %r7407;
	ex2.approx.ftz.f32 	%r7472, %r7408;
	ex2.approx.ftz.f32 	%r7473, %r7409;
	ex2.approx.ftz.f32 	%r7474, %r7410;
	ex2.approx.ftz.f32 	%r7475, %r7411;
	ex2.approx.ftz.f32 	%r7476, %r7412;
	ex2.approx.ftz.f32 	%r7477, %r7413;
	ex2.approx.ftz.f32 	%r7478, %r7414;
	ex2.approx.ftz.f32 	%r7479, %r7415;
	ex2.approx.ftz.f32 	%r7480, %r7416;
	ex2.approx.ftz.f32 	%r7481, %r7417;
	ex2.approx.ftz.f32 	%r7482, %r7418;
	ex2.approx.ftz.f32 	%r7483, %r7419;
	ex2.approx.ftz.f32 	%r7484, %r7420;
	ex2.approx.ftz.f32 	%r7485, %r7421;
	ex2.approx.ftz.f32 	%r7486, %r7422;
	ex2.approx.ftz.f32 	%r7487, %r7423;
	ex2.approx.ftz.f32 	%r7488, %r7424;
	ex2.approx.ftz.f32 	%r7489, %r7425;
	ex2.approx.ftz.f32 	%r7490, %r7426;
	ex2.approx.ftz.f32 	%r7491, %r7427;
	ex2.approx.ftz.f32 	%r7492, %r7428;
	ex2.approx.ftz.f32 	%r7493, %r7429;
	ex2.approx.ftz.f32 	%r7494, %r7430;
	ex2.approx.ftz.f32 	%r7495, %r7431;
	ex2.approx.ftz.f32 	%r7496, %r7432;
	ex2.approx.ftz.f32 	%r7497, %r7433;
	ex2.approx.ftz.f32 	%r7498, %r7434;
	ex2.approx.ftz.f32 	%r7499, %r7435;
	ex2.approx.ftz.f32 	%r7500, %r7436;
	ex2.approx.ftz.f32 	%r7501, %r7437;
	ex2.approx.ftz.f32 	%r7502, %r7438;
	ex2.approx.ftz.f32 	%r7503, %r7439;
	ex2.approx.ftz.f32 	%r7504, %r7440;
	ex2.approx.ftz.f32 	%r7505, %r7441;
	ex2.approx.ftz.f32 	%r7506, %r7442;
	ex2.approx.ftz.f32 	%r7507, %r7443;
	ex2.approx.ftz.f32 	%r7508, %r7444;
	ex2.approx.ftz.f32 	%r7509, %r7445;
	ex2.approx.ftz.f32 	%r7510, %r7446;
	ex2.approx.ftz.f32 	%r7511, %r7447;
	ex2.approx.ftz.f32 	%r7512, %r7448;
	ex2.approx.ftz.f32 	%r7513, %r7449;
	ex2.approx.ftz.f32 	%r7514, %r7450;
	ex2.approx.ftz.f32 	%r7515, %r7451;
	ex2.approx.ftz.f32 	%r7516, %r7452;
	ex2.approx.ftz.f32 	%r7517, %r7453;
	ex2.approx.ftz.f32 	%r7518, %r7454;
	mov.b32 	%r7519, 0fFF800000;
	.loc	1 159 39                        // hopper-fa-ws-pipelined-pingpong.py:159:39
	sub.f32 	%r7520, %r7519, %r7388;
	sub.f32 	%r7521, %r7519, %r7387;
	.loc	1 159 33                        // hopper-fa-ws-pipelined-pingpong.py:159:33
	ex2.approx.ftz.f32 	%r7522, %r7520;
	ex2.approx.ftz.f32 	%r7523, %r7521;
	.loc	1 161 24                        // hopper-fa-ws-pipelined-pingpong.py:161:24
	mul.f32 	%r11889, %r7522, 0f00000000;
	mul.f32 	%r11887, %r7523, 0f00000000;
$L__tmp11:
	.loc	2 261 15                        // standard.py:261:15 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	add.f32 	%r7524, %r7455, %r7456;
	add.f32 	%r7525, %r7457, %r7458;
	add.f32 	%r7526, %r7524, %r7459;
	add.f32 	%r7527, %r7526, %r7460;
	add.f32 	%r7528, %r7525, %r7461;
	add.f32 	%r7529, %r7528, %r7462;
	add.f32 	%r7530, %r7527, %r7463;
	add.f32 	%r7531, %r7530, %r7464;
	add.f32 	%r7532, %r7529, %r7465;
	add.f32 	%r7533, %r7532, %r7466;
	add.f32 	%r7534, %r7531, %r7467;
	add.f32 	%r7535, %r7534, %r7468;
	add.f32 	%r7536, %r7533, %r7469;
	add.f32 	%r7537, %r7536, %r7470;
	add.f32 	%r7538, %r7535, %r7471;
	add.f32 	%r7539, %r7538, %r7472;
	add.f32 	%r7540, %r7537, %r7473;
	add.f32 	%r7541, %r7540, %r7474;
	add.f32 	%r7542, %r7539, %r7475;
	add.f32 	%r7543, %r7542, %r7476;
	add.f32 	%r7544, %r7541, %r7477;
	add.f32 	%r7545, %r7544, %r7478;
	add.f32 	%r7546, %r7543, %r7479;
	add.f32 	%r7547, %r7546, %r7480;
	add.f32 	%r7548, %r7545, %r7481;
	add.f32 	%r7549, %r7548, %r7482;
	add.f32 	%r7550, %r7547, %r7483;
	add.f32 	%r7551, %r7550, %r7484;
	add.f32 	%r7552, %r7549, %r7485;
	add.f32 	%r7553, %r7552, %r7486;
	add.f32 	%r7554, %r7551, %r7487;
	add.f32 	%r7555, %r7554, %r7488;
	add.f32 	%r7556, %r7553, %r7489;
	add.f32 	%r7557, %r7556, %r7490;
	add.f32 	%r7558, %r7555, %r7491;
	add.f32 	%r7559, %r7558, %r7492;
	add.f32 	%r7560, %r7557, %r7493;
	add.f32 	%r7561, %r7560, %r7494;
	add.f32 	%r7562, %r7559, %r7495;
	add.f32 	%r7563, %r7562, %r7496;
	add.f32 	%r7564, %r7561, %r7497;
	add.f32 	%r7565, %r7564, %r7498;
	add.f32 	%r7566, %r7563, %r7499;
	add.f32 	%r7567, %r7566, %r7500;
	add.f32 	%r7568, %r7565, %r7501;
	add.f32 	%r7569, %r7568, %r7502;
	add.f32 	%r7570, %r7567, %r7503;
	add.f32 	%r7571, %r7570, %r7504;
	add.f32 	%r7572, %r7569, %r7505;
	add.f32 	%r7573, %r7572, %r7506;
	add.f32 	%r7574, %r7571, %r7507;
	add.f32 	%r7575, %r7574, %r7508;
	add.f32 	%r7576, %r7573, %r7509;
	add.f32 	%r7577, %r7576, %r7510;
	add.f32 	%r7578, %r7575, %r7511;
	add.f32 	%r7579, %r7578, %r7512;
	add.f32 	%r7580, %r7577, %r7513;
	add.f32 	%r7581, %r7580, %r7514;
	add.f32 	%r7582, %r7579, %r7515;
	add.f32 	%r7583, %r7582, %r7516;
	add.f32 	%r7584, %r7581, %r7517;
	add.f32 	%r7585, %r7584, %r7518;
	.loc	2 301 36                        // standard.py:301:36 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	shfl.sync.bfly.b32 	%r7586, %r7583, 2, 31, -1;
	.loc	2 261 15                        // standard.py:261:15 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	add.f32 	%r7587, %r7583, %r7586;
	.loc	2 301 36                        // standard.py:301:36 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	shfl.sync.bfly.b32 	%r7588, %r7587, 1, 31, -1;
	.loc	2 261 15                        // standard.py:261:15 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	add.f32 	%r7589, %r7587, %r7588;
	.loc	2 301 36                        // standard.py:301:36 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	shfl.sync.bfly.b32 	%r7590, %r7585, 2, 31, -1;
	.loc	2 261 15                        // standard.py:261:15 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	add.f32 	%r7591, %r7585, %r7590;
	.loc	2 301 36                        // standard.py:301:36 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	shfl.sync.bfly.b32 	%r7592, %r7591, 1, 31, -1;
	.loc	2 261 15                        // standard.py:261:15 @[ hopper-fa-ws-pipelined-pingpong.py:162:29 ]
	add.f32 	%r7593, %r7591, %r7592;
$L__tmp12:
	.loc	1 163 32                        // hopper-fa-ws-pipelined-pingpong.py:163:32
	add.f32 	%r11893, %r7522, %r7589;
	add.f32 	%r11894, %r7523, %r7593;
	mov.b64 	%rd529, {%r7517, %r7518};
	mov.b64 	%rd530, {%r7515, %r7516};
	mov.b64 	%rd531, {%r7513, %r7514};
	mov.b64 	%rd532, {%r7511, %r7512};
	mov.b64 	%rd533, {%r7509, %r7510};
	mov.b64 	%rd534, {%r7507, %r7508};
	mov.b64 	%rd535, {%r7505, %r7506};
	mov.b64 	%rd536, {%r7503, %r7504};
	mov.b64 	%rd537, {%r7501, %r7502};
	mov.b64 	%rd538, {%r7499, %r7500};
	mov.b64 	%rd539, {%r7497, %r7498};
	mov.b64 	%rd540, {%r7495, %r7496};
	mov.b64 	%rd541, {%r7493, %r7494};
	mov.b64 	%rd542, {%r7491, %r7492};
	mov.b64 	%rd543, {%r7489, %r7490};
	mov.b64 	%rd544, {%r7487, %r7488};
	mov.b64 	%rd545, {%r7485, %r7486};
	mov.b64 	%rd546, {%r7483, %r7484};
	mov.b64 	%rd547, {%r7481, %r7482};
	mov.b64 	%rd548, {%r7479, %r7480};
	mov.b64 	%rd549, {%r7477, %r7478};
	mov.b64 	%rd550, {%r7475, %r7476};
	mov.b64 	%rd551, {%r7473, %r7474};
	mov.b64 	%rd552, {%r7471, %r7472};
	mov.b64 	%rd553, {%r7469, %r7470};
	mov.b64 	%rd554, {%r7467, %r7468};
	mov.b64 	%rd555, {%r7465, %r7466};
	mov.b64 	%rd556, {%r7463, %r7464};
	mov.b64 	%rd557, {%r7461, %r7462};
	mov.b64 	%rd558, {%r7459, %r7460};
	mov.b64 	%rd559, {%r7457, %r7458};
	mov.b64 	%rd560, {%r7455, %r7456};
	mov.b32 	%r11959, 1;
	mov.b32 	%r11888, %r11889;
	mov.b32 	%r11886, %r11887;
	mov.b32 	%r11885, %r11889;
	mov.b32 	%r11884, %r11889;
	mov.b32 	%r11883, %r11887;
	mov.b32 	%r11882, %r11887;
	mov.b32 	%r11881, %r11889;
	mov.b32 	%r11880, %r11889;
	mov.b32 	%r11879, %r11887;
	mov.b32 	%r11878, %r11887;
	mov.b32 	%r11877, %r11889;
	mov.b32 	%r11876, %r11889;
	mov.b32 	%r11875, %r11887;
	mov.b32 	%r11874, %r11887;
	mov.b32 	%r11873, %r11889;
	mov.b32 	%r11872, %r11889;
	mov.b32 	%r11871, %r11887;
	mov.b32 	%r11870, %r11887;
	mov.b32 	%r11869, %r11889;
	mov.b32 	%r11868, %r11889;
	mov.b32 	%r11867, %r11887;
	mov.b32 	%r11866, %r11887;
	mov.b32 	%r11865, %r11889;
	mov.b32 	%r11864, %r11889;
	mov.b32 	%r11863, %r11887;
	mov.b32 	%r11862, %r11887;
	mov.b32 	%r11861, %r11889;
	mov.b32 	%r11860, %r11889;
	mov.b32 	%r11859, %r11887;
	mov.b32 	%r11858, %r11887;
	mov.b32 	%r11857, %r11889;
	mov.b32 	%r11856, %r11889;
	mov.b32 	%r11855, %r11887;
	mov.b32 	%r11854, %r11887;
	mov.b32 	%r11853, %r11889;
	mov.b32 	%r11852, %r11889;
	mov.b32 	%r11851, %r11887;
	mov.b32 	%r11850, %r11887;
	mov.b32 	%r11849, %r11889;
	mov.b32 	%r11848, %r11889;
	mov.b32 	%r11847, %r11887;
	mov.b32 	%r11846, %r11887;
	mov.b32 	%r11845, %r11889;
	mov.b32 	%r11844, %r11889;
	mov.b32 	%r11843, %r11887;
	mov.b32 	%r11842, %r11887;
	mov.b32 	%r11841, %r11889;
	mov.b32 	%r11840, %r11889;
	mov.b32 	%r11839, %r11887;
	mov.b32 	%r11838, %r11887;
	mov.b32 	%r11837, %r11889;
	mov.b32 	%r11836, %r11889;
	mov.b32 	%r11835, %r11887;
	mov.b32 	%r11834, %r11887;
	mov.b32 	%r11833, %r11889;
	mov.b32 	%r11832, %r11889;
	mov.b32 	%r11831, %r11887;
	mov.b32 	%r11830, %r11887;
	mov.b32 	%r11829, %r11889;
	mov.b32 	%r11828, %r11889;
	mov.b32 	%r11827, %r11887;
	mov.b32 	%r11826, %r11887;
	.loc	1 168 48                        // hopper-fa-ws-pipelined-pingpong.py:168:48
	@%p62 bra 	$L__BB0_9;
// %bb.7:                               // %.lr.ph1822.preheader
                                        //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 48                          // hopper-fa-ws-pipelined-pingpong.py:0:48
	mov.b64 	%rd13, {%r4, %r4};
	mov.b32 	%r11892, 128;
	mov.b32 	%r11825, 0;
	mov.b32 	%r11823, 1;
	mov.b32 	%r11959, %r11823;
	mov.b32 	%r11826, %r11887;
	mov.b32 	%r11827, %r11887;
	mov.b32 	%r11828, %r11889;
	mov.b32 	%r11829, %r11889;
	mov.b32 	%r11830, %r11887;
	mov.b32 	%r11831, %r11887;
	mov.b32 	%r11832, %r11889;
	mov.b32 	%r11833, %r11889;
	mov.b32 	%r11834, %r11887;
	mov.b32 	%r11835, %r11887;
	mov.b32 	%r11836, %r11889;
	mov.b32 	%r11837, %r11889;
	mov.b32 	%r11838, %r11887;
	mov.b32 	%r11839, %r11887;
	mov.b32 	%r11840, %r11889;
	mov.b32 	%r11841, %r11889;
	mov.b32 	%r11842, %r11887;
	mov.b32 	%r11843, %r11887;
	mov.b32 	%r11844, %r11889;
	mov.b32 	%r11845, %r11889;
	mov.b32 	%r11846, %r11887;
	mov.b32 	%r11847, %r11887;
	mov.b32 	%r11848, %r11889;
	mov.b32 	%r11849, %r11889;
	mov.b32 	%r11850, %r11887;
	mov.b32 	%r11851, %r11887;
	mov.b32 	%r11852, %r11889;
	mov.b32 	%r11853, %r11889;
	mov.b32 	%r11854, %r11887;
	mov.b32 	%r11855, %r11887;
	mov.b32 	%r11856, %r11889;
	mov.b32 	%r11857, %r11889;
	mov.b32 	%r11858, %r11887;
	mov.b32 	%r11859, %r11887;
	mov.b32 	%r11860, %r11889;
	mov.b32 	%r11861, %r11889;
	mov.b32 	%r11862, %r11887;
	mov.b32 	%r11863, %r11887;
	mov.b32 	%r11864, %r11889;
	mov.b32 	%r11865, %r11889;
	mov.b32 	%r11866, %r11887;
	mov.b32 	%r11867, %r11887;
	mov.b32 	%r11868, %r11889;
	mov.b32 	%r11869, %r11889;
	mov.b32 	%r11870, %r11887;
	mov.b32 	%r11871, %r11887;
	mov.b32 	%r11872, %r11889;
	mov.b32 	%r11873, %r11889;
	mov.b32 	%r11874, %r11887;
	mov.b32 	%r11875, %r11887;
	mov.b32 	%r11876, %r11889;
	mov.b32 	%r11877, %r11889;
	mov.b32 	%r11878, %r11887;
	mov.b32 	%r11879, %r11887;
	mov.b32 	%r11880, %r11889;
	mov.b32 	%r11881, %r11889;
	mov.b32 	%r11882, %r11887;
	mov.b32 	%r11883, %r11887;
	mov.b32 	%r11884, %r11889;
	mov.b32 	%r11885, %r11889;
	mov.b32 	%r11886, %r11887;
	mov.b32 	%r11888, %r11889;
$L__BB0_8:                              // %.lr.ph1822
                                        //   Parent Loop BB0_2 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.loc	1 169 37                        // hopper-fa-ws-pipelined-pingpong.py:169:37
	shr.u32 	%r9875, %r11823, 31;
	add.s32 	%r9876, %r11823, %r9875;
	and.b32 	%r9877, %r9876, -2;
	sub.s32 	%r11960, %r11823, %r9877;
	.loc	1 171 49                        // hopper-fa-ws-pipelined-pingpong.py:171:49
	setp.eq.b32 	%p80, %r11960, 0;
	.loc	1 171 37                        // hopper-fa-ws-pipelined-pingpong.py:171:37
	selp.b32 	%r9878, 1, 0, %p80;
	xor.b32 	%r11825, %r11825, %r9878;
	.loc	1 174 41                        // hopper-fa-ws-pipelined-pingpong.py:174:41
	shl.b32 	%r9879, %r11960, 3;
	add.s32 	%r9881, %r602, %r9879;
	add.s32 	%r7597, %r9881, 196640;
	.loc	1 174 52                        // hopper-fa-ws-pipelined-pingpong.py:174:52
	bar.sync 	2, 128;
	// begin inline asm
	
{
	.reg .pred complete;
	waitLoop:
	mbarrier.try_wait.parity.shared.b64 complete, [%r7597], %r11825;
	@!complete bra.uni waitLoop;
}

	// end inline asm
	.loc	1 177 49                        // hopper-fa-ws-pipelined-pingpong.py:177:49
	shl.b32 	%r9882, %r11960, 15;
	add.s32 	%r9883, %r602, %r9882;
	.loc	1 178 49                        // hopper-fa-ws-pipelined-pingpong.py:178:49
	wgmma.fence.sync.aligned;
	bfe.u32 	%r9884, %r9883, 4, 14;
	cvt.u64.u32 	%rd452, %r9884;
	or.b64 	%rd429, %rd452, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r7791,%r7792,%r7793,%r7794,%r7795,%r7796,%r7797,%r7798,%r7799,%r7800,%r7801,%r7802,%r7803,%r7804,%r7805,%r7806,%r7807,%r7808,%r7809,%r7810,%r7811,%r7812,%r7813,%r7814,%r7815,%r7816,%r7817,%r7818,%r7819,%r7820,%r7821,%r7822,%r7823,%r7824,%r7825,%r7826,%r7827,%r7828,%r7829,%r7830,%r7831,%r7832,%r7833,%r7834,%r7835,%r7836,%r7837,%r7838,%r7839,%r7840,%r7841,%r7842,%r7843,%r7844,%r7845,%r7846,%r7847,%r7848,%r7849,%r7850,%r7851,%r7852,%r7853,%r7854}, %rd428, %rd429, 0, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r9885, %r9883, 32;
	bfe.u32 	%r9886, %r9885, 4, 14;
	cvt.u64.u32 	%rd453, %r9886;
	or.b64 	%rd431, %rd453, 4611686293372403712;
	mov.pred 	%p63, -1;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r7791,%r7792,%r7793,%r7794,%r7795,%r7796,%r7797,%r7798,%r7799,%r7800,%r7801,%r7802,%r7803,%r7804,%r7805,%r7806,%r7807,%r7808,%r7809,%r7810,%r7811,%r7812,%r7813,%r7814,%r7815,%r7816,%r7817,%r7818,%r7819,%r7820,%r7821,%r7822,%r7823,%r7824,%r7825,%r7826,%r7827,%r7828,%r7829,%r7830,%r7831,%r7832,%r7833,%r7834,%r7835,%r7836,%r7837,%r7838,%r7839,%r7840,%r7841,%r7842,%r7843,%r7844,%r7845,%r7846,%r7847,%r7848,%r7849,%r7850,%r7851,%r7852,%r7853,%r7854}, %rd430, %rd431, %p63, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r9887, %r9883, 64;
	bfe.u32 	%r9888, %r9887, 4, 14;
	cvt.u64.u32 	%rd454, %r9888;
	or.b64 	%rd433, %rd454, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r7791,%r7792,%r7793,%r7794,%r7795,%r7796,%r7797,%r7798,%r7799,%r7800,%r7801,%r7802,%r7803,%r7804,%r7805,%r7806,%r7807,%r7808,%r7809,%r7810,%r7811,%r7812,%r7813,%r7814,%r7815,%r7816,%r7817,%r7818,%r7819,%r7820,%r7821,%r7822,%r7823,%r7824,%r7825,%r7826,%r7827,%r7828,%r7829,%r7830,%r7831,%r7832,%r7833,%r7834,%r7835,%r7836,%r7837,%r7838,%r7839,%r7840,%r7841,%r7842,%r7843,%r7844,%r7845,%r7846,%r7847,%r7848,%r7849,%r7850,%r7851,%r7852,%r7853,%r7854}, %rd432, %rd433, %p63, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r9889, %r9883, 96;
	bfe.u32 	%r9890, %r9889, 4, 14;
	cvt.u64.u32 	%rd455, %r9890;
	or.b64 	%rd435, %rd455, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r7791,%r7792,%r7793,%r7794,%r7795,%r7796,%r7797,%r7798,%r7799,%r7800,%r7801,%r7802,%r7803,%r7804,%r7805,%r7806,%r7807,%r7808,%r7809,%r7810,%r7811,%r7812,%r7813,%r7814,%r7815,%r7816,%r7817,%r7818,%r7819,%r7820,%r7821,%r7822,%r7823,%r7824,%r7825,%r7826,%r7827,%r7828,%r7829,%r7830,%r7831,%r7832,%r7833,%r7834,%r7835,%r7836,%r7837,%r7838,%r7839,%r7840,%r7841,%r7842,%r7843,%r7844,%r7845,%r7846,%r7847,%r7848,%r7849,%r7850,%r7851,%r7852,%r7853,%r7854}, %rd434, %rd435, %p63, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r9891, %r9883, 16384;
	bfe.u32 	%r9892, %r9891, 4, 14;
	cvt.u64.u32 	%rd456, %r9892;
	or.b64 	%rd437, %rd456, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r7791,%r7792,%r7793,%r7794,%r7795,%r7796,%r7797,%r7798,%r7799,%r7800,%r7801,%r7802,%r7803,%r7804,%r7805,%r7806,%r7807,%r7808,%r7809,%r7810,%r7811,%r7812,%r7813,%r7814,%r7815,%r7816,%r7817,%r7818,%r7819,%r7820,%r7821,%r7822,%r7823,%r7824,%r7825,%r7826,%r7827,%r7828,%r7829,%r7830,%r7831,%r7832,%r7833,%r7834,%r7835,%r7836,%r7837,%r7838,%r7839,%r7840,%r7841,%r7842,%r7843,%r7844,%r7845,%r7846,%r7847,%r7848,%r7849,%r7850,%r7851,%r7852,%r7853,%r7854}, %rd436, %rd437, %p63, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r9893, %r9883, 16416;
	bfe.u32 	%r9894, %r9893, 4, 14;
	cvt.u64.u32 	%rd457, %r9894;
	or.b64 	%rd439, %rd457, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r7791,%r7792,%r7793,%r7794,%r7795,%r7796,%r7797,%r7798,%r7799,%r7800,%r7801,%r7802,%r7803,%r7804,%r7805,%r7806,%r7807,%r7808,%r7809,%r7810,%r7811,%r7812,%r7813,%r7814,%r7815,%r7816,%r7817,%r7818,%r7819,%r7820,%r7821,%r7822,%r7823,%r7824,%r7825,%r7826,%r7827,%r7828,%r7829,%r7830,%r7831,%r7832,%r7833,%r7834,%r7835,%r7836,%r7837,%r7838,%r7839,%r7840,%r7841,%r7842,%r7843,%r7844,%r7845,%r7846,%r7847,%r7848,%r7849,%r7850,%r7851,%r7852,%r7853,%r7854}, %rd438, %rd439, %p63, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r9895, %r9883, 16448;
	bfe.u32 	%r9896, %r9895, 4, 14;
	cvt.u64.u32 	%rd458, %r9896;
	or.b64 	%rd441, %rd458, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r7791,%r7792,%r7793,%r7794,%r7795,%r7796,%r7797,%r7798,%r7799,%r7800,%r7801,%r7802,%r7803,%r7804,%r7805,%r7806,%r7807,%r7808,%r7809,%r7810,%r7811,%r7812,%r7813,%r7814,%r7815,%r7816,%r7817,%r7818,%r7819,%r7820,%r7821,%r7822,%r7823,%r7824,%r7825,%r7826,%r7827,%r7828,%r7829,%r7830,%r7831,%r7832,%r7833,%r7834,%r7835,%r7836,%r7837,%r7838,%r7839,%r7840,%r7841,%r7842,%r7843,%r7844,%r7845,%r7846,%r7847,%r7848,%r7849,%r7850,%r7851,%r7852,%r7853,%r7854}, %rd440, %rd441, %p63, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r9897, %r9883, 16480;
	bfe.u32 	%r9898, %r9897, 4, 14;
	cvt.u64.u32 	%rd459, %r9898;
	or.b64 	%rd443, %rd459, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r7791,%r7792,%r7793,%r7794,%r7795,%r7796,%r7797,%r7798,%r7799,%r7800,%r7801,%r7802,%r7803,%r7804,%r7805,%r7806,%r7807,%r7808,%r7809,%r7810,%r7811,%r7812,%r7813,%r7814,%r7815,%r7816,%r7817,%r7818,%r7819,%r7820,%r7821,%r7822,%r7823,%r7824,%r7825,%r7826,%r7827,%r7828,%r7829,%r7830,%r7831,%r7832,%r7833,%r7834,%r7835,%r7836,%r7837,%r7838,%r7839,%r7840,%r7841,%r7842,%r7843,%r7844,%r7845,%r7846,%r7847,%r7848,%r7849,%r7850,%r7851,%r7852,%r7853,%r7854}, %rd442, %rd443, %p63, 1, 1, 0, 0;
	// end inline asm
	wgmma.commit_group.sync.aligned;
	.loc	1 182 38                        // hopper-fa-ws-pipelined-pingpong.py:182:38
	add.s32 	%r9899, %r11823, -1;
	.loc	1 182 43                        // hopper-fa-ws-pipelined-pingpong.py:182:43
	shr.u32 	%r9900, %r9899, 31;
	add.s32 	%r9901, %r9899, %r9900;
	and.b32 	%r9902, %r9901, -2;
	sub.s32 	%r9903, %r9899, %r9902;
	.loc	1 183 49                        // hopper-fa-ws-pipelined-pingpong.py:183:49
	setp.eq.b32 	%p81, %r9903, 0;
	.loc	1 183 37                        // hopper-fa-ws-pipelined-pingpong.py:183:37
	selp.b32 	%r9904, 1, 0, %p81;
	xor.b32 	%r11959, %r11959, %r9904;
	.loc	1 184 41                        // hopper-fa-ws-pipelined-pingpong.py:184:41
	shl.b32 	%r9905, %r9903, 3;
	add.s32 	%r9906, %r602, %r9905;
	add.s32 	%r8559, %r9906, 196672;
	.loc	1 184 52                        // hopper-fa-ws-pipelined-pingpong.py:184:52
	// begin inline asm
	
{
	.reg .pred complete;
	waitLoop:
	mbarrier.try_wait.parity.shared.b64 complete, [%r8559], %r11959;
	@!complete bra.uni waitLoop;
}

	// end inline asm
	.loc	1 186 25                        // hopper-fa-ws-pipelined-pingpong.py:186:25
	mov.b64 	{%r9907, %r9908}, %rd560;
	cvt.rn.f16x2.f32 	%r8689, %r9908, %r9907;
	mov.b64 	{%r9909, %r9910}, %rd559;
	cvt.rn.f16x2.f32 	%r8690, %r9910, %r9909;
	mov.b64 	{%r9911, %r9912}, %rd558;
	cvt.rn.f16x2.f32 	%r8691, %r9912, %r9911;
	mov.b64 	{%r9913, %r9914}, %rd557;
	cvt.rn.f16x2.f32 	%r8692, %r9914, %r9913;
	mov.b64 	{%r9915, %r9916}, %rd556;
	cvt.rn.f16x2.f32 	%r8821, %r9916, %r9915;
	mov.b64 	{%r9917, %r9918}, %rd555;
	cvt.rn.f16x2.f32 	%r8822, %r9918, %r9917;
	mov.b64 	{%r9919, %r9920}, %rd554;
	cvt.rn.f16x2.f32 	%r8823, %r9920, %r9919;
	mov.b64 	{%r9921, %r9922}, %rd553;
	cvt.rn.f16x2.f32 	%r8824, %r9922, %r9921;
	mov.b64 	{%r9923, %r9924}, %rd552;
	cvt.rn.f16x2.f32 	%r8953, %r9924, %r9923;
	mov.b64 	{%r9925, %r9926}, %rd551;
	cvt.rn.f16x2.f32 	%r8954, %r9926, %r9925;
	mov.b64 	{%r9927, %r9928}, %rd550;
	cvt.rn.f16x2.f32 	%r8955, %r9928, %r9927;
	mov.b64 	{%r9929, %r9930}, %rd549;
	cvt.rn.f16x2.f32 	%r8956, %r9930, %r9929;
	mov.b64 	{%r9931, %r9932}, %rd548;
	cvt.rn.f16x2.f32 	%r9085, %r9932, %r9931;
	mov.b64 	{%r9933, %r9934}, %rd547;
	cvt.rn.f16x2.f32 	%r9086, %r9934, %r9933;
	mov.b64 	{%r9935, %r9936}, %rd546;
	cvt.rn.f16x2.f32 	%r9087, %r9936, %r9935;
	mov.b64 	{%r9937, %r9938}, %rd545;
	cvt.rn.f16x2.f32 	%r9088, %r9938, %r9937;
	mov.b64 	{%r9939, %r9940}, %rd544;
	cvt.rn.f16x2.f32 	%r9217, %r9940, %r9939;
	mov.b64 	{%r9941, %r9942}, %rd543;
	cvt.rn.f16x2.f32 	%r9218, %r9942, %r9941;
	mov.b64 	{%r9943, %r9944}, %rd542;
	cvt.rn.f16x2.f32 	%r9219, %r9944, %r9943;
	mov.b64 	{%r9945, %r9946}, %rd541;
	cvt.rn.f16x2.f32 	%r9220, %r9946, %r9945;
	mov.b64 	{%r9947, %r9948}, %rd540;
	cvt.rn.f16x2.f32 	%r9349, %r9948, %r9947;
	mov.b64 	{%r9949, %r9950}, %rd539;
	cvt.rn.f16x2.f32 	%r9350, %r9950, %r9949;
	mov.b64 	{%r9951, %r9952}, %rd538;
	cvt.rn.f16x2.f32 	%r9351, %r9952, %r9951;
	mov.b64 	{%r9953, %r9954}, %rd537;
	cvt.rn.f16x2.f32 	%r9352, %r9954, %r9953;
	mov.b64 	{%r9955, %r9956}, %rd536;
	cvt.rn.f16x2.f32 	%r9481, %r9956, %r9955;
	mov.b64 	{%r9957, %r9958}, %rd535;
	cvt.rn.f16x2.f32 	%r9482, %r9958, %r9957;
	mov.b64 	{%r9959, %r9960}, %rd534;
	cvt.rn.f16x2.f32 	%r9483, %r9960, %r9959;
	mov.b64 	{%r9961, %r9962}, %rd533;
	cvt.rn.f16x2.f32 	%r9484, %r9962, %r9961;
	mov.b64 	{%r9963, %r9964}, %rd532;
	cvt.rn.f16x2.f32 	%r9613, %r9964, %r9963;
	mov.b64 	{%r9965, %r9966}, %rd531;
	cvt.rn.f16x2.f32 	%r9614, %r9966, %r9965;
	mov.b64 	{%r9967, %r9968}, %rd530;
	cvt.rn.f16x2.f32 	%r9615, %r9968, %r9967;
	mov.b64 	{%r9969, %r9970}, %rd529;
	cvt.rn.f16x2.f32 	%r9616, %r9970, %r9969;
	.loc	1 187 47                        // hopper-fa-ws-pipelined-pingpong.py:187:47
	shl.b32 	%r9971, %r9903, 15;
	add.s32 	%r9972, %r602, %r9971;
	add.s32 	%r9973, %r9972, 65536;
	.loc	1 187 58                        // hopper-fa-ws-pipelined-pingpong.py:187:58
	wgmma.fence.sync.aligned;
	bfe.u32 	%r9974, %r9973, 4, 14;
	cvt.u64.u32 	%rd460, %r9974;
	or.b64 	%rd444, %rd460, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r11889,%r11888,%r11887,%r11886,%r11885,%r11884,%r11883,%r11882,%r11881,%r11880,%r11879,%r11878,%r11877,%r11876,%r11875,%r11874,%r11873,%r11872,%r11871,%r11870,%r11869,%r11868,%r11867,%r11866,%r11865,%r11864,%r11863,%r11862,%r11861,%r11860,%r11859,%r11858,%r11857,%r11856,%r11855,%r11854,%r11853,%r11852,%r11851,%r11850,%r11849,%r11848,%r11847,%r11846,%r11845,%r11844,%r11843,%r11842,%r11841,%r11840,%r11839,%r11838,%r11837,%r11836,%r11835,%r11834,%r11833,%r11832,%r11831,%r11830,%r11829,%r11828,%r11827,%r11826}, {%r8689,%r8690,%r8691,%r8692}, %rd444, %p63, 1, 1, 1;
	// end inline asm
	add.s32 	%r9975, %r9972, 67584;
	bfe.u32 	%r9976, %r9975, 4, 14;
	cvt.u64.u32 	%rd461, %r9976;
	or.b64 	%rd445, %rd461, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r11889,%r11888,%r11887,%r11886,%r11885,%r11884,%r11883,%r11882,%r11881,%r11880,%r11879,%r11878,%r11877,%r11876,%r11875,%r11874,%r11873,%r11872,%r11871,%r11870,%r11869,%r11868,%r11867,%r11866,%r11865,%r11864,%r11863,%r11862,%r11861,%r11860,%r11859,%r11858,%r11857,%r11856,%r11855,%r11854,%r11853,%r11852,%r11851,%r11850,%r11849,%r11848,%r11847,%r11846,%r11845,%r11844,%r11843,%r11842,%r11841,%r11840,%r11839,%r11838,%r11837,%r11836,%r11835,%r11834,%r11833,%r11832,%r11831,%r11830,%r11829,%r11828,%r11827,%r11826}, {%r8821,%r8822,%r8823,%r8824}, %rd445, %p63, 1, 1, 1;
	// end inline asm
	add.s32 	%r9977, %r9972, 69632;
	bfe.u32 	%r9978, %r9977, 4, 14;
	cvt.u64.u32 	%rd462, %r9978;
	or.b64 	%rd446, %rd462, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r11889,%r11888,%r11887,%r11886,%r11885,%r11884,%r11883,%r11882,%r11881,%r11880,%r11879,%r11878,%r11877,%r11876,%r11875,%r11874,%r11873,%r11872,%r11871,%r11870,%r11869,%r11868,%r11867,%r11866,%r11865,%r11864,%r11863,%r11862,%r11861,%r11860,%r11859,%r11858,%r11857,%r11856,%r11855,%r11854,%r11853,%r11852,%r11851,%r11850,%r11849,%r11848,%r11847,%r11846,%r11845,%r11844,%r11843,%r11842,%r11841,%r11840,%r11839,%r11838,%r11837,%r11836,%r11835,%r11834,%r11833,%r11832,%r11831,%r11830,%r11829,%r11828,%r11827,%r11826}, {%r8953,%r8954,%r8955,%r8956}, %rd446, %p63, 1, 1, 1;
	// end inline asm
	add.s32 	%r9979, %r9972, 71680;
	bfe.u32 	%r9980, %r9979, 4, 14;
	cvt.u64.u32 	%rd463, %r9980;
	or.b64 	%rd447, %rd463, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r11889,%r11888,%r11887,%r11886,%r11885,%r11884,%r11883,%r11882,%r11881,%r11880,%r11879,%r11878,%r11877,%r11876,%r11875,%r11874,%r11873,%r11872,%r11871,%r11870,%r11869,%r11868,%r11867,%r11866,%r11865,%r11864,%r11863,%r11862,%r11861,%r11860,%r11859,%r11858,%r11857,%r11856,%r11855,%r11854,%r11853,%r11852,%r11851,%r11850,%r11849,%r11848,%r11847,%r11846,%r11845,%r11844,%r11843,%r11842,%r11841,%r11840,%r11839,%r11838,%r11837,%r11836,%r11835,%r11834,%r11833,%r11832,%r11831,%r11830,%r11829,%r11828,%r11827,%r11826}, {%r9085,%r9086,%r9087,%r9088}, %rd447, %p63, 1, 1, 1;
	// end inline asm
	add.s32 	%r9981, %r9972, 73728;
	bfe.u32 	%r9982, %r9981, 4, 14;
	cvt.u64.u32 	%rd464, %r9982;
	or.b64 	%rd448, %rd464, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r11889,%r11888,%r11887,%r11886,%r11885,%r11884,%r11883,%r11882,%r11881,%r11880,%r11879,%r11878,%r11877,%r11876,%r11875,%r11874,%r11873,%r11872,%r11871,%r11870,%r11869,%r11868,%r11867,%r11866,%r11865,%r11864,%r11863,%r11862,%r11861,%r11860,%r11859,%r11858,%r11857,%r11856,%r11855,%r11854,%r11853,%r11852,%r11851,%r11850,%r11849,%r11848,%r11847,%r11846,%r11845,%r11844,%r11843,%r11842,%r11841,%r11840,%r11839,%r11838,%r11837,%r11836,%r11835,%r11834,%r11833,%r11832,%r11831,%r11830,%r11829,%r11828,%r11827,%r11826}, {%r9217,%r9218,%r9219,%r9220}, %rd448, %p63, 1, 1, 1;
	// end inline asm
	add.s32 	%r9983, %r9972, 75776;
	bfe.u32 	%r9984, %r9983, 4, 14;
	cvt.u64.u32 	%rd465, %r9984;
	or.b64 	%rd449, %rd465, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r11889,%r11888,%r11887,%r11886,%r11885,%r11884,%r11883,%r11882,%r11881,%r11880,%r11879,%r11878,%r11877,%r11876,%r11875,%r11874,%r11873,%r11872,%r11871,%r11870,%r11869,%r11868,%r11867,%r11866,%r11865,%r11864,%r11863,%r11862,%r11861,%r11860,%r11859,%r11858,%r11857,%r11856,%r11855,%r11854,%r11853,%r11852,%r11851,%r11850,%r11849,%r11848,%r11847,%r11846,%r11845,%r11844,%r11843,%r11842,%r11841,%r11840,%r11839,%r11838,%r11837,%r11836,%r11835,%r11834,%r11833,%r11832,%r11831,%r11830,%r11829,%r11828,%r11827,%r11826}, {%r9349,%r9350,%r9351,%r9352}, %rd449, %p63, 1, 1, 1;
	// end inline asm
	add.s32 	%r9985, %r9972, 77824;
	bfe.u32 	%r9986, %r9985, 4, 14;
	cvt.u64.u32 	%rd466, %r9986;
	or.b64 	%rd450, %rd466, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r11889,%r11888,%r11887,%r11886,%r11885,%r11884,%r11883,%r11882,%r11881,%r11880,%r11879,%r11878,%r11877,%r11876,%r11875,%r11874,%r11873,%r11872,%r11871,%r11870,%r11869,%r11868,%r11867,%r11866,%r11865,%r11864,%r11863,%r11862,%r11861,%r11860,%r11859,%r11858,%r11857,%r11856,%r11855,%r11854,%r11853,%r11852,%r11851,%r11850,%r11849,%r11848,%r11847,%r11846,%r11845,%r11844,%r11843,%r11842,%r11841,%r11840,%r11839,%r11838,%r11837,%r11836,%r11835,%r11834,%r11833,%r11832,%r11831,%r11830,%r11829,%r11828,%r11827,%r11826}, {%r9481,%r9482,%r9483,%r9484}, %rd450, %p63, 1, 1, 1;
	// end inline asm
	add.s32 	%r9987, %r9972, 79872;
	bfe.u32 	%r9988, %r9987, 4, 14;
	cvt.u64.u32 	%rd467, %r9988;
	or.b64 	%rd451, %rd467, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r11889,%r11888,%r11887,%r11886,%r11885,%r11884,%r11883,%r11882,%r11881,%r11880,%r11879,%r11878,%r11877,%r11876,%r11875,%r11874,%r11873,%r11872,%r11871,%r11870,%r11869,%r11868,%r11867,%r11866,%r11865,%r11864,%r11863,%r11862,%r11861,%r11860,%r11859,%r11858,%r11857,%r11856,%r11855,%r11854,%r11853,%r11852,%r11851,%r11850,%r11849,%r11848,%r11847,%r11846,%r11845,%r11844,%r11843,%r11842,%r11841,%r11840,%r11839,%r11838,%r11837,%r11836,%r11835,%r11834,%r11833,%r11832,%r11831,%r11830,%r11829,%r11828,%r11827,%r11826}, {%r9613,%r9614,%r9615,%r9616}, %rd451, %p63, 1, 1, 1;
	// end inline asm
	wgmma.commit_group.sync.aligned;
	.loc	1 190 43                        // hopper-fa-ws-pipelined-pingpong.py:190:43
	// begin inline asm
	// wait for regs: %r7791,%r7792,%r7793,%r7794,%r7795,%r7796,%r7797,%r7798,%r7799,%r7800,%r7801,%r7802,%r7803,%r7804,%r7805,%r7806,%r7807,%r7808,%r7809,%r7810,%r7811,%r7812,%r7813,%r7814,%r7815,%r7816,%r7817,%r7818,%r7819,%r7820,%r7821,%r7822,%r7823,%r7824,%r7825,%r7826,%r7827,%r7828,%r7829,%r7830,%r7831,%r7832,%r7833,%r7834,%r7835,%r7836,%r7837,%r7838,%r7839,%r7840,%r7841,%r7842,%r7843,%r7844,%r7845,%r7846,%r7847,%r7848,%r7849,%r7850,%r7851,%r7852,%r7853,%r7854
	wgmma.wait_group.sync.aligned 1;
	// end inline asm
	.loc	1 192 45                        // hopper-fa-ws-pipelined-pingpong.py:192:45
	add.s32 	%r9745, %r9881, 196624;
	.loc	1 192 56                        // hopper-fa-ws-pipelined-pingpong.py:192:56
	bar.sync 	2, 128;
	// begin inline asm
	@%p78 mbarrier.arrive.shared::cta.b64 _, [%r9745];
	// end inline asm
$L__tmp13:
	.loc	2 168 27                        // standard.py:168:27 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	max.f32 	%r9989, %r7791, %r7792;
	max.f32 	%r9990, %r7793, %r7794;
	max.f32 	%r9991, %r9989, %r7795;
	max.f32 	%r9992, %r9991, %r7796;
	max.f32 	%r9993, %r9990, %r7797;
	max.f32 	%r9994, %r9993, %r7798;
	max.f32 	%r9995, %r9992, %r7799;
	max.f32 	%r9996, %r9995, %r7800;
	max.f32 	%r9997, %r9994, %r7801;
	max.f32 	%r9998, %r9997, %r7802;
	max.f32 	%r9999, %r9996, %r7803;
	max.f32 	%r10000, %r9999, %r7804;
	max.f32 	%r10001, %r9998, %r7805;
	max.f32 	%r10002, %r10001, %r7806;
	max.f32 	%r10003, %r10000, %r7807;
	max.f32 	%r10004, %r10003, %r7808;
	max.f32 	%r10005, %r10002, %r7809;
	max.f32 	%r10006, %r10005, %r7810;
	max.f32 	%r10007, %r10004, %r7811;
	max.f32 	%r10008, %r10007, %r7812;
	max.f32 	%r10009, %r10006, %r7813;
	max.f32 	%r10010, %r10009, %r7814;
	max.f32 	%r10011, %r10008, %r7815;
	max.f32 	%r10012, %r10011, %r7816;
	max.f32 	%r10013, %r10010, %r7817;
	max.f32 	%r10014, %r10013, %r7818;
	max.f32 	%r10015, %r10012, %r7819;
	max.f32 	%r10016, %r10015, %r7820;
	max.f32 	%r10017, %r10014, %r7821;
	max.f32 	%r10018, %r10017, %r7822;
	max.f32 	%r10019, %r10016, %r7823;
	max.f32 	%r10020, %r10019, %r7824;
	max.f32 	%r10021, %r10018, %r7825;
	max.f32 	%r10022, %r10021, %r7826;
	max.f32 	%r10023, %r10020, %r7827;
	max.f32 	%r10024, %r10023, %r7828;
	max.f32 	%r10025, %r10022, %r7829;
	max.f32 	%r10026, %r10025, %r7830;
	max.f32 	%r10027, %r10024, %r7831;
	max.f32 	%r10028, %r10027, %r7832;
	max.f32 	%r10029, %r10026, %r7833;
	max.f32 	%r10030, %r10029, %r7834;
	max.f32 	%r10031, %r10028, %r7835;
	max.f32 	%r10032, %r10031, %r7836;
	max.f32 	%r10033, %r10030, %r7837;
	max.f32 	%r10034, %r10033, %r7838;
	max.f32 	%r10035, %r10032, %r7839;
	max.f32 	%r10036, %r10035, %r7840;
	max.f32 	%r10037, %r10034, %r7841;
	max.f32 	%r10038, %r10037, %r7842;
	max.f32 	%r10039, %r10036, %r7843;
	max.f32 	%r10040, %r10039, %r7844;
	max.f32 	%r10041, %r10038, %r7845;
	max.f32 	%r10042, %r10041, %r7846;
	max.f32 	%r10043, %r10040, %r7847;
	max.f32 	%r10044, %r10043, %r7848;
	max.f32 	%r10045, %r10042, %r7849;
	max.f32 	%r10046, %r10045, %r7850;
	max.f32 	%r10047, %r10044, %r7851;
	max.f32 	%r10048, %r10047, %r7852;
	max.f32 	%r10049, %r10046, %r7853;
	max.f32 	%r10050, %r10049, %r7854;
	.loc	2 189 40                        // standard.py:189:40 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	shfl.sync.bfly.b32 	%r10051, %r10048, 2, 31, -1;
	.loc	2 168 27                        // standard.py:168:27 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	max.f32 	%r10052, %r10048, %r10051;
	.loc	2 189 40                        // standard.py:189:40 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	shfl.sync.bfly.b32 	%r10053, %r10052, 1, 31, -1;
	shfl.sync.bfly.b32 	%r10054, %r10050, 2, 31, -1;
	.loc	2 168 27                        // standard.py:168:27 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	max.f32 	%r10055, %r10050, %r10054;
	.loc	2 189 40                        // standard.py:189:40 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	shfl.sync.bfly.b32 	%r10056, %r10055, 1, 31, -1;
	cvt.u64.u32 	%rd468, %r10053;
	cvt.u64.u32 	%rd469, %r10056;
	shl.b64 	%rd470, %rd469, 32;
	or.b64 	%rd471, %rd468, %rd470;
	.loc	2 168 27                        // standard.py:168:27 @[ hopper-fa-ws-pipelined-pingpong.py:195:50 ]
	mov.b64 	{%r10057, %r10058}, %rd471;
	max.f32 	%r10059, %r10055, %r10058;
	max.f32 	%r10060, %r10052, %r10057;
$L__tmp14:
	.loc	1 195 55                        // hopper-fa-ws-pipelined-pingpong.py:195:55
	mov.b64 	{%r10061, %r10062}, %rd13;
	mul.f32 	%r10063, %r10061, %r10060;
	mul.f32 	%r10064, %r10062, %r10059;
	.loc	1 195 39                        // hopper-fa-ws-pipelined-pingpong.py:195:39
	mov.b64 	{%r10065, %r10066}, %rd528;
	max.f32 	%r10067, %r10066, %r10064;
	max.f32 	%r10068, %r10065, %r10063;
	mov.b64 	%rd528, {%r10068, %r10067};
	.loc	1 196 37                        // hopper-fa-ws-pipelined-pingpong.py:196:37
	neg.f32 	%r10069, %r10068;
	fma.rn.f32 	%r10070, %r4, %r7791, %r10069;
	fma.rn.f32 	%r10071, %r4, %r7792, %r10069;
	neg.f32 	%r10072, %r10067;
	fma.rn.f32 	%r10073, %r4, %r7793, %r10072;
	fma.rn.f32 	%r10074, %r4, %r7794, %r10072;
	fma.rn.f32 	%r10075, %r4, %r7795, %r10069;
	fma.rn.f32 	%r10076, %r4, %r7796, %r10069;
	fma.rn.f32 	%r10077, %r4, %r7797, %r10072;
	fma.rn.f32 	%r10078, %r4, %r7798, %r10072;
	fma.rn.f32 	%r10079, %r4, %r7799, %r10069;
	fma.rn.f32 	%r10080, %r4, %r7800, %r10069;
	fma.rn.f32 	%r10081, %r4, %r7801, %r10072;
	fma.rn.f32 	%r10082, %r4, %r7802, %r10072;
	fma.rn.f32 	%r10083, %r4, %r7803, %r10069;
	fma.rn.f32 	%r10084, %r4, %r7804, %r10069;
	fma.rn.f32 	%r10085, %r4, %r7805, %r10072;
	fma.rn.f32 	%r10086, %r4, %r7806, %r10072;
	fma.rn.f32 	%r10087, %r4, %r7807, %r10069;
	fma.rn.f32 	%r10088, %r4, %r7808, %r10069;
	fma.rn.f32 	%r10089, %r4, %r7809, %r10072;
	fma.rn.f32 	%r10090, %r4, %r7810, %r10072;
	fma.rn.f32 	%r10091, %r4, %r7811, %r10069;
	fma.rn.f32 	%r10092, %r4, %r7812, %r10069;
	fma.rn.f32 	%r10093, %r4, %r7813, %r10072;
	fma.rn.f32 	%r10094, %r4, %r7814, %r10072;
	fma.rn.f32 	%r10095, %r4, %r7815, %r10069;
	fma.rn.f32 	%r10096, %r4, %r7816, %r10069;
	fma.rn.f32 	%r10097, %r4, %r7817, %r10072;
	fma.rn.f32 	%r10098, %r4, %r7818, %r10072;
	fma.rn.f32 	%r10099, %r4, %r7819, %r10069;
	fma.rn.f32 	%r10100, %r4, %r7820, %r10069;
	fma.rn.f32 	%r10101, %r4, %r7821, %r10072;
	fma.rn.f32 	%r10102, %r4, %r7822, %r10072;
	fma.rn.f32 	%r10103, %r4, %r7823, %r10069;
	fma.rn.f32 	%r10104, %r4, %r7824, %r10069;
	fma.rn.f32 	%r10105, %r4, %r7825, %r10072;
	fma.rn.f32 	%r10106, %r4, %r7826, %r10072;
	fma.rn.f32 	%r10107, %r4, %r7827, %r10069;
	fma.rn.f32 	%r10108, %r4, %r7828, %r10069;
	fma.rn.f32 	%r10109, %r4, %r7829, %r10072;
	fma.rn.f32 	%r10110, %r4, %r7830, %r10072;
	fma.rn.f32 	%r10111, %r4, %r7831, %r10069;
	fma.rn.f32 	%r10112, %r4, %r7832, %r10069;
	fma.rn.f32 	%r10113, %r4, %r7833, %r10072;
	fma.rn.f32 	%r10114, %r4, %r7834, %r10072;
	fma.rn.f32 	%r10115, %r4, %r7835, %r10069;
	fma.rn.f32 	%r10116, %r4, %r7836, %r10069;
	fma.rn.f32 	%r10117, %r4, %r7837, %r10072;
	fma.rn.f32 	%r10118, %r4, %r7838, %r10072;
	fma.rn.f32 	%r10119, %r4, %r7839, %r10069;
	fma.rn.f32 	%r10120, %r4, %r7840, %r10069;
	fma.rn.f32 	%r10121, %r4, %r7841, %r10072;
	fma.rn.f32 	%r10122, %r4, %r7842, %r10072;
	fma.rn.f32 	%r10123, %r4, %r7843, %r10069;
	fma.rn.f32 	%r10124, %r4, %r7844, %r10069;
	fma.rn.f32 	%r10125, %r4, %r7845, %r10072;
	fma.rn.f32 	%r10126, %r4, %r7846, %r10072;
	fma.rn.f32 	%r10127, %r4, %r7847, %r10069;
	fma.rn.f32 	%r10128, %r4, %r7848, %r10069;
	fma.rn.f32 	%r10129, %r4, %r7849, %r10072;
	fma.rn.f32 	%r10130, %r4, %r7850, %r10072;
	fma.rn.f32 	%r10131, %r4, %r7851, %r10069;
	fma.rn.f32 	%r10132, %r4, %r7852, %r10069;
	fma.rn.f32 	%r10133, %r4, %r7853, %r10072;
	fma.rn.f32 	%r10134, %r4, %r7854, %r10072;
	.loc	1 197 33                        // hopper-fa-ws-pipelined-pingpong.py:197:33
	ex2.approx.ftz.f32 	%r10135, %r10070;
	ex2.approx.ftz.f32 	%r10136, %r10071;
	ex2.approx.ftz.f32 	%r10137, %r10073;
	ex2.approx.ftz.f32 	%r10138, %r10074;
	ex2.approx.ftz.f32 	%r10139, %r10075;
	ex2.approx.ftz.f32 	%r10140, %r10076;
	ex2.approx.ftz.f32 	%r10141, %r10077;
	ex2.approx.ftz.f32 	%r10142, %r10078;
	ex2.approx.ftz.f32 	%r10143, %r10079;
	ex2.approx.ftz.f32 	%r10144, %r10080;
	ex2.approx.ftz.f32 	%r10145, %r10081;
	ex2.approx.ftz.f32 	%r10146, %r10082;
	ex2.approx.ftz.f32 	%r10147, %r10083;
	ex2.approx.ftz.f32 	%r10148, %r10084;
	ex2.approx.ftz.f32 	%r10149, %r10085;
	ex2.approx.ftz.f32 	%r10150, %r10086;
	ex2.approx.ftz.f32 	%r10151, %r10087;
	ex2.approx.ftz.f32 	%r10152, %r10088;
	ex2.approx.ftz.f32 	%r10153, %r10089;
	ex2.approx.ftz.f32 	%r10154, %r10090;
	ex2.approx.ftz.f32 	%r10155, %r10091;
	ex2.approx.ftz.f32 	%r10156, %r10092;
	ex2.approx.ftz.f32 	%r10157, %r10093;
	ex2.approx.ftz.f32 	%r10158, %r10094;
	ex2.approx.ftz.f32 	%r10159, %r10095;
	ex2.approx.ftz.f32 	%r10160, %r10096;
	ex2.approx.ftz.f32 	%r10161, %r10097;
	ex2.approx.ftz.f32 	%r10162, %r10098;
	ex2.approx.ftz.f32 	%r10163, %r10099;
	ex2.approx.ftz.f32 	%r10164, %r10100;
	ex2.approx.ftz.f32 	%r10165, %r10101;
	ex2.approx.ftz.f32 	%r10166, %r10102;
	ex2.approx.ftz.f32 	%r10167, %r10103;
	ex2.approx.ftz.f32 	%r10168, %r10104;
	ex2.approx.ftz.f32 	%r10169, %r10105;
	ex2.approx.ftz.f32 	%r10170, %r10106;
	ex2.approx.ftz.f32 	%r10171, %r10107;
	ex2.approx.ftz.f32 	%r10172, %r10108;
	ex2.approx.ftz.f32 	%r10173, %r10109;
	ex2.approx.ftz.f32 	%r10174, %r10110;
	ex2.approx.ftz.f32 	%r10175, %r10111;
	ex2.approx.ftz.f32 	%r10176, %r10112;
	ex2.approx.ftz.f32 	%r10177, %r10113;
	ex2.approx.ftz.f32 	%r10178, %r10114;
	ex2.approx.ftz.f32 	%r10179, %r10115;
	ex2.approx.ftz.f32 	%r10180, %r10116;
	ex2.approx.ftz.f32 	%r10181, %r10117;
	ex2.approx.ftz.f32 	%r10182, %r10118;
	ex2.approx.ftz.f32 	%r10183, %r10119;
	ex2.approx.ftz.f32 	%r10184, %r10120;
	ex2.approx.ftz.f32 	%r10185, %r10121;
	ex2.approx.ftz.f32 	%r10186, %r10122;
	ex2.approx.ftz.f32 	%r10187, %r10123;
	ex2.approx.ftz.f32 	%r10188, %r10124;
	ex2.approx.ftz.f32 	%r10189, %r10125;
	ex2.approx.ftz.f32 	%r10190, %r10126;
	ex2.approx.ftz.f32 	%r10191, %r10127;
	ex2.approx.ftz.f32 	%r10192, %r10128;
	ex2.approx.ftz.f32 	%r10193, %r10129;
	ex2.approx.ftz.f32 	%r10194, %r10130;
	ex2.approx.ftz.f32 	%r10195, %r10131;
	ex2.approx.ftz.f32 	%r10196, %r10132;
	ex2.approx.ftz.f32 	%r10197, %r10133;
	ex2.approx.ftz.f32 	%r10198, %r10134;
	.loc	1 199 43                        // hopper-fa-ws-pipelined-pingpong.py:199:43
	sub.f32 	%r10199, %r10066, %r10067;
	sub.f32 	%r10200, %r10065, %r10068;
	.loc	1 199 37                        // hopper-fa-ws-pipelined-pingpong.py:199:37
	ex2.approx.ftz.f32 	%r10201, %r10200;
	ex2.approx.ftz.f32 	%r10202, %r10199;
$L__tmp15:
	.loc	2 261 15                        // standard.py:261:15 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	add.f32 	%r10203, %r10135, %r10136;
	add.f32 	%r10204, %r10137, %r10138;
	add.f32 	%r10205, %r10203, %r10139;
	add.f32 	%r10206, %r10205, %r10140;
	add.f32 	%r10207, %r10204, %r10141;
	add.f32 	%r10208, %r10207, %r10142;
	add.f32 	%r10209, %r10206, %r10143;
	add.f32 	%r10210, %r10209, %r10144;
	add.f32 	%r10211, %r10208, %r10145;
	add.f32 	%r10212, %r10211, %r10146;
	add.f32 	%r10213, %r10210, %r10147;
	add.f32 	%r10214, %r10213, %r10148;
	add.f32 	%r10215, %r10212, %r10149;
	add.f32 	%r10216, %r10215, %r10150;
	add.f32 	%r10217, %r10214, %r10151;
	add.f32 	%r10218, %r10217, %r10152;
	add.f32 	%r10219, %r10216, %r10153;
	add.f32 	%r10220, %r10219, %r10154;
	add.f32 	%r10221, %r10218, %r10155;
	add.f32 	%r10222, %r10221, %r10156;
	add.f32 	%r10223, %r10220, %r10157;
	add.f32 	%r10224, %r10223, %r10158;
	add.f32 	%r10225, %r10222, %r10159;
	add.f32 	%r10226, %r10225, %r10160;
	add.f32 	%r10227, %r10224, %r10161;
	add.f32 	%r10228, %r10227, %r10162;
	add.f32 	%r10229, %r10226, %r10163;
	add.f32 	%r10230, %r10229, %r10164;
	add.f32 	%r10231, %r10228, %r10165;
	add.f32 	%r10232, %r10231, %r10166;
	add.f32 	%r10233, %r10230, %r10167;
	add.f32 	%r10234, %r10233, %r10168;
	add.f32 	%r10235, %r10232, %r10169;
	add.f32 	%r10236, %r10235, %r10170;
	add.f32 	%r10237, %r10234, %r10171;
	add.f32 	%r10238, %r10237, %r10172;
	add.f32 	%r10239, %r10236, %r10173;
	add.f32 	%r10240, %r10239, %r10174;
	add.f32 	%r10241, %r10238, %r10175;
	add.f32 	%r10242, %r10241, %r10176;
	add.f32 	%r10243, %r10240, %r10177;
	add.f32 	%r10244, %r10243, %r10178;
	add.f32 	%r10245, %r10242, %r10179;
	add.f32 	%r10246, %r10245, %r10180;
	add.f32 	%r10247, %r10244, %r10181;
	add.f32 	%r10248, %r10247, %r10182;
	add.f32 	%r10249, %r10246, %r10183;
	add.f32 	%r10250, %r10249, %r10184;
	add.f32 	%r10251, %r10248, %r10185;
	add.f32 	%r10252, %r10251, %r10186;
	add.f32 	%r10253, %r10250, %r10187;
	add.f32 	%r10254, %r10253, %r10188;
	add.f32 	%r10255, %r10252, %r10189;
	add.f32 	%r10256, %r10255, %r10190;
	add.f32 	%r10257, %r10254, %r10191;
	add.f32 	%r10258, %r10257, %r10192;
	add.f32 	%r10259, %r10256, %r10193;
	add.f32 	%r10260, %r10259, %r10194;
	add.f32 	%r10261, %r10258, %r10195;
	add.f32 	%r10262, %r10261, %r10196;
	add.f32 	%r10263, %r10260, %r10197;
	add.f32 	%r10264, %r10263, %r10198;
	.loc	2 301 36                        // standard.py:301:36 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	shfl.sync.bfly.b32 	%r10265, %r10262, 2, 31, -1;
	.loc	2 261 15                        // standard.py:261:15 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	add.f32 	%r10266, %r10262, %r10265;
	.loc	2 301 36                        // standard.py:301:36 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	shfl.sync.bfly.b32 	%r10267, %r10266, 1, 31, -1;
	.loc	2 261 15                        // standard.py:261:15 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	add.f32 	%r10268, %r10266, %r10267;
	.loc	2 301 36                        // standard.py:301:36 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	shfl.sync.bfly.b32 	%r10269, %r10264, 2, 31, -1;
	.loc	2 261 15                        // standard.py:261:15 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	add.f32 	%r10270, %r10264, %r10269;
	.loc	2 301 36                        // standard.py:301:36 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	shfl.sync.bfly.b32 	%r10271, %r10270, 1, 31, -1;
	.loc	2 261 15                        // standard.py:261:15 @[ hopper-fa-ws-pipelined-pingpong.py:200:33 ]
	add.f32 	%r10272, %r10270, %r10271;
$L__tmp16:
	.loc	1 202 36                        // hopper-fa-ws-pipelined-pingpong.py:202:36
	fma.rn.f32 	%r11893, %r11893, %r10201, %r10268;
	fma.rn.f32 	%r11894, %r11894, %r10202, %r10272;
	.loc	1 207 44                        // hopper-fa-ws-pipelined-pingpong.py:207:44
	// begin inline asm
	// wait for regs: %r11889,%r11888,%r11887,%r11886,%r11885,%r11884,%r11883,%r11882,%r11881,%r11880,%r11879,%r11878,%r11877,%r11876,%r11875,%r11874,%r11873,%r11872,%r11871,%r11870,%r11869,%r11868,%r11867,%r11866,%r11865,%r11864,%r11863,%r11862,%r11861,%r11860,%r11859,%r11858,%r11857,%r11856,%r11855,%r11854,%r11853,%r11852,%r11851,%r11850,%r11849,%r11848,%r11847,%r11846,%r11845,%r11844,%r11843,%r11842,%r11841,%r11840,%r11839,%r11838,%r11837,%r11836,%r11835,%r11834,%r11833,%r11832,%r11831,%r11830,%r11829,%r11828,%r11827,%r11826
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 209 45                        // hopper-fa-ws-pipelined-pingpong.py:209:45
	add.s32 	%r9874, %r9906, 196656;
	.loc	1 209 56                        // hopper-fa-ws-pipelined-pingpong.py:209:56
	bar.sync 	2, 128;
	// begin inline asm
	@%p78 mbarrier.arrive.shared::cta.b64 _, [%r9874];
	// end inline asm
	.loc	1 210 28                        // hopper-fa-ws-pipelined-pingpong.py:210:28
	mul.f32 	%r11889, %r10201, %r11889;
	mul.f32 	%r11888, %r10201, %r11888;
	mul.f32 	%r11887, %r10202, %r11887;
	mul.f32 	%r11886, %r10202, %r11886;
	mul.f32 	%r11885, %r10201, %r11885;
	mul.f32 	%r11884, %r10201, %r11884;
	mul.f32 	%r11883, %r10202, %r11883;
	mul.f32 	%r11882, %r10202, %r11882;
	mul.f32 	%r11881, %r10201, %r11881;
	mul.f32 	%r11880, %r10201, %r11880;
	mul.f32 	%r11879, %r10202, %r11879;
	mul.f32 	%r11878, %r10202, %r11878;
	mul.f32 	%r11877, %r10201, %r11877;
	mul.f32 	%r11876, %r10201, %r11876;
	mul.f32 	%r11875, %r10202, %r11875;
	mul.f32 	%r11874, %r10202, %r11874;
	mul.f32 	%r11873, %r10201, %r11873;
	mul.f32 	%r11872, %r10201, %r11872;
	mul.f32 	%r11871, %r10202, %r11871;
	mul.f32 	%r11870, %r10202, %r11870;
	mul.f32 	%r11869, %r10201, %r11869;
	mul.f32 	%r11868, %r10201, %r11868;
	mul.f32 	%r11867, %r10202, %r11867;
	mul.f32 	%r11866, %r10202, %r11866;
	mul.f32 	%r11865, %r10201, %r11865;
	mul.f32 	%r11864, %r10201, %r11864;
	mul.f32 	%r11863, %r10202, %r11863;
	mul.f32 	%r11862, %r10202, %r11862;
	mul.f32 	%r11861, %r10201, %r11861;
	mul.f32 	%r11860, %r10201, %r11860;
	mul.f32 	%r11859, %r10202, %r11859;
	mul.f32 	%r11858, %r10202, %r11858;
	mul.f32 	%r11857, %r10201, %r11857;
	mul.f32 	%r11856, %r10201, %r11856;
	mul.f32 	%r11855, %r10202, %r11855;
	mul.f32 	%r11854, %r10202, %r11854;
	mul.f32 	%r11853, %r10201, %r11853;
	mul.f32 	%r11852, %r10201, %r11852;
	mul.f32 	%r11851, %r10202, %r11851;
	mul.f32 	%r11850, %r10202, %r11850;
	mul.f32 	%r11849, %r10201, %r11849;
	mul.f32 	%r11848, %r10201, %r11848;
	mul.f32 	%r11847, %r10202, %r11847;
	mul.f32 	%r11846, %r10202, %r11846;
	mul.f32 	%r11845, %r10201, %r11845;
	mul.f32 	%r11844, %r10201, %r11844;
	mul.f32 	%r11843, %r10202, %r11843;
	mul.f32 	%r11842, %r10202, %r11842;
	mul.f32 	%r11841, %r10201, %r11841;
	mul.f32 	%r11840, %r10201, %r11840;
	mul.f32 	%r11839, %r10202, %r11839;
	mul.f32 	%r11838, %r10202, %r11838;
	mul.f32 	%r11837, %r10201, %r11837;
	mul.f32 	%r11836, %r10201, %r11836;
	mul.f32 	%r11835, %r10202, %r11835;
	mul.f32 	%r11834, %r10202, %r11834;
	mul.f32 	%r11833, %r10201, %r11833;
	mul.f32 	%r11832, %r10201, %r11832;
	mul.f32 	%r11831, %r10202, %r11831;
	mul.f32 	%r11830, %r10202, %r11830;
	mul.f32 	%r11829, %r10201, %r11829;
	mul.f32 	%r11828, %r10201, %r11828;
	mul.f32 	%r11827, %r10202, %r11827;
	mul.f32 	%r11826, %r10202, %r11826;
	.loc	1 168 48                        // hopper-fa-ws-pipelined-pingpong.py:168:48
	add.s32 	%r11892, %r11892, 128;
	mov.b64 	%rd529, {%r10197, %r10198};
	mov.b64 	%rd530, {%r10195, %r10196};
	mov.b64 	%rd531, {%r10193, %r10194};
	mov.b64 	%rd532, {%r10191, %r10192};
	mov.b64 	%rd533, {%r10189, %r10190};
	mov.b64 	%rd534, {%r10187, %r10188};
	mov.b64 	%rd535, {%r10185, %r10186};
	mov.b64 	%rd536, {%r10183, %r10184};
	mov.b64 	%rd537, {%r10181, %r10182};
	mov.b64 	%rd538, {%r10179, %r10180};
	mov.b64 	%rd539, {%r10177, %r10178};
	mov.b64 	%rd540, {%r10175, %r10176};
	mov.b64 	%rd541, {%r10173, %r10174};
	mov.b64 	%rd542, {%r10171, %r10172};
	mov.b64 	%rd543, {%r10169, %r10170};
	mov.b64 	%rd544, {%r10167, %r10168};
	mov.b64 	%rd545, {%r10165, %r10166};
	mov.b64 	%rd546, {%r10163, %r10164};
	mov.b64 	%rd547, {%r10161, %r10162};
	mov.b64 	%rd548, {%r10159, %r10160};
	mov.b64 	%rd549, {%r10157, %r10158};
	mov.b64 	%rd550, {%r10155, %r10156};
	mov.b64 	%rd551, {%r10153, %r10154};
	mov.b64 	%rd552, {%r10151, %r10152};
	mov.b64 	%rd553, {%r10149, %r10150};
	mov.b64 	%rd554, {%r10147, %r10148};
	mov.b64 	%rd555, {%r10145, %r10146};
	mov.b64 	%rd556, {%r10143, %r10144};
	mov.b64 	%rd557, {%r10141, %r10142};
	mov.b64 	%rd558, {%r10139, %r10140};
	mov.b64 	%rd559, {%r10137, %r10138};
	mov.b64 	%rd560, {%r10135, %r10136};
	setp.lt.s32 	%p82, %r11892, %r601;
	add.s32 	%r11823, %r11823, 1;
	@%p82 bra 	$L__BB0_8;
$L__BB0_9:                              // %._crit_edge1823
                                        //   in Loop: Header=BB0_2 Depth=1
	.loc	1 216 45                        // hopper-fa-ws-pipelined-pingpong.py:216:45
	setp.eq.b32 	%p92, %r11960, 0;
	.loc	1 216 33                        // hopper-fa-ws-pipelined-pingpong.py:216:33
	selp.b32 	%r11460, 1, 0, %p92;
	xor.b32 	%r10274, %r11959, %r11460;
	.loc	1 217 37                        // hopper-fa-ws-pipelined-pingpong.py:217:37
	shl.b32 	%r11461, %r11960, 3;
	add.s32 	%r11463, %r602, %r11461;
	add.s32 	%r10273, %r11463, 196672;
	.loc	1 217 48                        // hopper-fa-ws-pipelined-pingpong.py:217:48
	bar.sync 	2, 128;
	// begin inline asm
	
{
	.reg .pred complete;
	waitLoop:
	mbarrier.try_wait.parity.shared.b64 complete, [%r10273], %r10274;
	@!complete bra.uni waitLoop;
}

	// end inline asm
	.loc	1 219 21                        // hopper-fa-ws-pipelined-pingpong.py:219:21
	mov.b64 	{%r11464, %r11465}, %rd560;
	cvt.rn.f16x2.f32 	%r10403, %r11465, %r11464;
	mov.b64 	{%r11466, %r11467}, %rd559;
	cvt.rn.f16x2.f32 	%r10404, %r11467, %r11466;
	mov.b64 	{%r11468, %r11469}, %rd558;
	cvt.rn.f16x2.f32 	%r10405, %r11469, %r11468;
	mov.b64 	{%r11470, %r11471}, %rd557;
	cvt.rn.f16x2.f32 	%r10406, %r11471, %r11470;
	mov.b64 	{%r11472, %r11473}, %rd556;
	cvt.rn.f16x2.f32 	%r10535, %r11473, %r11472;
	mov.b64 	{%r11474, %r11475}, %rd555;
	cvt.rn.f16x2.f32 	%r10536, %r11475, %r11474;
	mov.b64 	{%r11476, %r11477}, %rd554;
	cvt.rn.f16x2.f32 	%r10537, %r11477, %r11476;
	mov.b64 	{%r11478, %r11479}, %rd553;
	cvt.rn.f16x2.f32 	%r10538, %r11479, %r11478;
	mov.b64 	{%r11480, %r11481}, %rd552;
	cvt.rn.f16x2.f32 	%r10667, %r11481, %r11480;
	mov.b64 	{%r11482, %r11483}, %rd551;
	cvt.rn.f16x2.f32 	%r10668, %r11483, %r11482;
	mov.b64 	{%r11484, %r11485}, %rd550;
	cvt.rn.f16x2.f32 	%r10669, %r11485, %r11484;
	mov.b64 	{%r11486, %r11487}, %rd549;
	cvt.rn.f16x2.f32 	%r10670, %r11487, %r11486;
	mov.b64 	{%r11488, %r11489}, %rd548;
	cvt.rn.f16x2.f32 	%r10799, %r11489, %r11488;
	mov.b64 	{%r11490, %r11491}, %rd547;
	cvt.rn.f16x2.f32 	%r10800, %r11491, %r11490;
	mov.b64 	{%r11492, %r11493}, %rd546;
	cvt.rn.f16x2.f32 	%r10801, %r11493, %r11492;
	mov.b64 	{%r11494, %r11495}, %rd545;
	cvt.rn.f16x2.f32 	%r10802, %r11495, %r11494;
	mov.b64 	{%r11496, %r11497}, %rd544;
	cvt.rn.f16x2.f32 	%r10931, %r11497, %r11496;
	mov.b64 	{%r11498, %r11499}, %rd543;
	cvt.rn.f16x2.f32 	%r10932, %r11499, %r11498;
	mov.b64 	{%r11500, %r11501}, %rd542;
	cvt.rn.f16x2.f32 	%r10933, %r11501, %r11500;
	mov.b64 	{%r11502, %r11503}, %rd541;
	cvt.rn.f16x2.f32 	%r10934, %r11503, %r11502;
	mov.b64 	{%r11504, %r11505}, %rd540;
	cvt.rn.f16x2.f32 	%r11063, %r11505, %r11504;
	mov.b64 	{%r11506, %r11507}, %rd539;
	cvt.rn.f16x2.f32 	%r11064, %r11507, %r11506;
	mov.b64 	{%r11508, %r11509}, %rd538;
	cvt.rn.f16x2.f32 	%r11065, %r11509, %r11508;
	mov.b64 	{%r11510, %r11511}, %rd537;
	cvt.rn.f16x2.f32 	%r11066, %r11511, %r11510;
	mov.b64 	{%r11512, %r11513}, %rd536;
	cvt.rn.f16x2.f32 	%r11195, %r11513, %r11512;
	mov.b64 	{%r11514, %r11515}, %rd535;
	cvt.rn.f16x2.f32 	%r11196, %r11515, %r11514;
	mov.b64 	{%r11516, %r11517}, %rd534;
	cvt.rn.f16x2.f32 	%r11197, %r11517, %r11516;
	mov.b64 	{%r11518, %r11519}, %rd533;
	cvt.rn.f16x2.f32 	%r11198, %r11519, %r11518;
	mov.b64 	{%r11520, %r11521}, %rd532;
	cvt.rn.f16x2.f32 	%r11327, %r11521, %r11520;
	mov.b64 	{%r11522, %r11523}, %rd531;
	cvt.rn.f16x2.f32 	%r11328, %r11523, %r11522;
	mov.b64 	{%r11524, %r11525}, %rd530;
	cvt.rn.f16x2.f32 	%r11329, %r11525, %r11524;
	mov.b64 	{%r11526, %r11527}, %rd529;
	cvt.rn.f16x2.f32 	%r11330, %r11527, %r11526;
	.loc	1 220 43                        // hopper-fa-ws-pipelined-pingpong.py:220:43
	shl.b32 	%r11528, %r11960, 15;
	add.s32 	%r11529, %r602, %r11528;
	add.s32 	%r11530, %r11529, 65536;
	.loc	1 220 54                        // hopper-fa-ws-pipelined-pingpong.py:220:54
	wgmma.fence.sync.aligned;
	bfe.u32 	%r11531, %r11530, 4, 14;
	cvt.u64.u32 	%rd480, %r11531;
	or.b64 	%rd472, %rd480, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r11889,%r11888,%r11887,%r11886,%r11885,%r11884,%r11883,%r11882,%r11881,%r11880,%r11879,%r11878,%r11877,%r11876,%r11875,%r11874,%r11873,%r11872,%r11871,%r11870,%r11869,%r11868,%r11867,%r11866,%r11865,%r11864,%r11863,%r11862,%r11861,%r11860,%r11859,%r11858,%r11857,%r11856,%r11855,%r11854,%r11853,%r11852,%r11851,%r11850,%r11849,%r11848,%r11847,%r11846,%r11845,%r11844,%r11843,%r11842,%r11841,%r11840,%r11839,%r11838,%r11837,%r11836,%r11835,%r11834,%r11833,%r11832,%r11831,%r11830,%r11829,%r11828,%r11827,%r11826}, {%r10403,%r10404,%r10405,%r10406}, %rd472, %p54, 1, 1, 1;
	// end inline asm
	add.s32 	%r11532, %r11529, 67584;
	bfe.u32 	%r11533, %r11532, 4, 14;
	cvt.u64.u32 	%rd481, %r11533;
	or.b64 	%rd473, %rd481, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r11889,%r11888,%r11887,%r11886,%r11885,%r11884,%r11883,%r11882,%r11881,%r11880,%r11879,%r11878,%r11877,%r11876,%r11875,%r11874,%r11873,%r11872,%r11871,%r11870,%r11869,%r11868,%r11867,%r11866,%r11865,%r11864,%r11863,%r11862,%r11861,%r11860,%r11859,%r11858,%r11857,%r11856,%r11855,%r11854,%r11853,%r11852,%r11851,%r11850,%r11849,%r11848,%r11847,%r11846,%r11845,%r11844,%r11843,%r11842,%r11841,%r11840,%r11839,%r11838,%r11837,%r11836,%r11835,%r11834,%r11833,%r11832,%r11831,%r11830,%r11829,%r11828,%r11827,%r11826}, {%r10535,%r10536,%r10537,%r10538}, %rd473, %p54, 1, 1, 1;
	// end inline asm
	add.s32 	%r11534, %r11529, 69632;
	bfe.u32 	%r11535, %r11534, 4, 14;
	cvt.u64.u32 	%rd482, %r11535;
	or.b64 	%rd474, %rd482, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r11889,%r11888,%r11887,%r11886,%r11885,%r11884,%r11883,%r11882,%r11881,%r11880,%r11879,%r11878,%r11877,%r11876,%r11875,%r11874,%r11873,%r11872,%r11871,%r11870,%r11869,%r11868,%r11867,%r11866,%r11865,%r11864,%r11863,%r11862,%r11861,%r11860,%r11859,%r11858,%r11857,%r11856,%r11855,%r11854,%r11853,%r11852,%r11851,%r11850,%r11849,%r11848,%r11847,%r11846,%r11845,%r11844,%r11843,%r11842,%r11841,%r11840,%r11839,%r11838,%r11837,%r11836,%r11835,%r11834,%r11833,%r11832,%r11831,%r11830,%r11829,%r11828,%r11827,%r11826}, {%r10667,%r10668,%r10669,%r10670}, %rd474, %p54, 1, 1, 1;
	// end inline asm
	add.s32 	%r11536, %r11529, 71680;
	bfe.u32 	%r11537, %r11536, 4, 14;
	cvt.u64.u32 	%rd483, %r11537;
	or.b64 	%rd475, %rd483, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r11889,%r11888,%r11887,%r11886,%r11885,%r11884,%r11883,%r11882,%r11881,%r11880,%r11879,%r11878,%r11877,%r11876,%r11875,%r11874,%r11873,%r11872,%r11871,%r11870,%r11869,%r11868,%r11867,%r11866,%r11865,%r11864,%r11863,%r11862,%r11861,%r11860,%r11859,%r11858,%r11857,%r11856,%r11855,%r11854,%r11853,%r11852,%r11851,%r11850,%r11849,%r11848,%r11847,%r11846,%r11845,%r11844,%r11843,%r11842,%r11841,%r11840,%r11839,%r11838,%r11837,%r11836,%r11835,%r11834,%r11833,%r11832,%r11831,%r11830,%r11829,%r11828,%r11827,%r11826}, {%r10799,%r10800,%r10801,%r10802}, %rd475, %p54, 1, 1, 1;
	// end inline asm
	add.s32 	%r11538, %r11529, 73728;
	bfe.u32 	%r11539, %r11538, 4, 14;
	cvt.u64.u32 	%rd484, %r11539;
	or.b64 	%rd476, %rd484, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r11889,%r11888,%r11887,%r11886,%r11885,%r11884,%r11883,%r11882,%r11881,%r11880,%r11879,%r11878,%r11877,%r11876,%r11875,%r11874,%r11873,%r11872,%r11871,%r11870,%r11869,%r11868,%r11867,%r11866,%r11865,%r11864,%r11863,%r11862,%r11861,%r11860,%r11859,%r11858,%r11857,%r11856,%r11855,%r11854,%r11853,%r11852,%r11851,%r11850,%r11849,%r11848,%r11847,%r11846,%r11845,%r11844,%r11843,%r11842,%r11841,%r11840,%r11839,%r11838,%r11837,%r11836,%r11835,%r11834,%r11833,%r11832,%r11831,%r11830,%r11829,%r11828,%r11827,%r11826}, {%r10931,%r10932,%r10933,%r10934}, %rd476, %p54, 1, 1, 1;
	// end inline asm
	add.s32 	%r11540, %r11529, 75776;
	bfe.u32 	%r11541, %r11540, 4, 14;
	cvt.u64.u32 	%rd485, %r11541;
	or.b64 	%rd477, %rd485, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r11889,%r11888,%r11887,%r11886,%r11885,%r11884,%r11883,%r11882,%r11881,%r11880,%r11879,%r11878,%r11877,%r11876,%r11875,%r11874,%r11873,%r11872,%r11871,%r11870,%r11869,%r11868,%r11867,%r11866,%r11865,%r11864,%r11863,%r11862,%r11861,%r11860,%r11859,%r11858,%r11857,%r11856,%r11855,%r11854,%r11853,%r11852,%r11851,%r11850,%r11849,%r11848,%r11847,%r11846,%r11845,%r11844,%r11843,%r11842,%r11841,%r11840,%r11839,%r11838,%r11837,%r11836,%r11835,%r11834,%r11833,%r11832,%r11831,%r11830,%r11829,%r11828,%r11827,%r11826}, {%r11063,%r11064,%r11065,%r11066}, %rd477, %p54, 1, 1, 1;
	// end inline asm
	add.s32 	%r11542, %r11529, 77824;
	bfe.u32 	%r11543, %r11542, 4, 14;
	cvt.u64.u32 	%rd486, %r11543;
	or.b64 	%rd478, %rd486, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r11889,%r11888,%r11887,%r11886,%r11885,%r11884,%r11883,%r11882,%r11881,%r11880,%r11879,%r11878,%r11877,%r11876,%r11875,%r11874,%r11873,%r11872,%r11871,%r11870,%r11869,%r11868,%r11867,%r11866,%r11865,%r11864,%r11863,%r11862,%r11861,%r11860,%r11859,%r11858,%r11857,%r11856,%r11855,%r11854,%r11853,%r11852,%r11851,%r11850,%r11849,%r11848,%r11847,%r11846,%r11845,%r11844,%r11843,%r11842,%r11841,%r11840,%r11839,%r11838,%r11837,%r11836,%r11835,%r11834,%r11833,%r11832,%r11831,%r11830,%r11829,%r11828,%r11827,%r11826}, {%r11195,%r11196,%r11197,%r11198}, %rd478, %p54, 1, 1, 1;
	// end inline asm
	add.s32 	%r11544, %r11529, 79872;
	bfe.u32 	%r11545, %r11544, 4, 14;
	cvt.u64.u32 	%rd487, %r11545;
	or.b64 	%rd479, %rd487, 4611686293372403712;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r11889,%r11888,%r11887,%r11886,%r11885,%r11884,%r11883,%r11882,%r11881,%r11880,%r11879,%r11878,%r11877,%r11876,%r11875,%r11874,%r11873,%r11872,%r11871,%r11870,%r11869,%r11868,%r11867,%r11866,%r11865,%r11864,%r11863,%r11862,%r11861,%r11860,%r11859,%r11858,%r11857,%r11856,%r11855,%r11854,%r11853,%r11852,%r11851,%r11850,%r11849,%r11848,%r11847,%r11846,%r11845,%r11844,%r11843,%r11842,%r11841,%r11840,%r11839,%r11838,%r11837,%r11836,%r11835,%r11834,%r11833,%r11832,%r11831,%r11830,%r11829,%r11828,%r11827,%r11826}, {%r11327,%r11328,%r11329,%r11330}, %rd479, %p54, 1, 1, 1;
	// end inline asm
	wgmma.commit_group.sync.aligned;
	.loc	1 222 40                        // hopper-fa-ws-pipelined-pingpong.py:222:40
	// begin inline asm
	// wait for regs: %r11889,%r11888,%r11887,%r11886,%r11885,%r11884,%r11883,%r11882,%r11881,%r11880,%r11879,%r11878,%r11877,%r11876,%r11875,%r11874,%r11873,%r11872,%r11871,%r11870,%r11869,%r11868,%r11867,%r11866,%r11865,%r11864,%r11863,%r11862,%r11861,%r11860,%r11859,%r11858,%r11857,%r11856,%r11855,%r11854,%r11853,%r11852,%r11851,%r11850,%r11849,%r11848,%r11847,%r11846,%r11845,%r11844,%r11843,%r11842,%r11841,%r11840,%r11839,%r11838,%r11837,%r11836,%r11835,%r11834,%r11833,%r11832,%r11831,%r11830,%r11829,%r11828,%r11827,%r11826
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 224 41                        // hopper-fa-ws-pipelined-pingpong.py:224:41
	add.s32 	%r11459, %r11463, 196656;
	.loc	1 224 52                        // hopper-fa-ws-pipelined-pingpong.py:224:52
	bar.sync 	2, 128;
	// begin inline asm
	@%p78 mbarrier.arrive.shared::cta.b64 _, [%r11459];
	// end inline asm
	.loc	1 227 36                        // hopper-fa-ws-pipelined-pingpong.py:227:36
	mov.u32 	%r11546, %ctaid.x;
	.loc	1 228 35                        // hopper-fa-ws-pipelined-pingpong.py:228:35
	mov.u32 	%r11547, %ctaid.y;
	.loc	1 232 47                        // hopper-fa-ws-pipelined-pingpong.py:232:47
	shl.b32 	%r284, %r11546, 7;
	.loc	1 232 37                        // hopper-fa-ws-pipelined-pingpong.py:232:37
	mul.lo.s32 	%r285, %r11547, %r601;
	.loc	1 234 32                        // hopper-fa-ws-pipelined-pingpong.py:234:32
	setp.lt.f32 	%p93, %r11893, 0f00800000;
	mul.f32 	%r11548, %r11893, 0f4B000000;
	selp.f32 	%r287, %r11548, %r11893, %p93;
	selp.f32 	%r11549, 0fC1B80000, 0f00000000, %p93;
	add.s32 	%r11550, %r287, -1060439283;
	and.b32 	%r11551, %r11550, -8388608;
	sub.s32 	%r11552, %r287, %r11551;
	cvt.rn.f32.s32 	%r11553, %r11551;
	mov.b32 	%r11554, 0f34000000;
	fma.rn.ftz.f32 	%r11555, %r11553, %r11554, %r11549;
	add.f32 	%r11556, %r11552, 0fBF800000;
	mov.b32 	%r11557, 0fBE2C7F30;
	mov.b32 	%r11558, 0f3DC6B27F;
	fma.rn.ftz.f32 	%r11559, %r11558, %r11556, %r11557;
	mov.b32 	%r11560, 0f3E2FCF2A;
	fma.rn.ftz.f32 	%r11561, %r11559, %r11556, %r11560;
	mov.b32 	%r11562, 0fBE374E43;
	fma.rn.ftz.f32 	%r11563, %r11561, %r11556, %r11562;
	mov.b32 	%r11564, 0f3E520BF4;
	fma.rn.ftz.f32 	%r11565, %r11563, %r11556, %r11564;
	mov.b32 	%r11566, 0fBE763C8B;
	fma.rn.ftz.f32 	%r11567, %r11565, %r11556, %r11566;
	mov.b32 	%r11568, 0f3E93BF99;
	fma.rn.ftz.f32 	%r11569, %r11567, %r11556, %r11568;
	mov.b32 	%r11570, 0fBEB8AA49;
	fma.rn.ftz.f32 	%r11571, %r11569, %r11556, %r11570;
	mov.b32 	%r11572, 0f3EF6384A;
	fma.rn.ftz.f32 	%r11573, %r11571, %r11556, %r11572;
	mov.b32 	%r11574, 0fBF38AA3B;
	fma.rn.ftz.f32 	%r11575, %r11573, %r11556, %r11574;
	mul.f32 	%r11576, %r11556, %r11575;
	mul.f32 	%r11577, %r11556, %r11576;
	mov.b32 	%r11578, 0f3FB8AA3B;
	fma.rn.ftz.f32 	%r11579, %r11556, %r11578, %r11577;
	add.f32 	%r11961, %r11555, %r11579;
	setp.lt.u32 	%p94, %r287, 2139095040;
	mov.b32 	%r11580, 0f7F800000;
	@%p94 bra 	$L__BB0_11;
// %bb.10:                              // %__nv_fmaf_rn.exit.i.i1384
                                        //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 32                          // hopper-fa-ws-pipelined-pingpong.py:0:32
	fma.rn.ftz.f32 	%r11961, %r287, %r11580, %r11580;
$L__BB0_11:                             // %__nv_log2f.exit1387
                                        //   in Loop: Header=BB0_2 Depth=1
	add.s32 	%r11616, %r285, %r284;
	.loc	1 234 32                        // hopper-fa-ws-pipelined-pingpong.py:234:32
	setp.eq.f32 	%p95, %r287, 0f00000000;
	selp.f32 	%r291, 0fFF800000, %r11961, %p95;
	setp.lt.f32 	%p96, %r11894, 0f00800000;
	mul.f32 	%r11581, %r11894, 0f4B000000;
	selp.f32 	%r292, %r11581, %r11894, %p96;
	selp.f32 	%r11582, 0fC1B80000, 0f00000000, %p96;
	add.s32 	%r11583, %r292, -1060439283;
	and.b32 	%r11584, %r11583, -8388608;
	sub.s32 	%r11585, %r292, %r11584;
	cvt.rn.f32.s32 	%r11586, %r11584;
	fma.rn.ftz.f32 	%r11588, %r11586, %r11554, %r11582;
	add.f32 	%r11589, %r11585, 0fBF800000;
	fma.rn.ftz.f32 	%r11592, %r11558, %r11589, %r11557;
	fma.rn.ftz.f32 	%r11594, %r11592, %r11589, %r11560;
	fma.rn.ftz.f32 	%r11596, %r11594, %r11589, %r11562;
	fma.rn.ftz.f32 	%r11598, %r11596, %r11589, %r11564;
	fma.rn.ftz.f32 	%r11600, %r11598, %r11589, %r11566;
	fma.rn.ftz.f32 	%r11602, %r11600, %r11589, %r11568;
	fma.rn.ftz.f32 	%r11604, %r11602, %r11589, %r11570;
	fma.rn.ftz.f32 	%r11606, %r11604, %r11589, %r11572;
	fma.rn.ftz.f32 	%r11608, %r11606, %r11589, %r11574;
	mul.f32 	%r11609, %r11589, %r11608;
	mul.f32 	%r11610, %r11589, %r11609;
	fma.rn.ftz.f32 	%r11612, %r11589, %r11578, %r11610;
	add.f32 	%r11962, %r11588, %r11612;
	setp.lt.u32 	%p97, %r292, 2139095040;
	@%p97 bra 	$L__BB0_13;
// %bb.12:                              // %__nv_fmaf_rn.exit.i.i1414
                                        //   in Loop: Header=BB0_2 Depth=1
	.loc	1 0 32                          // hopper-fa-ws-pipelined-pingpong.py:0:32
	fma.rn.ftz.f32 	%r11962, %r292, %r11580, %r11580;
$L__BB0_13:                             // %__nv_log2f.exit1417
                                        //   in Loop: Header=BB0_2 Depth=1
	.loc	1 234 32                        // hopper-fa-ws-pipelined-pingpong.py:234:32
	setp.eq.f32 	%p100, %r292, 0f00000000;
	selp.f32 	%r11618, 0fFF800000, %r11962, %p100;
	.loc	1 234 19                        // hopper-fa-ws-pipelined-pingpong.py:234:19
	mov.b64 	{%r11619, %r11620}, %rd528;
	add.f32 	%r11621, %r11619, %r291;
	add.f32 	%r11622, %r11620, %r11618;
	.loc	1 235 24                        // hopper-fa-ws-pipelined-pingpong.py:235:24
	div.full.f32 	%r11623, %r11889, %r11893;
	div.full.f32 	%r11624, %r11888, %r11893;
	div.full.f32 	%r11625, %r11887, %r11894;
	div.full.f32 	%r11626, %r11886, %r11894;
	div.full.f32 	%r11627, %r11885, %r11893;
	div.full.f32 	%r11628, %r11884, %r11893;
	div.full.f32 	%r11629, %r11883, %r11894;
	div.full.f32 	%r11630, %r11882, %r11894;
	div.full.f32 	%r11631, %r11881, %r11893;
	div.full.f32 	%r11632, %r11880, %r11893;
	div.full.f32 	%r11633, %r11879, %r11894;
	div.full.f32 	%r11634, %r11878, %r11894;
	div.full.f32 	%r11635, %r11877, %r11893;
	div.full.f32 	%r11636, %r11876, %r11893;
	div.full.f32 	%r11637, %r11875, %r11894;
	div.full.f32 	%r11638, %r11874, %r11894;
	div.full.f32 	%r11639, %r11873, %r11893;
	div.full.f32 	%r11640, %r11872, %r11893;
	div.full.f32 	%r11641, %r11871, %r11894;
	div.full.f32 	%r11642, %r11870, %r11894;
	div.full.f32 	%r11643, %r11869, %r11893;
	div.full.f32 	%r11644, %r11868, %r11893;
	div.full.f32 	%r11645, %r11867, %r11894;
	div.full.f32 	%r11646, %r11866, %r11894;
	div.full.f32 	%r11647, %r11865, %r11893;
	div.full.f32 	%r11648, %r11864, %r11893;
	div.full.f32 	%r11649, %r11863, %r11894;
	div.full.f32 	%r11650, %r11862, %r11894;
	div.full.f32 	%r11651, %r11861, %r11893;
	div.full.f32 	%r11652, %r11860, %r11893;
	div.full.f32 	%r11653, %r11859, %r11894;
	div.full.f32 	%r11654, %r11858, %r11894;
	div.full.f32 	%r11655, %r11857, %r11893;
	div.full.f32 	%r11656, %r11856, %r11893;
	div.full.f32 	%r11657, %r11855, %r11894;
	div.full.f32 	%r11658, %r11854, %r11894;
	div.full.f32 	%r11659, %r11853, %r11893;
	div.full.f32 	%r11660, %r11852, %r11893;
	div.full.f32 	%r11661, %r11851, %r11894;
	div.full.f32 	%r11662, %r11850, %r11894;
	div.full.f32 	%r11663, %r11849, %r11893;
	div.full.f32 	%r11664, %r11848, %r11893;
	div.full.f32 	%r11665, %r11847, %r11894;
	div.full.f32 	%r11666, %r11846, %r11894;
	div.full.f32 	%r11667, %r11845, %r11893;
	div.full.f32 	%r11668, %r11844, %r11893;
	div.full.f32 	%r11669, %r11843, %r11894;
	div.full.f32 	%r11670, %r11842, %r11894;
	div.full.f32 	%r11671, %r11841, %r11893;
	div.full.f32 	%r11672, %r11840, %r11893;
	div.full.f32 	%r11673, %r11839, %r11894;
	div.full.f32 	%r11674, %r11838, %r11894;
	div.full.f32 	%r11675, %r11837, %r11893;
	div.full.f32 	%r11676, %r11836, %r11893;
	div.full.f32 	%r11677, %r11835, %r11894;
	div.full.f32 	%r11678, %r11834, %r11894;
	div.full.f32 	%r11679, %r11833, %r11893;
	div.full.f32 	%r11680, %r11832, %r11893;
	div.full.f32 	%r11681, %r11831, %r11894;
	div.full.f32 	%r11682, %r11830, %r11894;
	div.full.f32 	%r11683, %r11829, %r11893;
	div.full.f32 	%r11684, %r11828, %r11893;
	div.full.f32 	%r11685, %r11827, %r11894;
	div.full.f32 	%r11686, %r11826, %r11894;
	.loc	1 236 76                        // hopper-fa-ws-pipelined-pingpong.py:236:76
	and.b32 	%r11687, %r1, 63;
	.loc	1 236 63                        // hopper-fa-ws-pipelined-pingpong.py:236:63
	or.b32 	%r11688, %r284, %r11687;
	.loc	1 237 25                        // hopper-fa-ws-pipelined-pingpong.py:237:25
	mad.wide.s32 	%rd490, %r285, 4, %rd287;
	.loc	1 237 42                        // hopper-fa-ws-pipelined-pingpong.py:237:42
	mad.wide.s32 	%rd488, %r11688, 4, %rd490;
	.loc	1 238 29                        // hopper-fa-ws-pipelined-pingpong.py:238:29
	bar.sync 	2, 128;
	shl.b32 	%r11689, %r1, 1;
	and.b32 	%r11690, %r11689, 248;
	add.s32 	%r11692, %r602, 163840;
	add.s32 	%r11693, %r11692, %r11690;
	st.shared.v2.b32 	[%r11693], {%r11621, %r11622};
	bar.sync 	2, 128;
	and.b32 	%r11694, %r1, 7;
	shl.b32 	%r11695, %r11694, 3;
	shl.b32 	%r11696, %r1, 2;
	and.b32 	%r11697, %r11696, 192;
	shr.u32 	%r11698, %r1, 1;
	and.b32 	%r11699, %r11698, 4;
	add.s32 	%r11700, %r11692, %r11695;
	add.s32 	%r11701, %r11700, %r11697;
	add.s32 	%r11702, %r11701, %r11699;
	ld.shared.b32 	%r11614, [%r11702];
	and.b32 	%r11703, %r1, 64;
	setp.eq.b32 	%p98, %r11703, 0;
	// begin inline asm
	@%p98 st.global.b32 [ %rd488 + 0 ], { %r11614 };
	// end inline asm
	.loc	1 239 56                        // hopper-fa-ws-pipelined-pingpong.py:239:56
	cvt.rn.f16x2.f32 	%r11704, %r11624, %r11623;
	cvt.rn.f16x2.f32 	%r11705, %r11626, %r11625;
	cvt.rn.f16x2.f32 	%r11706, %r11628, %r11627;
	cvt.rn.f16x2.f32 	%r11707, %r11630, %r11629;
	cvt.rn.f16x2.f32 	%r11708, %r11632, %r11631;
	cvt.rn.f16x2.f32 	%r11709, %r11634, %r11633;
	cvt.rn.f16x2.f32 	%r11710, %r11636, %r11635;
	cvt.rn.f16x2.f32 	%r11711, %r11638, %r11637;
	cvt.rn.f16x2.f32 	%r11712, %r11640, %r11639;
	cvt.rn.f16x2.f32 	%r11713, %r11642, %r11641;
	cvt.rn.f16x2.f32 	%r11714, %r11644, %r11643;
	cvt.rn.f16x2.f32 	%r11715, %r11646, %r11645;
	cvt.rn.f16x2.f32 	%r11716, %r11648, %r11647;
	cvt.rn.f16x2.f32 	%r11717, %r11650, %r11649;
	cvt.rn.f16x2.f32 	%r11718, %r11652, %r11651;
	cvt.rn.f16x2.f32 	%r11719, %r11654, %r11653;
	cvt.rn.f16x2.f32 	%r11720, %r11656, %r11655;
	cvt.rn.f16x2.f32 	%r11721, %r11658, %r11657;
	cvt.rn.f16x2.f32 	%r11722, %r11660, %r11659;
	cvt.rn.f16x2.f32 	%r11723, %r11662, %r11661;
	cvt.rn.f16x2.f32 	%r11724, %r11664, %r11663;
	cvt.rn.f16x2.f32 	%r11725, %r11666, %r11665;
	cvt.rn.f16x2.f32 	%r11726, %r11668, %r11667;
	cvt.rn.f16x2.f32 	%r11727, %r11670, %r11669;
	cvt.rn.f16x2.f32 	%r11728, %r11672, %r11671;
	cvt.rn.f16x2.f32 	%r11729, %r11674, %r11673;
	cvt.rn.f16x2.f32 	%r11730, %r11676, %r11675;
	cvt.rn.f16x2.f32 	%r11731, %r11678, %r11677;
	cvt.rn.f16x2.f32 	%r11732, %r11680, %r11679;
	cvt.rn.f16x2.f32 	%r11733, %r11682, %r11681;
	cvt.rn.f16x2.f32 	%r11734, %r11684, %r11683;
	cvt.rn.f16x2.f32 	%r11735, %r11686, %r11685;
	.loc	1 239 49                        // hopper-fa-ws-pipelined-pingpong.py:239:49
	bar.sync 	2, 128;
	shl.b32 	%r11736, %r1, 7;
	and.b32 	%r11737, %r11736, 1920;
	shl.b32 	%r11738, %r1, 6;
	and.b32 	%r11739, %r11738, 6144;
	shl.b32 	%r11740, %r11694, 4;
	and.b32 	%r11741, %r1, 16;
	or.b32 	%r11742, %r11737, %r11740;
	xor.b32 	%r11743, %r11742, %r11741;
	or.b32 	%r11744, %r11743, %r11739;
	add.s32 	%r11745, %r11692, %r11744;
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r11745], {%r11704, %r11705, %r11706, %r11707};
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r11745+8192], {%r11720, %r11721, %r11722, %r11723};
	xor.b32 	%r11746, %r11744, 32;
	add.s32 	%r11747, %r11692, %r11746;
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r11747], {%r11708, %r11709, %r11710, %r11711};
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r11747+8192], {%r11724, %r11725, %r11726, %r11727};
	xor.b32 	%r11748, %r11744, 64;
	add.s32 	%r11749, %r11692, %r11748;
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r11749], {%r11712, %r11713, %r11714, %r11715};
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r11749+8192], {%r11728, %r11729, %r11730, %r11731};
	xor.b32 	%r11750, %r11744, 96;
	add.s32 	%r11751, %r11692, %r11750;
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r11751], {%r11716, %r11717, %r11718, %r11719};
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r11751+8192], {%r11732, %r11733, %r11734, %r11735};
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	2, 128;
	elect.sync 	%r11752|%p101, -1;
	setp.lt.u32 	%p102, %r6, 64;
	and.pred 	%p99, %p102, %p101;
	and.b32 	%r11753, %r5, 1;
	shl.b32 	%r11754, %r11753, 13;
	add.s32 	%r11617, %r11692, %r11754;
	shl.b32 	%r11615, %r11753, 6;
	// begin inline asm
	@%p99 cp.async.bulk.tensor.2d.global.shared::cta.bulk_group [%rd1, {%r11615, %r11616}], [%r11617];
	// end inline asm
	cp.async.bulk.commit_group;
	cp.async.bulk.wait_group.read 	0;
	bar.sync 	2, 128;
	barrier.sync 	1;
	setmaxnreg.dec.sync.aligned.u32 	120;
	bra.uni 	$L__BB0_2;
$L__tmp17:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/root/triton-runner/examples/runner/tlx/v3.4.0/python/hopper-fa-ws-pipelined-pingpong.py"
	.file	2 "/root/triton/python/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 263                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x100 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 104                                 // DW_AT_name
.b8 111
.b8 112
.b8 112
.b8 101
.b8 114
.b8 45
.b8 102
.b8 97
.b8 45
.b8 119
.b8 115
.b8 45
.b8 112
.b8 105
.b8 112
.b8 101
.b8 108
.b8 105
.b8 110
.b8 101
.b8 100
.b8 45
.b8 112
.b8 105
.b8 110
.b8 103
.b8 112
.b8 111
.b8 110
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 114
.b8 111
.b8 111
.b8 116
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 45
.b8 114
.b8 117
.b8 110
.b8 110
.b8 101
.b8 114
.b8 47
.b8 101
.b8 120
.b8 97
.b8 109
.b8 112
.b8 108
.b8 101
.b8 115
.b8 47
.b8 114
.b8 117
.b8 110
.b8 110
.b8 101
.b8 114
.b8 47
.b8 116
.b8 108
.b8 120
.b8 47
.b8 118
.b8 51
.b8 46
.b8 52
.b8 46
.b8 48
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 0
.b8 2                                   // Abbrev [2] 0x72:0x22 DW_TAG_subprogram
.b8 95                                  // DW_AT_name
.b8 97
.b8 116
.b8 116
.b8 110
.b8 95
.b8 102
.b8 119
.b8 100
.b8 95
.b8 119
.b8 115
.b8 95
.b8 112
.b8 105
.b8 112
.b8 101
.b8 108
.b8 105
.b8 110
.b8 101
.b8 100
.b8 95
.b8 112
.b8 105
.b8 110
.b8 103
.b8 112
.b8 111
.b8 110
.b8 103
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x94:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 114                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa9:0x18 DW_TAG_inlined_subroutine
.b32 114                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 155                                 // DW_AT_call_line
.b8 46                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc1:0x18 DW_TAG_inlined_subroutine
.b32 114                                // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp12                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 162                                 // DW_AT_call_line
.b8 29                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd9:0x18 DW_TAG_inlined_subroutine
.b32 114                                // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp14                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 195                                 // DW_AT_call_line
.b8 50                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf1:0x18 DW_TAG_inlined_subroutine
.b32 114                                // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp16                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 200                                 // DW_AT_call_line
.b8 33                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
